// Code generated by protoc-gen-go.
// source: error.proto
// DO NOT EDIT!

package pbmsg

import proto "github.com/golang/protobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

// ------------------------------------------------------------------------------
// 错误码定义
// ------------------------------------------------------------------------------
type EMsgErr int32

const (
	// --------------------------------------------------------------------------
	//
	// --------------------------------------------------------------------------
	EMsgErr_Success EMsgErr = 0
	EMsgErr_Invalid EMsgErr = -1
	// --------------------------------------------------------------------------
	// 系统相关[1, 9]
	// --------------------------------------------------------------------------
	EMsgErr_System_Err          EMsgErr = 1
	EMsgErr_System_OutMem       EMsgErr = 2
	EMsgErr_Session_Invalid     EMsgErr = 3
	EMsgErr_Replay              EMsgErr = 4
	EMsgErr_Session_No_Firstmsg EMsgErr = 5
	EMsgErr_Session_Msg_Invalid EMsgErr = 6
	EMsgErr_In_Combat           EMsgErr = 7
)

var EMsgErr_name = map[int32]string{
	0:  "Success",
	-1: "Invalid",
	1:  "System_Err",
	2:  "System_OutMem",
	3:  "Session_Invalid",
	4:  "Replay",
	5:  "Session_No_Firstmsg",
	6:  "Session_Msg_Invalid",
	7:  "In_Combat",
}
var EMsgErr_value = map[string]int32{
	"Success":             0,
	"Invalid":             -1,
	"System_Err":          1,
	"System_OutMem":       2,
	"Session_Invalid":     3,
	"Replay":              4,
	"Session_No_Firstmsg": 5,
	"Session_Msg_Invalid": 6,
	"In_Combat":           7,
}

func (x EMsgErr) Enum() *EMsgErr {
	p := new(EMsgErr)
	*p = x
	return p
}
func (x EMsgErr) String() string {
	return proto.EnumName(EMsgErr_name, int32(x))
}
func (x *EMsgErr) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EMsgErr_value, data, "EMsgErr")
	if err != nil {
		return err
	}
	*x = EMsgErr(value)
	return nil
}

// ------------------------------------------------------------------------------
// 错误码消息
// ------------------------------------------------------------------------------
type NsError struct {
	ErrCode          *int32 `protobuf:"varint,1,req,name=err_code" json:"err_code,omitempty"`
	MsgId            *int32 `protobuf:"varint,2,opt,name=msg_id" json:"msg_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *NsError) Reset()         { *m = NsError{} }
func (m *NsError) String() string { return proto.CompactTextString(m) }
func (*NsError) ProtoMessage()    {}

func (m *NsError) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *NsError) GetMsgId() int32 {
	if m != nil && m.MsgId != nil {
		return *m.MsgId
	}
	return 0
}

func init() {
	//proto.RegisterEnum("pbmsg.EMsgErr", EMsgErr_name, EMsgErr_value)
}
