---
--- Generated by EmmyLua(https:--github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/11/5 14:23
---

local FishServerExcel = require("mgby_fish_sever")

FishDistribute = {}

function FishDistribute:New()
    c = {
        FishKindID = 0, -- 鱼的类型
        CreateTime = 0, --创建时间
        DistributeIntervalTime = 0, -- 下次生成鱼的时间是一个间隔，保存这个随机间隔

        -- 同时生成多条鱼，并且路径相同，路上有时间差
        BuildNumber = 0, -- 生成鱼的数量
        FirstPathID = 0, -- 鱼的路径
        CreateType = 0, -- 生成下条鱼的方式， 1表示一条路径，不做位置偏移， 2表示要做位置偏移

        NextCreateTime = 0, -- 下条鱼的时间起始时间
        NextInterBuildTime = 0, -- 下条鱼的生成时间间隔
    }
    setmetatable(c, self)
    self.__index = self
    return c
end

----获取生成时间间隔
function FishDistribute:GetIntervalTime(kindId)
    kindId  = tostring(kindId)          -- 这里要注意，之所以用string是因为用int，消耗内存大
    -- 获取时间间隔
    local DistributeIntervalMin = FishServerExcel[kindId].distribute_interval_min
    local DistributeIntervalMax = FishServerExcel[kindId].distribute_interval_max

    local re = GetRandom(DistributeIntervalMin,DistributeIntervalMax)
    return re
end
----获取生成数量间隔
function FishDistribute:GetCount(kindId)
    kindId  = tostring(kindId)          -- 这里要注意，之所以用string是因为用int，消耗内存大
    -- 获取时间间隔
    local DistributeIntervalMin = FishServerExcel[kindId].count_min
    local DistributeIntervalMax = FishServerExcel[kindId].count_max

    return GetRandom(DistributeIntervalMin,DistributeIntervalMax)
end
----多条鱼生成时间间隔
function FishDistribute:GetCountFishTime(kindId)
    kindId  = tostring(kindId)          -- 这里要注意，之所以用string是因为用int，消耗内存大
    -- 获取时间间隔
    local DistributeIntervalMin = FishServerExcel[kindId].time_min
    local DistributeIntervalMax = FishServerExcel[kindId].time_max

    return GetRandom(DistributeIntervalMin,DistributeIntervalMax)
end

----获取路径的类型
function FishDistribute:GetPathType()
    return 1
end

----获得路径位置偏移
function FishDistribute:GetOffsetXY()
    local offset = {{0,0}, {-1,1}, {-0.5,1},{0,1},{0.5,1},{1,1},
    {-1,0.5}, {-0.5,0.5},{0,0.5},{0.5,0.5},{1,0.5},{-1,1},{1,0},
    {-1,-0.5}, {-0.5,-0.5},{0,-0.5},{0.5,-0.5},{1,-0.5},
    {-1,-1}, {-0.5,-1},{0,-1},{0.5,-1},{1,-1}}

    return offset[GetRandom(1,23)]
end


