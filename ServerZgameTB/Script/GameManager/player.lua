---
--- Generated by EmmyLua(https:--github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/11/2 16:37
---


--------------------------------------------------------------------------------------
--- player 的数据是玩家的游戏中的数据
--- 这里直接定义成员变量， 但是不写成员函数，就不用reload
--- 这里要注意一点：  当热更新的时候， 所有的已经创建好的player对象是存在的， 结构也是老的结构， 如果你增加了字段，修改了字段，需要进行reload的单独数据处理
--------------------------------------------------------------------------------------



Player = {}
function Player:New(user)
    local c = {
        User = user, -- user数据

        TableID = TABLE_CHAIR_NOBODY, -- 桌子id
        ChairID = TABLE_CHAIR_NOBODY, -- 椅子id

        IsRobot = false, -- 是不是机器人
        ActivityBulletNum = 0, --当前已经发射的子弹数量

        GameType = GameHall, -- 游戏类型

        NetWorkState = true, -- 网络状态正常
        NetWorkCloseTimer = 0, -- 等待玩家断线重连的时间倒计时

        -- 推币 ----------------------------------------------------------------

        -- 模式开启标识
        WheelOpen = 0 ,         -- 轮盘开启标识
        BloodOpen = 0 ,         -- 热血模式开启标识


        --老虎机
        m_llTigerLastAward = 0, --老虎机最后一次奖励

        m_llQualifyingReward = 0, --竞技赛奖励


        -- 轮盘  ------------------------------------------
        m_dwRouletteCurReward = 0, --当前轮盘中奖值
        m_wRouletteDoubleTimes = 0, --每次轮盘后可猜双倍的次数
        m_eRouletteCurType = 0, --当前轮盘中奖项，是1 - 7


        -- 作弊检查 ----------------------------------
        m_dwStarRoundCoin = 0, --上次大满贯开始投币数
        m_mapUserTigerLastTriggerCoinNum = 0, -- 触发老虎机的投币数量
        m_mapUserPokerLastTriggerCoinNum = 0, -- 触发翻牌的投币数量

        m_mapUserTigerCoinNum = 0, -- 老虎机投币达到一定数量之后，下面2个判断清空
        m_mapUserTigerTriggerTimes = 0, -- 触发次数过高的判断
        m_mapUserTigerLastTimeStamp = 0, -- 触发间隔太短的判断

        m_mapUserPokerCoinNum = 0, -- 翻牌投币达到一定数量之后，下面2个判断清空
        m_mapUserPokerTriggerTimes = 0, -- 触发次数过高的判断
        m_mapUserPokerLastTimeStamp = 0, -- 触发间隔太短的判断



        -- 热血模式 -------------------------
        BloodModeOpenDoor = {}      -- 开门的数组
        --m_eBloodState = false, --热血模式状态
        --m_iBloodContinueTimes = 0, --热血模式可继续次数
        --m_iBloodCurRoundRemainSeconds = 0, --热血模式当前回合剩余秒数
        --m_wBloodModePassCoinNum = 0, --热血模式经过机关的金币额外个数(校验用)
        --m_wBloodModeCurRoundCoinNum = 0, --热血模式当前回合投币数  --20160315 变为投币数 * 奖励倍数
        --m_wBloodModeNextRoundCondition = 0, --进入下回和目标数

    }
    setmetatable(c, self)
    self.__index = self
    return c
end

function Player:Reload(c)
    setmetatable(c, self)
    self.__index = self

    -- 如果热更新有改动成员变量的定义的话， 下面需要进行成员变量的处理
    -- 比如 1 增加了字段， 那么你需要将老数据进行， 新字段的初始化
    -- 比如 2 删除了字段， 那么你需要将老数据进行， 老字段=nil
    -- 比如 3 修改了字段， 那么你需要将老数据进行， 老字段=nil， 新字段初始化或者进行赋值处理

end

-------------------------通用-----------------------------
-- 获取用户的桌子句柄
function Player:GetTable()
    local game = GetGameByID(self.GameType)
    local table = game:GetTableByUID(self.TableID)
    return table
end

-- 用户违规行为
function Player:AddConfineUser()
    self.User.ConfineLevel  = self.User.ConfineLevel + 1
end


