---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/12/11 15:36
---

------------------------------------------------------------------------------------------
--- 这里有2种方式调用mysql
--- 第一种是通过go调用，适用于对性能有要求，并且没有返回的情况
--- 第二种是通过lua调用， 性能会差很多，会有延迟， 但是可以获取到select的返回值，并且是table类型的
------------------------------------------------------------------------------------------



--------------------------------按照时间，进行流水的记录-----------------------------------------

--保存服务器状态信息，是按照时间保存的，可以看历史记录-----------------------------
function SqlSaveServerState(state)
    local time= GetOsDateNow()
    local sql = string.format("insert into server_state (server_ip,time,table_num,player_num,rece_num,send_num, write_chan, head_err , heap_inuse, network_delay ) values ('%s','%s', %d,%d,%d,%d,%d,%d,%d,%d)",
            ServerIP_Port,time,state.TableNum,state.PlayerNum,state.ReceiveNum,state.SendNum,state.WriteChannelNum,state.HeadErrorNum , state.HeapInUse, state.NetWorkDelay)
    --print(sql)
    --MysqlExec(sql) -- 性能慢
    ZMySqlExec(sql) -- 性能快
end





--保存游戏状态信息，是按照时间保存的，可以看历史记录-----------------------------
function SqlSaveGameStateRecord(gameType,tableId,state)
    local game = GetGameByID(gameType)
    local gameTable = game:GetTableByUID(tableId)
    local time= GetOsDateNow()

    -- 调试输出
    --printTable(gameTable.PlayerWinTopList)
    --printTable(gameTable.PlayerLostTopList)
    --print(gameTable.PlayerWinTopList[1].uid)
    --print(gameTable.PlayerWinTopList[1].score)

    local sql = string.format([[
    insert into game_state_record
    (server_ip,time,game_id,table_id,seat_array,pool_all,jackpot , reward_rate, player_win1,player_win2,player_win3, player_win4, player_win5, player_lost1, player_lost2, player_lost3)
    values ('%s','%s', %d,%d,%d,%d,%d ,  '%s',    '%s','%s','%s','%s','%s','%s','%s','%s' )
    ]],
            ServerIP_Port,time,gameType,tableId,state.SeatArray, state.PoolAll,state.Jackpot  , state.RewardRate,
            gameTable.PlayerWinTopList[1].score.." : "..gameTable.PlayerWinTopList[1].uid,
            gameTable.PlayerWinTopList[2].score.." : "..gameTable.PlayerWinTopList[2].uid,
            gameTable.PlayerWinTopList[3].score.." : "..gameTable.PlayerWinTopList[3].uid,
            gameTable.PlayerWinTopList[4].score.." : "..gameTable.PlayerWinTopList[4].uid,
            gameTable.PlayerWinTopList[5].score.." : "..gameTable.PlayerWinTopList[5].uid,
            gameTable.PlayerLostTopList[1].score.." : "..gameTable.PlayerLostTopList[1].uid,
            gameTable.PlayerLostTopList[2].score.." : "..gameTable.PlayerLostTopList[2].uid,
            gameTable.PlayerLostTopList[3].score.." : "..gameTable.PlayerLostTopList[3].uid
    )
    --print(sql)
    ZMySqlExec(sql) -- 性能快
end









-------------------------------------游戏当前状态，实时的---------------------------------------------

--保存桌子状态信息，当前的运行信息，桌子销毁就删掉-----------------------------
function SqlSaveGameState(gameType,tableId, state)

    local key = ServerIP_Port.."_"..gameType.."_"..tableId      -- 用来组合成一个唯一的主键
    local duplicate = string.format( "insert into game_state (zkey,server_ip,game_id,table_id,seat_array,pool_all,jackpot,reward_rate) values ('%s','%s',%d, %d,%d,%d,%d,'%s') on DUPLICATE key update seat_array = %d ,pool_all = %d,jackpot= %d,reward_rate= '%s'",
           key , ServerIP_Port,gameType,tableId,state.SeatArray, state.PoolAll,state.Jackpot  ,state.RewardRate    , state.SeatArray,state.PoolAll,state.Jackpot ,state.RewardRate)
    --print("sql:"..duplicate)
    ZMySqlExec(duplicate)



    -- 这里再增加对于游戏状态的历史记录
    SqlSaveGameStateRecord(gameType,tableId,state)
end
--删掉桌子状态信息-----------------------------
function SqlDelGameState(gameType,tableId)         -- 清理掉桌子的运行状态
    local sql = string.format("delete from game_state where server_ip = '%s' and game_id = %d and table_id = %d ",ServerIP_Port,gameType,tableId)
    ZMySqlExec(sql) -- 性能快
end
