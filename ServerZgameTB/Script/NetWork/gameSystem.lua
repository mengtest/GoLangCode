---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by soonyo.
--- DateTime: 2019/5/21 13:44
---

-- 请求邮件列表
function HandleMail(userId,data)
    --print("邮件列表userId"..userId)
    local player = GetPlayerByUID(userId)
    if player == nil then
        LuaNetWorkSendToUser(userId,MDM_GR_LOGON, SUB_GR_LOGON_FAILURE, nil, "玩家没有正常登录", nil)
        return
    end

    local msg = CMD_GameServer_pb.CMD_C_Mail()
    msg:ParseFromString(data)

    local user_id = msg.user_id
    local index = msg.index
    --print("邮件数据 ".. index)

    local sendCmd = SystemCheckMail(player)
    LuaNetWorkSendToUser(userId, MDM_GF_GAME_TB, SUB_S_MAIL, sendCmd, nil, nil)

end

-- 请求删除邮件
function HandleDelMail(userId,data)
    local player = GetPlayerByUID(userId)
    if player == nil then
        LuaNetWorkSendToUser(userId,MDM_GR_LOGON, SUB_GR_LOGON_FAILURE, nil, "玩家没有正常登录", nil)
        return
    end


    local msg = CMD_GameServer_pb.CMD_MB_C_DeleteMail()
    msg:ParseFromString(data)

    local user_id = msg.user_id
    local del_index_list = msg.del_index_list
    --print("邮件数据 ".. #del_index_list)

    for i in ipairs(del_index_list) do
        local uuid = tostring(del_index_list[i])
        local mailTable = player.User.MailList[uuid]
        if mailTable~= nil then
            mailTable.mail_type = MailTypeDeleted       -- 标记成已删除状态
        end
    end

    local sendCmd = CMD_GameServer_pb.CMD_MB_S_DeleteMail()
    sendCmd.result = 1
    for i in ipairs(del_index_list) do
        sendCmd.info_index:append(del_index_list[i])
    end
    LuaNetWorkSendToUser(userId, MDM_GF_GAME_TB, SUB_S_DEL_MAIL, sendCmd, nil, nil)

end



-- 请求邮件物品
function HandleGetMailGift(userId,data)
    local player = GetPlayerByUID(userId)
    if player == nil then
        LuaNetWorkSendToUser(userId,MDM_GR_LOGON, SUB_GR_LOGON_FAILURE, nil, "玩家没有正常登录", nil)
        return
    end


    local msg = CMD_GameServer_pb.CMD_MB_C_MailGetGift()
    msg:ParseFromString(data)

    local user_id = msg.user_id
    local get_index_list = msg.get_index_list
    --print("邮件数据 ".. #get_index_list)


    local mail_get_score_all = 0   -- 所有邮件获得分数
    local mail_get_num = 0          --  一共收了几封邮件

    for i in ipairs(get_index_list) do
        local uuid = tostring(get_index_list[i])
        local mailTable = player.User.MailList[uuid]
        if  mailTable == nil then
            LuaNetWorkSendToUser(userId, MDM_GF_GAME_TB, SUB_S_GET_GIFT_MAIL, nil, "can not find this mail", nil)       -- 邮件不存在
            return
        end

        if mailTable.mail_type == MailTypeDeleted then
            LuaNetWorkSendToUser(userId, MDM_GF_GAME_TB, SUB_S_GET_GIFT_MAIL, nil, "this mail already deleted", nil)        -- 邮件已经删
            return
        end
        if mailTable.mail_type == MailTypeReceived then
            LuaNetWorkSendToUser(userId, MDM_GF_GAME_TB, SUB_S_GET_GIFT_MAIL, nil, "this mail gift already got", nil)       -- 邮件已领取
            return
        end

        local mail_get_score = tonumber(mailTable.score)
        local item = tonumber(mailTable.item)
        local item_num = tonumber(mailTable.item_num)
        mailTable.mail_type = MailTypeReceived

        mail_get_score_all = mail_get_score_all + mail_get_score            -- 得分汇总
        mail_get_num = mail_get_num + 1                                     -- 几封邮件数量记录
    end


    -- 所有邮件获得总的分数，记录下来
    ScoreAdd(player, mail_get_score_all)
    -- 保存玩家信息
    RedisSavePlayerAll(player.User)
    SqlSaveUserGetMailGiftLog(player, mail_get_score_all, 0)   -- 玩家推币日志流水记录

    SqlSaveSystemLogMail(0 , "邮件数量"..mail_get_num , mail_get_score_all , player.User.UserId)     -- 邮件领取日志记录

    local sendCmd = CMD_GameServer_pb.CMD_MB_S_MailGetGift()
    sendCmd.result = 1
    sendCmd.player_score = ScoreGet(player)
    sendCmd.mail_score = mail_get_score_all
    for i in ipairs(get_index_list) do
        sendCmd.info_index:append(get_index_list[i])
    end
    LuaNetWorkSendToUser(userId, MDM_GF_GAME_TB, SUB_S_GET_GIFT_MAIL, sendCmd, nil, nil)

end


