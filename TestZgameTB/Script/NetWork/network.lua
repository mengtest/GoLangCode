---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/10/12 14:56
---





----------------------------------------------------------------------
---发送消息
----------------------------------------------------------------------
---- 玩家自己的网络发送函数
function LuaNetWorkSend(myServerId, msgId, subMsgId, sendCmd, err)
    --return LuaNetWorkSendToUser(0,serverId,msgId,subMsgId,sendCmd,err)      -- userId 如果是0的话， 就是给玩家自己回消息 ，这是在go那边定义的
    local buffer = ""
    if sendCmd ~= nil then
        buffer = sendCmd:SerializeToString()
    end

    if err == nil then
        err = ""
    end
    return luaCallGoNetWorkSend(0, myServerId,msgId,subMsgId,buffer,err)       -- 返回结果 true 发送成功  false 发送失败
end




-- 发送消息给其他玩家
function LuaNetWorkSendToUser(userId,msgId,subMsgId,sendCmd,err)
    local buffer = ""
    if sendCmd ~= nil then
        buffer = sendCmd:SerializeToString()
    end

    if err == nil then
        err = ""
    end
    --print("发消息给",userId,msgId,subMsgId)

    --local now = GetOsTimeMillisecond()
    --if now - ZswLogShowSendMsgLastTime > 1000 then
    --    ZswLogShowSendMsgLastTime = now
    --    print("1秒发送消息数量", ZswLogShowSendMsgNum)
    --    -- 给服务器一分钟统计提供数据
    --    if ServerStateSendNum == 0 then
    --        ServerStateSendNum = ZswLogShowSendMsgNum   -- 赋值即可
    --    else
    --        ServerStateSendNum =  math.ceil( (ServerStateSendNum+ZswLogShowSendMsgNum)/2 )  -- 求一下平均值
    --    end
    --
    --    ZswLogShowSendMsgNum = 0
    --else
    --    ZswLogShowSendMsgNum = ZswLogShowSendMsgNum + 1       -- 没到一秒就加数量
    --end

    return luaCallGoNetWorkSend(userId,0,msgId,subMsgId,buffer,err)       -- 返回结果 true 发送成功  false 发送失败
end


----------------------------------------------------------------------
---接收消息
----------------------------------------------------------------------
-- 网络接收函数
function GoCallLuaNetWorkReceive(serverId,userId, msgId, subMsgId, data)
    --Logger("lua收到了消息："..msgId)
    --Logger("lua收到了消息："..subMsgId)
    --Logger("lua收到了消息："..data)
    ReceiveMsg(serverId,userId,msgId,subMsgId,data)

    --local now = GetOsTimeMillisecond()
    --if now - ZswLogShowReceiveLastTime > 1000 then
    --    ZswLogShowReceiveLastTime = now
    --    print("1秒接收消息数量", ZswLogShowReceiveMsgNum)
    --    -- 给服务器一分钟统计提供数据
    --    if ServerStateReceiveNum == 0 then
    --        ServerStateReceiveNum = ZswLogShowReceiveMsgNum   -- 赋值即可
    --    else
    --        ServerStateReceiveNum =  math.ceil(  (ServerStateReceiveNum+ZswLogShowReceiveMsgNum)/2)   -- 求一下平均值
    --    end
    --    ZswLogShowReceiveMsgNum = 0
    --else
    --    ZswLogShowReceiveMsgNum = ZswLogShowReceiveMsgNum + 1       -- 没到一秒就加数量
    --end
--    LuaNetWorkSend(msgId,subMsgId,"lua想发送消息", "")
end


-- 根据命令进行分支处理
function ReceiveMsg(serverId,userId, msgId, subMsgId, data)
    --print("msgId",msgId, "subMsgId",subMsgId)

    if msgId == MDM_GR_LOGON  then
        if subMsgId == SUB_GR_LOGON_FAILURE  then
            print("登录失败")
        elseif subMsgId == SUB_GR_LOGON_SUCCESS  then
            --print("------------服务器登录成功-------------")
            HandleLoginGSGuestSuccess(serverId,data)
        elseif subMsgId == SUB_GR_LOGON_FINISH  then
            --print("----------------登录完成，申请进入场景-----------",userId)
            SendEnterScene(userId,data)
        end
    elseif msgId == MDM_GF_GAME  then
        if subMsgId == SUB_S_ENTER_SCENE  then
            --print("有玩家进入场景")
            HandleEnterSceneSuccess(userId,data)
        elseif subMsgId == SUB_GF_SERVER_USER_INFO  then
            print("进入场景下发数据")
            HandleEnterSceneUserData(userId,data)
        elseif subMsgId == SUB_GF_S_GAME_SCENE_LEAVE then
                print("----------------服务器返回离开房间成功-----------")
                print("然后再切换界面离开房间      这里以后写代码")
        end

    elseif msgId == MDM_GF_GAME_TB  then
            --推币系列
        if subMsgId == SUB_S_OBTAIN_ENERGY  then
            --print("**************投币成功，增加能量***************** ",userId)
            HandleObtainEnergy(userId,data)
        elseif subMsgId ==  SUB_S_SYNC_BIGAWARD then
            --print("***************同步大奖池**********************", userId)
            HandleSyncBigAward(userId,data)
        elseif subMsgId ==  SUB_S_GAME_CARD then
            --print("***************翻牌**********************", userId)
            HandleCard(userId,data)
        elseif subMsgId ==  SUB_S_GAME_TIGER then
            --print("**************老虎机**********************", userId)
            HandleTiger(userId, data)
        elseif subMsgId == SUB_S_GAME_WHEELPLATE then
            --print("**************轮盘**********************", userId)
            HandleWheel(userId, data)
        elseif subMsgId == SUB_S_GAME_SELECT_DOUBLE then
            --print("**************轮盘双倍**********************", userId)
            HandleWheelDouble(userId, data)
        elseif subMsgId == SUB_S_BLOOD_MODE then
            --print("**************热血模式进入**********************", userId)
            HandleBlood(userId, data)
        elseif subMsgId == SUB_S_BLOOD_MODE_GOLD_PASS then
            --print("**************热血模式结果**********************", userId)
            HandleBloodResult(userId, data)
        elseif subMsgId == SUB_S_MAIL then
            --print("**************邮件列表结果**********************", userId)
            HandleGetMailResult(userId, data)
        elseif subMsgId == SUB_S_DEL_MAIL then
            --print("**************邮件删除结果**********************", userId)
            HandleDelMailResult(userId, data)
        elseif subMsgId == SUB_S_GET_GIFT_MAIL then
            --print("**************邮件领取结果**********************", userId)
            HandleGetMailGiftResult(userId, data)
        elseif subMsgId == SUB_S_MULTI_SLOT then
            print("**************翻倍老虎机**********************", userId)
            HandleTigerDouble(userId, data)

        elseif subMsgId == SUB_S_CLOCK_GOLD then
            print("-------------------整点领取金币------------------")
            HandleGetClockScore(userId,data)
        elseif subMsgId == SUB_S_SIGN_IN then
            print("-------------------签到------------------")
            HandleGetSignInScore(userId,data)
        elseif subMsgId == SUB_S_GAME_ROOM_INFO then
            print("-------------------申请房间信息------------------")
            HandleGetGameRoomInfo(userId,data)
        elseif subMsgId == SUB_S_POINTS_INFO then
            print("-------------------小奖池信息------------------")
            HandlePointsInfo(userId,data)


        end
    end
end