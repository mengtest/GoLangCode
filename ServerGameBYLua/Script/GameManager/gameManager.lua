---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/11/1 10:54
---

------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
--- go 来创建和调用的游戏管理器， 管理器管理很多游戏， 每个游戏管理桌子和玩家
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------

require("games")

-- 游戏类型的常量定义
local GameTypeBY  = 1   -- 普通捕鱼
local GameTypeBY2 = 2   -- 精灵捕鱼
local GameTypeBY3 = 3   -- ** 捕鱼

GoRoutineMax = 4      --桌子使用的go routine函数上限
GoRoutineAllList = {}   -- 所有的go routine列表

local AllGamesList = {}

-- 服务器开始创建各个游戏
function GoCallLuaStartGamesServers()
    AddGame("满贯捕鱼", GameTypeBY)
    --AddGame("满贯捕鱼2", GameTypeBY2)
    --AddGame("满贯捕鱼3", GameTypeBY3)

    CreateAllGoRoutineGameTable()   --创建桌子使用的goroutine函数列表
    Logger("--------------StartGamesServers  End--------------------------")
end


--增加一个游戏， 指定这个游戏的类型， 并且创建一个桌子，并启动桌子逻辑
function AddGame(name, gameType)
    game = Game:New(name, gameType,true)
    AllGamesList[gameType] = game

    Logger("--------------AddGame--------------------------")
    game:CreateTable(gameType,1)

end


--通过gameID获取是哪个游戏
function GetGameByID(gameTypeID)
    return AllGamesList[gameTypeID]
end


------------------------------------------------------------------------------------------------------
--- 利用多核的go协程
------------------------------------------------------------------------------------------------------

function GoCallLuaSetGoRoutineMax(num)
    GoRoutineMax = num
end


-- 为了提高性能，go创建好多个协程给桌子使用， 这样游戏桌子可以使用多协程，提高并发效果
function CreateAllGoRoutineGameTable()

    for i=1, GoRoutineMax do
        GoRoutineAllList[i] = {}
        print("CreateAllGoRoutineGameTable:",i)
    end


end

-- 遍历所有的列表，然后依次run
function  GoCallLuaGoRoutineForLuaGameTable(index)
    for _, v in pairs(GoRoutineAllList[index]) do
        v()         -- 执行注册的函数，table run
    end
end

-- 查找协程最少的routine ,然后注册TableRun
function  FindGoRoutineAndRegisterTableRun(func)
    local min = #GoRoutineAllList[1]
    local minIndex = 1
    for i=2, GoRoutineMax do
        if #GoRoutineAllList[i] < min then
            min = #GoRoutineAllList[i]
            minIndex = i
        end
    end
    GoRoutineAllList[minIndex][func]=func  -- 找到最少的组， 然后注册TableRun函数
end



function GoCallLuaGoRoutineForLuaGameTable1()
    GoCallLuaGoRoutineForLuaGameTable(1)
end
function GoCallLuaGoRoutineForLuaGameTable2()
    GoCallLuaGoRoutineForLuaGameTable(2)
end
function GoCallLuaGoRoutineForLuaGameTable3()
    GoCallLuaGoRoutineForLuaGameTable(3)
end
function GoCallLuaGoRoutineForLuaGameTable4()
    GoCallLuaGoRoutineForLuaGameTable(4)
end

--
--function GoCallLuaGoRoutineForLuaGameTable5()
--    GoCallLuaGoRoutineForLuaGameTable(5)
--end
--function GoCallLuaGoRoutineForLuaGameTable6()
--    GoCallLuaGoRoutineForLuaGameTable(6)
--end
--function GoCallLuaGoRoutineForLuaGameTable7()
--    GoCallLuaGoRoutineForLuaGameTable(7)
--end
--function GoCallLuaGoRoutineForLuaGameTable8()
--    GoCallLuaGoRoutineForLuaGameTable(8)
--end


