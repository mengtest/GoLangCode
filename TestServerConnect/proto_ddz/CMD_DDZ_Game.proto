// To use the "libprotobuf-lite.lib" library for C++ code.
option optimize_for = LITE_RUNTIME;


// Namespace: MESSAGE
package CMD_DDZ;

message CMD_GameInfo_S
{
	optional int64	user_score = 1;				//玩家分数
	optional int64  double_price = 2;           //加倍价格
	optional int32  double_rate = 3;            //加倍倍数
	optional int64  note_card_price = 4;        //记牌器价格
	repeated uint32 chip_value = 5;             //下注筹码金额列表
	optional int32  limit_rate = 6;             //下注上限倍数
	optional int32  bomb_rate = 7;              //炸弹倍数
	optional int32  rocket_rate = 8;            //火箭倍数
	optional int32  spring_rate = 9;            //春天倍数
	optional int32  adverse_spring_rate = 10;   //反春倍数
};

//请求开始
message CMD_SUB_C_ReqStart
{
	optional uint32 chip_value = 1;	           //玩家选择的下注金额
	optional bool  use_note_card = 2;          //玩家是否使用记牌器          
};

//开始发送扑克
message CMD_GameStart_S
{
	repeated uint32 card_data = 1;             //玩家扑克列表（十七张）
	optional int64  user_diamond = 2;          //玩家的钻石数量
};

//用户叫分
message CMD_SUB_C_CallScore
{
	optional uint32	 call_score = 1; 			//叫分数目
};

//用户叫分
message CMD_CallScore_S
{
	optional uint32	 cur_user = 1;				//玩家桌子
	optional uint32	 call_score = 2;			//叫分数目
	optional uint32  error_type = 3;            //错误类型 1-不存在的倍数2-加倍钱不够
};

//庄家信息
message CMD_BankerInfo_S
{
   optional uint32	banker_user = 1;           //庄家玩家
   optional uint32	cur_user = 2;              //当前玩家
   optional uint32  banker_score = 3;          //庄家叫分
   repeated uint32  valid_card_data = 4;       //庄家扑克（三张）
};

//用户出牌
message CMD_SUB_C_OutCard
{
	optional uint32	 card_count = 1; 			//出牌数目
	repeated uint32  card_data = 2;             //扑克数据(二十张)    
};

//用户出牌
message CMD_OutCard_S
{
    
    optional uint32	 card_count = 1; 			//出牌数目
	optional uint32	 cur_user = 2;              //当前玩家
	optional uint32	 out_user = 3;              //出牌玩家
	repeated uint32  valid_card_data = 4;       //扑克列表（二十张）
	optional uint32  card_type = 5;             //出牌类型
	optional uint32  error_type = 6;            //错误类型 1-类型不对
	optional uint32	 auto_card_count = 7; 		//自动出牌数目
	repeated uint32  auto_card_data = 8;        //自动出牌数据
	optional bool	 turn_over = 9;             //一轮结束
};

//放弃出牌
message CMD_SUB_C_PassCard
{

}

//放弃出牌
message CMD_PassCard_S
{
   optional bool	turn_over = 1;                //一轮结束
   optional uint32  cur_user = 2;                 //当前玩家
   optional uint32  pass_user = 3;                //放弃玩家
}

//游戏状态
message CMD_StatusPlay_S
{
   optional uint32	left_card_count = 1; 		   //左边陪打牌数
   optional uint32	right_card_count = 2; 		   //右边陪打牌数
   optional uint32  cur_user = 3;                  //当前玩家
   repeated uint32  valid_card_data = 4;           //玩家扑克
   repeated uint32  my_card_data = 5;              //自己最近已出牌数据
   repeated uint32  left_card_data = 6;            //左边陪打最近已出牌数据
   repeated uint32  right_card_data = 7;           //右边陪打最近已出牌数据
   repeated uint32  out_card_data = 8;             //已打出的牌数据
   repeated uint32  auto_card_data = 9;            //自动出牌数据
   optional bool	turn_over = 10;                //一轮结束
   optional uint32  cur_rate = 11;                 //当前倍数
   optional CMD_BankerInfo_S bankerinfo = 12;      //庄家信息
   optional CMD_GameInfo_S  GameInfo = 13;         //游戏信息
}

//游戏结束
message CMD_GameConclude_S
{
    optional int64 cell_score = 1;				//游戏积分
	optional int32 chun_tian = 2;               //是否春天
	optional int32 fan_chun_tian = 3;           //是否反春
	optional int32 bomb_count = 4;              //炸弹数量
	optional int32 rocket_count = 5;            //火箭数量
	repeated uint32  left_valid_card_data = 6;  //左边剩余牌数据
	repeated uint32  right_valid_card_data = 7; //右边剩余牌数据
	optional bool  limit_score = 8;             //是否达到上下限
};

//消息类型
message CMD_SysMessage_S
{
	optional uint32 sys_type = 1;				//消息类型 （ 0-普通消息 ）
	optional bytes sys_message=2;		        //消息内容
};