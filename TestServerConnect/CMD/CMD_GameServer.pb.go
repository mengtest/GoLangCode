// Code generated by protoc-gen-go. DO NOT EDIT.
// source: CMD_GameServer.proto

/*
Package CMD is a generated protocol buffer package.

Namespace: MESSAGE

It is generated from these files:
	CMD_GameServer.proto

It has these top-level messages:
	CMD_GR_LogonUserID
	CMD_GR_LogonMobile
	CMD_GR_LogonAccounts
	CMD_GR_LogonSuccess
	CMD_GR_LogonFailure
	CMD_GR_C_CreateTable
	CMD_GR_S_CreateTable
	CMD_GR_C_CreateGuildTable
	CMD_GR_S_CreateGuildTable
	CMD_GR_UpdateNotify
	TagColumnItem
	CMD_GR_ConfigColumn
	CMD_GR_ConfigServer
	TagPropertyInfo
	CMD_GR_ConfigProperty
	CMD_GR_ConfigUserRight
	CMD_GR_UserLookon
	CMD_GR_UserSitDown
	CMD_GR_UserStandUp
	CMD_GR_S_UserStandUp
	CMD_GR_UserInvite
	CMD_GR_UserInviteReq
	TagUserScore
	CMD_GR_UserScore
	CMD_GR_OtherScore
	CMD_GR_UserLevUp
	TagMobileUserScore
	CMD_GR_MobileUserScore
	TagUserStatus
	CMD_GR_UserStatus
	CMD_GR_RequestFailure
	CMD_GR_C_UserChat
	CMD_GR_S_UserChat
	CMD_GR_C_UserExpression
	CMD_GR_S_UserExpression
	CMD_GR_C_WisperChat
	CMD_GR_S_WisperChat
	CMD_GR_C_WisperExpression
	CMD_GR_S_WisperExpression
	CMD_GR_ColloquyChat
	CMD_GR_C_InviteUser
	CMD_GR_S_InviteUser
	CMD_GR_C_PropertyBuy
	CMD_GR_S_PropertySuccess
	CMD_GR_PropertyFailure
	CMD_GR_S_PropertyMessage
	CMD_GR_S_PropertyEffect
	CMD_GR_C_SendTrumpet
	CMD_GR_S_SendTrumpet
	CMD_GR_UserRepulseSit
	CMD_GR_UserRule
	CMD_GR_UserInfoReq
	CMD_GR_ChairUserInfoReq
	TagTableStatus
	CMD_GR_TableInfo
	CMD_GR_TableStatus
	CMD_GR_C_QueryInsureInfoRequest
	CMD_GR_C_SaveScoreRequest
	CMD_GR_C_TakeScoreRequest
	CMD_GP_C_TransferScoreRequest
	CMD_MB_C_ModifyInsurePass
	CMD_MB_C_UserTransferScore
	CMD_MB_C_InsureRecord_Get
	CMD_MB_S_InsureRecord_Back
	CMD_GR_C_QueryUserInfoRequest
	CMD_GR_S_UserInsureInfo
	CMD_GR_S_UserInsureSuccess
	CMD_GR_S_UserInsureFailure
	CMD_GR_S_UserTransferUserInfo
	CMD_GR_SendWarning
	CMD_GR_SendMessage
	CMD_GR_LookUserIP
	CMD_GR_KickUser
	CMD_GR_LimitAccounts
	CMD_GR_SetUserRight
	TagServerOptionInfo
	CMD_GR_OptionCurrent
	CMD_GR_ServerOption
	CMD_GR_KickAllUser
	CMD_GR_DismissGame
	CMD_GR_S_MATCH_FEE
	CMD_GR_S_MATCH_FEE_FAIL
	CMD_GR_S_Match_Wait_Tip
	TagMatchEndRank
	CMD_GR_S_MatchResult
	TagMatchUserInfo
	CMD_GR_S_MatchStatus
	TagMatchUserRank
	CMD_GR_S_MatchRank
	CMD_GF_GameOption
	CMD_C_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME
	CMD_S_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME
	CMD_GF_LookonConfig
	CMD_GF_LookonStatus
	CMD_GF_GameStatus
	CMD_GF_C_UserChat
	CMD_GF_S_UserChat
	CMD_GF_S_ServerUserInfo
	CMD_CF_S_UserSkill
	CMD_GF_C_UserExpression
	CMD_GF_S_UserExpression
	CMD_CR_SystemMessage
	TagUserInfoHead
	CMD_GR_UserEnter
	CMD_GR_OptionServer
	CMD_GR_LimitUserChat
	CMD_MB_S2C_Refresh_One_Day_For_Game
	CMD_GR_Bind_Result
	CMD_GR_Refresh_VIP_Back
	CMD_C_GAME_HEART_C2G
	TagGameGiftPackageInfo_GS
	CMD_C_MY_GIFT_PACK_GS
	CMD_S_MY_GIFT_PACK_BACK_GS
	CMD_C_TOMORROW_PACKAGE
	CMD_S_TOMORROW_PACKAGE
	TagGameSkill
	CMD_S_GAME_SKILL
	CMD_S_RED_ENVELOPE
	TagBetResultData
	CMD_S_BET_RESULT
	CMD_S_USER_MESSAGE
	CMD_CF_S_UserScore
	CMD_S_GM_USER_LIST_GET
	CMD_S_GM_USER_LIST
	CMD_GR_C_REQUEST_ARENA
	CMD_GR_S_REQUEST_ARENA
	CMD_GR_C_START_ARENA
	CMD_GR_S_START_ARENA
	CMD_GF_S_Update_UserScore
	CMD_GR_S_SITDOWN_SUCCESS
	CMD_CF_S_UserMasterTaskGuideInfo
	CMD_CF_S_UserCompletedTaskGuidID
	CMD_CF_C_UserMasterTaskGuideInfo
	CMD_C_DRAW_KILLER_PRIZE
	TagPersonalPrizePoolReward
	CMD_S_DRAW_KILLER_PRIZE
	CMD_GR_C_WORLD_BOSS_ACTIVITY_CONFIG_LIST
	CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST
	CMD_GR_C_WORLD_BOSS_ACTIVITY_LAST_RANKING
	CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING
	CMD_GR_C_RECHANGE_ITEM
	CMD_GR_S_RECHANGE_ITEM
	CMD_GR_C_SAVING_POT_INFO
	CMD_GR_S_SAVING_POT_INFO
	CMD_GR_C_SAVING_POT_GOT
	CMD_GR_S_SAVING_POT_GOT
	CMD_GR_C_GIVE_ITEM
	CMD_GR_S_GIVE_ITEM
	CMD_GR_C_GIVE_NICKNAME
	CMD_GR_S_GIVE_NICKNAME
	CMD_GR_C_PRINT_POINT_LOG
	CMD_GR_C_NEWPLAYER_INFO
	CMD_GR_S_USER_BONUS_MISSION_REWARD
	CMD_GR_C_FEED_BACK
	CMD_GR_S_FEED_BACK
	CMD_GR_C_FEED_BACK_REQUEST
	CMD_GR_S_FEED_BACK_REQUEST
	CMD_GR_C_FEED_BACK_UPDATE
	CMD_GR_C_FEED_BACK_REQUEST_CONTENT
	CMD_GR_S_FEED_BACK_REQUEST_CONTENT
*/
package CMD

import "github.com/golang/protobuf/proto"
import "fmt"
import "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CMD_GR_C_PRINT_POINT_LOG_PointType int32

const (
	CMD_GR_C_PRINT_POINT_LOG_PT_ENTER     CMD_GR_C_PRINT_POINT_LOG_PointType = 1
	CMD_GR_C_PRINT_POINT_LOG_PT_SKILL     CMD_GR_C_PRINT_POINT_LOG_PointType = 2
	CMD_GR_C_PRINT_POINT_LOG_PT_RECHANGE  CMD_GR_C_PRINT_POINT_LOG_PointType = 3
	CMD_GR_C_PRINT_POINT_LOG_PT_INTRODUCE CMD_GR_C_PRINT_POINT_LOG_PointType = 4
	CMD_GR_C_PRINT_POINT_LOG_PT_TREASURE  CMD_GR_C_PRINT_POINT_LOG_PointType = 5
	CMD_GR_C_PRINT_POINT_LOG_PT_LEAVE     CMD_GR_C_PRINT_POINT_LOG_PointType = 6
	CMD_GR_C_PRINT_POINT_LOG_PT_SALOON    CMD_GR_C_PRINT_POINT_LOG_PointType = 7
	CMD_GR_C_PRINT_POINT_LOG_PT_CLICK     CMD_GR_C_PRINT_POINT_LOG_PointType = 8
	CMD_GR_C_PRINT_POINT_LOG_PT_LOADING   CMD_GR_C_PRINT_POINT_LOG_PointType = 9
	CMD_GR_C_PRINT_POINT_LOG_PT_DIY       CMD_GR_C_PRINT_POINT_LOG_PointType = 10
)

var CMD_GR_C_PRINT_POINT_LOG_PointType_name = map[int32]string{
	1:  "PT_ENTER",
	2:  "PT_SKILL",
	3:  "PT_RECHANGE",
	4:  "PT_INTRODUCE",
	5:  "PT_TREASURE",
	6:  "PT_LEAVE",
	7:  "PT_SALOON",
	8:  "PT_CLICK",
	9:  "PT_LOADING",
	10: "PT_DIY",
}
var CMD_GR_C_PRINT_POINT_LOG_PointType_value = map[string]int32{
	"PT_ENTER":     1,
	"PT_SKILL":     2,
	"PT_RECHANGE":  3,
	"PT_INTRODUCE": 4,
	"PT_TREASURE":  5,
	"PT_LEAVE":     6,
	"PT_SALOON":    7,
	"PT_CLICK":     8,
	"PT_LOADING":   9,
	"PT_DIY":       10,
}

func (x CMD_GR_C_PRINT_POINT_LOG_PointType) Enum() *CMD_GR_C_PRINT_POINT_LOG_PointType {
	p := new(CMD_GR_C_PRINT_POINT_LOG_PointType)
	*p = x
	return p
}
func (x CMD_GR_C_PRINT_POINT_LOG_PointType) String() string {
	return proto.EnumName(CMD_GR_C_PRINT_POINT_LOG_PointType_name, int32(x))
}
func (x *CMD_GR_C_PRINT_POINT_LOG_PointType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMD_GR_C_PRINT_POINT_LOG_PointType_value, data, "CMD_GR_C_PRINT_POINT_LOG_PointType")
	if err != nil {
		return err
	}
	*x = CMD_GR_C_PRINT_POINT_LOG_PointType(value)
	return nil
}
func (CMD_GR_C_PRINT_POINT_LOG_PointType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{150, 0}
}

// I D 登录
type CMD_GR_LogonUserID struct {
	// 版本信息
	PlazaVersion   *uint32 `protobuf:"varint,1,opt,name=plaza_version,json=plazaVersion" json:"plaza_version,omitempty"`
	FrameVersion   *uint32 `protobuf:"varint,2,opt,name=frame_version,json=frameVersion" json:"frame_version,omitempty"`
	ProcessVersion *uint32 `protobuf:"varint,3,opt,name=process_version,json=processVersion" json:"process_version,omitempty"`
	ClientType     *int32  `protobuf:"varint,4,opt,name=client_type,json=clientType" json:"client_type,omitempty"`
	// 登录信息
	UserId      *uint32 `protobuf:"varint,5,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Password    []byte  `protobuf:"bytes,6,opt,name=password" json:"password,omitempty"`
	MachineId   []byte  `protobuf:"bytes,7,opt,name=machine_id,json=machineId" json:"machine_id,omitempty"`
	KindId      *int32  `protobuf:"varint,8,opt,name=kind_id,json=kindId" json:"kind_id,omitempty"`
	IpAddr      []byte  `protobuf:"bytes,9,opt,name=ip_addr,json=ipAddr" json:"ip_addr,omitempty"`
	DitchNumber *int32  `protobuf:"varint,10,opt,name=ditch_number,json=ditchNumber" json:"ditch_number,omitempty"`
	DeviceType  []byte  `protobuf:"bytes,11,opt,name=device_type,json=deviceType" json:"device_type,omitempty"`
	PacketIndex *uint32 `protobuf:"varint,12,opt,name=packet_index,json=packetIndex" json:"packet_index,omitempty"`
	IsAndroid   *bool   `protobuf:"varint,13,opt,name=is_android,json=isAndroid" json:"is_android,omitempty"`
	// 大师赛专用
	CannonMulriple   *uint32 `protobuf:"varint,14,opt,name=cannon_mulriple,json=cannonMulriple" json:"cannon_mulriple,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_LogonUserID) Reset()                    { *m = CMD_GR_LogonUserID{} }
func (m *CMD_GR_LogonUserID) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_LogonUserID) ProtoMessage()               {}
func (*CMD_GR_LogonUserID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CMD_GR_LogonUserID) GetPlazaVersion() uint32 {
	if m != nil && m.PlazaVersion != nil {
		return *m.PlazaVersion
	}
	return 0
}

func (m *CMD_GR_LogonUserID) GetFrameVersion() uint32 {
	if m != nil && m.FrameVersion != nil {
		return *m.FrameVersion
	}
	return 0
}

func (m *CMD_GR_LogonUserID) GetProcessVersion() uint32 {
	if m != nil && m.ProcessVersion != nil {
		return *m.ProcessVersion
	}
	return 0
}

func (m *CMD_GR_LogonUserID) GetClientType() int32 {
	if m != nil && m.ClientType != nil {
		return *m.ClientType
	}
	return 0
}

func (m *CMD_GR_LogonUserID) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_LogonUserID) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *CMD_GR_LogonUserID) GetMachineId() []byte {
	if m != nil {
		return m.MachineId
	}
	return nil
}

func (m *CMD_GR_LogonUserID) GetKindId() int32 {
	if m != nil && m.KindId != nil {
		return *m.KindId
	}
	return 0
}

func (m *CMD_GR_LogonUserID) GetIpAddr() []byte {
	if m != nil {
		return m.IpAddr
	}
	return nil
}

func (m *CMD_GR_LogonUserID) GetDitchNumber() int32 {
	if m != nil && m.DitchNumber != nil {
		return *m.DitchNumber
	}
	return 0
}

func (m *CMD_GR_LogonUserID) GetDeviceType() []byte {
	if m != nil {
		return m.DeviceType
	}
	return nil
}

func (m *CMD_GR_LogonUserID) GetPacketIndex() uint32 {
	if m != nil && m.PacketIndex != nil {
		return *m.PacketIndex
	}
	return 0
}

func (m *CMD_GR_LogonUserID) GetIsAndroid() bool {
	if m != nil && m.IsAndroid != nil {
		return *m.IsAndroid
	}
	return false
}

func (m *CMD_GR_LogonUserID) GetCannonMulriple() uint32 {
	if m != nil && m.CannonMulriple != nil {
		return *m.CannonMulriple
	}
	return 0
}

// 手机登录
type CMD_GR_LogonMobile struct {
	// 版本信息
	GameId         *int32  `protobuf:"varint,1,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	ProcessVersion *uint32 `protobuf:"varint,2,opt,name=process_version,json=processVersion" json:"process_version,omitempty"`
	// 桌子区域
	DeviceType     *int32 `protobuf:"varint,3,opt,name=device_type,json=deviceType" json:"device_type,omitempty"`
	BehaviorFlags  *int32 `protobuf:"varint,4,opt,name=behavior_flags,json=behaviorFlags" json:"behavior_flags,omitempty"`
	PageTableCount *int32 `protobuf:"varint,5,opt,name=page_table_count,json=pageTableCount" json:"page_table_count,omitempty"`
	// 登录信息
	UserId           *uint32 `protobuf:"varint,6,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Password         []byte  `protobuf:"bytes,7,opt,name=password" json:"password,omitempty"`
	MachineId        []byte  `protobuf:"bytes,8,opt,name=machine_id,json=machineId" json:"machine_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_LogonMobile) Reset()                    { *m = CMD_GR_LogonMobile{} }
func (m *CMD_GR_LogonMobile) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_LogonMobile) ProtoMessage()               {}
func (*CMD_GR_LogonMobile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CMD_GR_LogonMobile) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *CMD_GR_LogonMobile) GetProcessVersion() uint32 {
	if m != nil && m.ProcessVersion != nil {
		return *m.ProcessVersion
	}
	return 0
}

func (m *CMD_GR_LogonMobile) GetDeviceType() int32 {
	if m != nil && m.DeviceType != nil {
		return *m.DeviceType
	}
	return 0
}

func (m *CMD_GR_LogonMobile) GetBehaviorFlags() int32 {
	if m != nil && m.BehaviorFlags != nil {
		return *m.BehaviorFlags
	}
	return 0
}

func (m *CMD_GR_LogonMobile) GetPageTableCount() int32 {
	if m != nil && m.PageTableCount != nil {
		return *m.PageTableCount
	}
	return 0
}

func (m *CMD_GR_LogonMobile) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_LogonMobile) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *CMD_GR_LogonMobile) GetMachineId() []byte {
	if m != nil {
		return m.MachineId
	}
	return nil
}

// 账号登录
type CMD_GR_LogonAccounts struct {
	// 版本信息
	PlazaVersion   *uint32 `protobuf:"varint,1,opt,name=plaza_version,json=plazaVersion" json:"plaza_version,omitempty"`
	FrameVersion   *uint32 `protobuf:"varint,2,opt,name=frame_version,json=frameVersion" json:"frame_version,omitempty"`
	ProcessVersion *uint32 `protobuf:"varint,3,opt,name=process_version,json=processVersion" json:"process_version,omitempty"`
	// 登录信息
	Password         []byte `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
	Accounts         []byte `protobuf:"bytes,5,opt,name=accounts" json:"accounts,omitempty"`
	MachineId        []byte `protobuf:"bytes,6,opt,name=machine_id,json=machineId" json:"machine_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_LogonAccounts) Reset()                    { *m = CMD_GR_LogonAccounts{} }
func (m *CMD_GR_LogonAccounts) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_LogonAccounts) ProtoMessage()               {}
func (*CMD_GR_LogonAccounts) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CMD_GR_LogonAccounts) GetPlazaVersion() uint32 {
	if m != nil && m.PlazaVersion != nil {
		return *m.PlazaVersion
	}
	return 0
}

func (m *CMD_GR_LogonAccounts) GetFrameVersion() uint32 {
	if m != nil && m.FrameVersion != nil {
		return *m.FrameVersion
	}
	return 0
}

func (m *CMD_GR_LogonAccounts) GetProcessVersion() uint32 {
	if m != nil && m.ProcessVersion != nil {
		return *m.ProcessVersion
	}
	return 0
}

func (m *CMD_GR_LogonAccounts) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *CMD_GR_LogonAccounts) GetAccounts() []byte {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *CMD_GR_LogonAccounts) GetMachineId() []byte {
	if m != nil {
		return m.MachineId
	}
	return nil
}

// 登录成功
type CMD_GR_LogonSuccess struct {
	UserRight        *uint32 `protobuf:"varint,1,opt,name=user_right,json=userRight" json:"user_right,omitempty"`
	MasterRight      *uint32 `protobuf:"varint,2,opt,name=master_right,json=masterRight" json:"master_right,omitempty"`
	NewGuide         *uint32 `protobuf:"varint,3,opt,name=new_guide,json=newGuide" json:"new_guide,omitempty"`
	ServerId         *int32  `protobuf:"varint,4,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	CannonNumSwitch  *int32  `protobuf:"varint,5,opt,name=cannon_num_switch,json=cannonNumSwitch" json:"cannon_num_switch,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_LogonSuccess) Reset()                    { *m = CMD_GR_LogonSuccess{} }
func (m *CMD_GR_LogonSuccess) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_LogonSuccess) ProtoMessage()               {}
func (*CMD_GR_LogonSuccess) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CMD_GR_LogonSuccess) GetUserRight() uint32 {
	if m != nil && m.UserRight != nil {
		return *m.UserRight
	}
	return 0
}

func (m *CMD_GR_LogonSuccess) GetMasterRight() uint32 {
	if m != nil && m.MasterRight != nil {
		return *m.MasterRight
	}
	return 0
}

func (m *CMD_GR_LogonSuccess) GetNewGuide() uint32 {
	if m != nil && m.NewGuide != nil {
		return *m.NewGuide
	}
	return 0
}

func (m *CMD_GR_LogonSuccess) GetServerId() int32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *CMD_GR_LogonSuccess) GetCannonNumSwitch() int32 {
	if m != nil && m.CannonNumSwitch != nil {
		return *m.CannonNumSwitch
	}
	return 0
}

// 登录失败
type CMD_GR_LogonFailure struct {
	ErrorCode        *int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	ServerId         *int32 `protobuf:"varint,2,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	Describe         []byte `protobuf:"bytes,3,opt,name=describe" json:"describe,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_LogonFailure) Reset()                    { *m = CMD_GR_LogonFailure{} }
func (m *CMD_GR_LogonFailure) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_LogonFailure) ProtoMessage()               {}
func (*CMD_GR_LogonFailure) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CMD_GR_LogonFailure) GetErrorCode() int32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *CMD_GR_LogonFailure) GetServerId() int32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *CMD_GR_LogonFailure) GetDescribe() []byte {
	if m != nil {
		return m.Describe
	}
	return nil
}

// 创建桌子
type CMD_GR_C_CreateTable struct {
	Password         []byte `protobuf:"bytes,1,opt,name=password" json:"password,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_C_CreateTable) Reset()                    { *m = CMD_GR_C_CreateTable{} }
func (m *CMD_GR_C_CreateTable) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_CreateTable) ProtoMessage()               {}
func (*CMD_GR_C_CreateTable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CMD_GR_C_CreateTable) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

// 创建桌子返回
type CMD_GR_S_CreateTable struct {
	ResultCode       *int32 `protobuf:"varint,1,opt,name=result_code,json=resultCode" json:"result_code,omitempty"`
	TableId          *int32 `protobuf:"varint,2,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_S_CreateTable) Reset()                    { *m = CMD_GR_S_CreateTable{} }
func (m *CMD_GR_S_CreateTable) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_CreateTable) ProtoMessage()               {}
func (*CMD_GR_S_CreateTable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CMD_GR_S_CreateTable) GetResultCode() int32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

func (m *CMD_GR_S_CreateTable) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

// 创建公会桌子
type CMD_GR_C_CreateGuildTable struct {
	GuildId          *int32 `protobuf:"varint,1,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_C_CreateGuildTable) Reset()                    { *m = CMD_GR_C_CreateGuildTable{} }
func (m *CMD_GR_C_CreateGuildTable) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_CreateGuildTable) ProtoMessage()               {}
func (*CMD_GR_C_CreateGuildTable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CMD_GR_C_CreateGuildTable) GetGuildId() int32 {
	if m != nil && m.GuildId != nil {
		return *m.GuildId
	}
	return 0
}

// 创建公会桌子返回
type CMD_GR_S_CreateGuildTable struct {
	ResultCode       *int32 `protobuf:"varint,1,opt,name=result_code,json=resultCode" json:"result_code,omitempty"`
	TableId          *int32 `protobuf:"varint,2,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	GuildId          *int32 `protobuf:"varint,3,opt,name=guild_id,json=guildId" json:"guild_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_S_CreateGuildTable) Reset()                    { *m = CMD_GR_S_CreateGuildTable{} }
func (m *CMD_GR_S_CreateGuildTable) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_CreateGuildTable) ProtoMessage()               {}
func (*CMD_GR_S_CreateGuildTable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CMD_GR_S_CreateGuildTable) GetResultCode() int32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

func (m *CMD_GR_S_CreateGuildTable) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *CMD_GR_S_CreateGuildTable) GetGuildId() int32 {
	if m != nil && m.GuildId != nil {
		return *m.GuildId
	}
	return 0
}

// 升级提示
type CMD_GR_UpdateNotify struct {
	// 升级标志
	MustUpdatePlaza    *int32 `protobuf:"varint,1,opt,name=must_update_plaza,json=mustUpdatePlaza" json:"must_update_plaza,omitempty"`
	MustUpdateClient   *int32 `protobuf:"varint,2,opt,name=must_update_client,json=mustUpdateClient" json:"must_update_client,omitempty"`
	AdviceUpdateClient *int32 `protobuf:"varint,3,opt,name=advice_update_client,json=adviceUpdateClient" json:"advice_update_client,omitempty"`
	// 当前版本
	CurrentPlazaVersion  *uint32 `protobuf:"varint,4,opt,name=current_plaza_version,json=currentPlazaVersion" json:"current_plaza_version,omitempty"`
	CurrentFrameVersion  *uint32 `protobuf:"varint,5,opt,name=current_frame_version,json=currentFrameVersion" json:"current_frame_version,omitempty"`
	CurrentClientVersion *uint32 `protobuf:"varint,6,opt,name=current_client_version,json=currentClientVersion" json:"current_client_version,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *CMD_GR_UpdateNotify) Reset()                    { *m = CMD_GR_UpdateNotify{} }
func (m *CMD_GR_UpdateNotify) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_UpdateNotify) ProtoMessage()               {}
func (*CMD_GR_UpdateNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CMD_GR_UpdateNotify) GetMustUpdatePlaza() int32 {
	if m != nil && m.MustUpdatePlaza != nil {
		return *m.MustUpdatePlaza
	}
	return 0
}

func (m *CMD_GR_UpdateNotify) GetMustUpdateClient() int32 {
	if m != nil && m.MustUpdateClient != nil {
		return *m.MustUpdateClient
	}
	return 0
}

func (m *CMD_GR_UpdateNotify) GetAdviceUpdateClient() int32 {
	if m != nil && m.AdviceUpdateClient != nil {
		return *m.AdviceUpdateClient
	}
	return 0
}

func (m *CMD_GR_UpdateNotify) GetCurrentPlazaVersion() uint32 {
	if m != nil && m.CurrentPlazaVersion != nil {
		return *m.CurrentPlazaVersion
	}
	return 0
}

func (m *CMD_GR_UpdateNotify) GetCurrentFrameVersion() uint32 {
	if m != nil && m.CurrentFrameVersion != nil {
		return *m.CurrentFrameVersion
	}
	return 0
}

func (m *CMD_GR_UpdateNotify) GetCurrentClientVersion() uint32 {
	if m != nil && m.CurrentClientVersion != nil {
		return *m.CurrentClientVersion
	}
	return 0
}

// 列表子项
type TagColumnItem struct {
	ColumnWidth      *int32 `protobuf:"varint,1,opt,name=column_width,json=columnWidth" json:"column_width,omitempty"`
	DataDescribe     *int32 `protobuf:"varint,2,opt,name=data_describe,json=dataDescribe" json:"data_describe,omitempty"`
	ColumnName       []byte `protobuf:"bytes,3,opt,name=column_name,json=columnName" json:"column_name,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TagColumnItem) Reset()                    { *m = TagColumnItem{} }
func (m *TagColumnItem) String() string            { return proto.CompactTextString(m) }
func (*TagColumnItem) ProtoMessage()               {}
func (*TagColumnItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *TagColumnItem) GetColumnWidth() int32 {
	if m != nil && m.ColumnWidth != nil {
		return *m.ColumnWidth
	}
	return 0
}

func (m *TagColumnItem) GetDataDescribe() int32 {
	if m != nil && m.DataDescribe != nil {
		return *m.DataDescribe
	}
	return 0
}

func (m *TagColumnItem) GetColumnName() []byte {
	if m != nil {
		return m.ColumnName
	}
	return nil
}

// 列表配置
type CMD_GR_ConfigColumn struct {
	ColumnItemList   []*TagColumnItem `protobuf:"bytes,1,rep,name=column_item_list,json=columnItemList" json:"column_item_list,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *CMD_GR_ConfigColumn) Reset()                    { *m = CMD_GR_ConfigColumn{} }
func (m *CMD_GR_ConfigColumn) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_ConfigColumn) ProtoMessage()               {}
func (*CMD_GR_ConfigColumn) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *CMD_GR_ConfigColumn) GetColumnItemList() []*TagColumnItem {
	if m != nil {
		return m.ColumnItemList
	}
	return nil
}

// 房间配置
type CMD_GR_ConfigServer struct {
	// 房间属性
	TableCount *int32 `protobuf:"varint,1,opt,name=table_count,json=tableCount" json:"table_count,omitempty"`
	ChairCount *int32 `protobuf:"varint,2,opt,name=chair_count,json=chairCount" json:"chair_count,omitempty"`
	// 房间配置
	ServerType       *int32  `protobuf:"varint,3,opt,name=server_type,json=serverType" json:"server_type,omitempty"`
	ServerRule       *uint32 `protobuf:"varint,4,opt,name=server_rule,json=serverRule" json:"server_rule,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_ConfigServer) Reset()                    { *m = CMD_GR_ConfigServer{} }
func (m *CMD_GR_ConfigServer) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_ConfigServer) ProtoMessage()               {}
func (*CMD_GR_ConfigServer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *CMD_GR_ConfigServer) GetTableCount() int32 {
	if m != nil && m.TableCount != nil {
		return *m.TableCount
	}
	return 0
}

func (m *CMD_GR_ConfigServer) GetChairCount() int32 {
	if m != nil && m.ChairCount != nil {
		return *m.ChairCount
	}
	return 0
}

func (m *CMD_GR_ConfigServer) GetServerType() int32 {
	if m != nil && m.ServerType != nil {
		return *m.ServerType
	}
	return 0
}

func (m *CMD_GR_ConfigServer) GetServerRule() uint32 {
	if m != nil && m.ServerRule != nil {
		return *m.ServerRule
	}
	return 0
}

// 道具信息
type TagPropertyInfo struct {
	// 道具信息
	Index     *int32 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Discount  *int32 `protobuf:"varint,2,opt,name=discount" json:"discount,omitempty"`
	IssueArea *int32 `protobuf:"varint,3,opt,name=issueArea" json:"issueArea,omitempty"`
	// 销售价格
	PropertyGold *int64   `protobuf:"varint,4,opt,name=property_gold,json=propertyGold" json:"property_gold,omitempty"`
	PropertyCash *float64 `protobuf:"fixed64,5,opt,name=property_cash,json=propertyCash" json:"property_cash,omitempty"`
	// 赠送魅力
	SendLoveLiness   *int64 `protobuf:"varint,6,opt,name=send_love_liness,json=sendLoveLiness" json:"send_love_liness,omitempty"`
	RecvLoveLiness   *int64 `protobuf:"varint,7,opt,name=recv_love_liness,json=recvLoveLiness" json:"recv_love_liness,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TagPropertyInfo) Reset()                    { *m = TagPropertyInfo{} }
func (m *TagPropertyInfo) String() string            { return proto.CompactTextString(m) }
func (*TagPropertyInfo) ProtoMessage()               {}
func (*TagPropertyInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *TagPropertyInfo) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *TagPropertyInfo) GetDiscount() int32 {
	if m != nil && m.Discount != nil {
		return *m.Discount
	}
	return 0
}

func (m *TagPropertyInfo) GetIssueArea() int32 {
	if m != nil && m.IssueArea != nil {
		return *m.IssueArea
	}
	return 0
}

func (m *TagPropertyInfo) GetPropertyGold() int64 {
	if m != nil && m.PropertyGold != nil {
		return *m.PropertyGold
	}
	return 0
}

func (m *TagPropertyInfo) GetPropertyCash() float64 {
	if m != nil && m.PropertyCash != nil {
		return *m.PropertyCash
	}
	return 0
}

func (m *TagPropertyInfo) GetSendLoveLiness() int64 {
	if m != nil && m.SendLoveLiness != nil {
		return *m.SendLoveLiness
	}
	return 0
}

func (m *TagPropertyInfo) GetRecvLoveLiness() int64 {
	if m != nil && m.RecvLoveLiness != nil {
		return *m.RecvLoveLiness
	}
	return 0
}

// 道具配置
type CMD_GR_ConfigProperty struct {
	PropertyInfoList []*TagPropertyInfo `protobuf:"bytes,1,rep,name=property_info_list,json=propertyInfoList" json:"property_info_list,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CMD_GR_ConfigProperty) Reset()                    { *m = CMD_GR_ConfigProperty{} }
func (m *CMD_GR_ConfigProperty) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_ConfigProperty) ProtoMessage()               {}
func (*CMD_GR_ConfigProperty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *CMD_GR_ConfigProperty) GetPropertyInfoList() []*TagPropertyInfo {
	if m != nil {
		return m.PropertyInfoList
	}
	return nil
}

// 玩家权限
type CMD_GR_ConfigUserRight struct {
	UserRight        *uint32 `protobuf:"varint,1,opt,name=user_right,json=userRight" json:"user_right,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_ConfigUserRight) Reset()                    { *m = CMD_GR_ConfigUserRight{} }
func (m *CMD_GR_ConfigUserRight) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_ConfigUserRight) ProtoMessage()               {}
func (*CMD_GR_ConfigUserRight) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *CMD_GR_ConfigUserRight) GetUserRight() uint32 {
	if m != nil && m.UserRight != nil {
		return *m.UserRight
	}
	return 0
}

// 旁观请求
type CMD_GR_UserLookon struct {
	TableId          *int32 `protobuf:"varint,1,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	ChairId          *int32 `protobuf:"varint,2,opt,name=chair_id,json=chairId" json:"chair_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_UserLookon) Reset()                    { *m = CMD_GR_UserLookon{} }
func (m *CMD_GR_UserLookon) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_UserLookon) ProtoMessage()               {}
func (*CMD_GR_UserLookon) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *CMD_GR_UserLookon) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *CMD_GR_UserLookon) GetChairId() int32 {
	if m != nil && m.ChairId != nil {
		return *m.ChairId
	}
	return 0
}

// 坐下请求
type CMD_GR_UserSitDown struct {
	TableId          *int32 `protobuf:"varint,1,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	ChairId          *int32 `protobuf:"varint,2,opt,name=chair_id,json=chairId" json:"chair_id,omitempty"`
	IsAutoSit        *bool  `protobuf:"varint,3,opt,name=is_auto_sit,json=isAutoSit" json:"is_auto_sit,omitempty"`
	Password         []byte `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_UserSitDown) Reset()                    { *m = CMD_GR_UserSitDown{} }
func (m *CMD_GR_UserSitDown) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_UserSitDown) ProtoMessage()               {}
func (*CMD_GR_UserSitDown) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *CMD_GR_UserSitDown) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *CMD_GR_UserSitDown) GetChairId() int32 {
	if m != nil && m.ChairId != nil {
		return *m.ChairId
	}
	return 0
}

func (m *CMD_GR_UserSitDown) GetIsAutoSit() bool {
	if m != nil && m.IsAutoSit != nil {
		return *m.IsAutoSit
	}
	return false
}

func (m *CMD_GR_UserSitDown) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

// 起立请求
type CMD_GR_UserStandUp struct {
	TableId          *int32 `protobuf:"varint,1,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	ChairId          *int32 `protobuf:"varint,2,opt,name=chair_id,json=chairId" json:"chair_id,omitempty"`
	ForceLeave       *int32 `protobuf:"varint,3,opt,name=force_leave,json=forceLeave" json:"force_leave,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_UserStandUp) Reset()                    { *m = CMD_GR_UserStandUp{} }
func (m *CMD_GR_UserStandUp) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_UserStandUp) ProtoMessage()               {}
func (*CMD_GR_UserStandUp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *CMD_GR_UserStandUp) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *CMD_GR_UserStandUp) GetChairId() int32 {
	if m != nil && m.ChairId != nil {
		return *m.ChairId
	}
	return 0
}

func (m *CMD_GR_UserStandUp) GetForceLeave() int32 {
	if m != nil && m.ForceLeave != nil {
		return *m.ForceLeave
	}
	return 0
}

// 起立结果
type CMD_GR_S_UserStandUp struct {
	ResultCode       *int32 `protobuf:"varint,1,opt,name=result_code,json=resultCode" json:"result_code,omitempty"`
	ForceLeave       *int32 `protobuf:"varint,2,opt,name=force_leave,json=forceLeave" json:"force_leave,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_S_UserStandUp) Reset()                    { *m = CMD_GR_S_UserStandUp{} }
func (m *CMD_GR_S_UserStandUp) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_UserStandUp) ProtoMessage()               {}
func (*CMD_GR_S_UserStandUp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *CMD_GR_S_UserStandUp) GetResultCode() int32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

func (m *CMD_GR_S_UserStandUp) GetForceLeave() int32 {
	if m != nil && m.ForceLeave != nil {
		return *m.ForceLeave
	}
	return 0
}

// 邀请用户
type CMD_GR_UserInvite struct {
	TableId          *int32  `protobuf:"varint,1,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	UserId           *uint32 `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_UserInvite) Reset()                    { *m = CMD_GR_UserInvite{} }
func (m *CMD_GR_UserInvite) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_UserInvite) ProtoMessage()               {}
func (*CMD_GR_UserInvite) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *CMD_GR_UserInvite) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *CMD_GR_UserInvite) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 邀请用户请求
type CMD_GR_UserInviteReq struct {
	TableId          *int32  `protobuf:"varint,1,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	UserId           *uint32 `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_UserInviteReq) Reset()                    { *m = CMD_GR_UserInviteReq{} }
func (m *CMD_GR_UserInviteReq) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_UserInviteReq) ProtoMessage()               {}
func (*CMD_GR_UserInviteReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *CMD_GR_UserInviteReq) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *CMD_GR_UserInviteReq) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 用户积分
type TagUserScore struct {
	// 积分信息
	Score   *int64 `protobuf:"varint,1,opt,name=score" json:"score,omitempty"`
	Lottery *int64 `protobuf:"varint,2,opt,name=lottery" json:"lottery,omitempty"`
	Grade   *int64 `protobuf:"varint,3,opt,name=grade" json:"grade,omitempty"`
	Insure  *int64 `protobuf:"varint,4,opt,name=insure" json:"insure,omitempty"`
	// 输赢信息
	WinCount  *int64 `protobuf:"varint,5,opt,name=win_count,json=winCount" json:"win_count,omitempty"`
	LostCount *int64 `protobuf:"varint,6,opt,name=lost_count,json=lostCount" json:"lost_count,omitempty"`
	DrawCount *int64 `protobuf:"varint,7,opt,name=draw_count,json=drawCount" json:"draw_count,omitempty"`
	FleeCount *int64 `protobuf:"varint,8,opt,name=flee_count,json=fleeCount" json:"flee_count,omitempty"`
	// 全局信息
	UserMedal        *int64 `protobuf:"varint,9,opt,name=user_medal,json=userMedal" json:"user_medal,omitempty"`
	Level            *int32 `protobuf:"varint,10,opt,name=level" json:"level,omitempty"`
	Exp              *int64 `protobuf:"varint,11,opt,name=exp" json:"exp,omitempty"`
	CurLevelExp      *int64 `protobuf:"varint,12,opt,name=cur_level_exp,json=curLevelExp" json:"cur_level_exp,omitempty"`
	NextLevelExp     *int64 `protobuf:"varint,13,opt,name=next_level_exp,json=nextLevelExp" json:"next_level_exp,omitempty"`
	LoveLiness       *int32 `protobuf:"varint,14,opt,name=love_liness,json=loveLiness" json:"love_liness,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TagUserScore) Reset()                    { *m = TagUserScore{} }
func (m *TagUserScore) String() string            { return proto.CompactTextString(m) }
func (*TagUserScore) ProtoMessage()               {}
func (*TagUserScore) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *TagUserScore) GetScore() int64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *TagUserScore) GetLottery() int64 {
	if m != nil && m.Lottery != nil {
		return *m.Lottery
	}
	return 0
}

func (m *TagUserScore) GetGrade() int64 {
	if m != nil && m.Grade != nil {
		return *m.Grade
	}
	return 0
}

func (m *TagUserScore) GetInsure() int64 {
	if m != nil && m.Insure != nil {
		return *m.Insure
	}
	return 0
}

func (m *TagUserScore) GetWinCount() int64 {
	if m != nil && m.WinCount != nil {
		return *m.WinCount
	}
	return 0
}

func (m *TagUserScore) GetLostCount() int64 {
	if m != nil && m.LostCount != nil {
		return *m.LostCount
	}
	return 0
}

func (m *TagUserScore) GetDrawCount() int64 {
	if m != nil && m.DrawCount != nil {
		return *m.DrawCount
	}
	return 0
}

func (m *TagUserScore) GetFleeCount() int64 {
	if m != nil && m.FleeCount != nil {
		return *m.FleeCount
	}
	return 0
}

func (m *TagUserScore) GetUserMedal() int64 {
	if m != nil && m.UserMedal != nil {
		return *m.UserMedal
	}
	return 0
}

func (m *TagUserScore) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *TagUserScore) GetExp() int64 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *TagUserScore) GetCurLevelExp() int64 {
	if m != nil && m.CurLevelExp != nil {
		return *m.CurLevelExp
	}
	return 0
}

func (m *TagUserScore) GetNextLevelExp() int64 {
	if m != nil && m.NextLevelExp != nil {
		return *m.NextLevelExp
	}
	return 0
}

func (m *TagUserScore) GetLoveLiness() int32 {
	if m != nil && m.LoveLiness != nil {
		return *m.LoveLiness
	}
	return 0
}

// 用户分数
type CMD_GR_UserScore struct {
	UserId           *uint32       `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	UserScore        *TagUserScore `protobuf:"bytes,2,opt,name=user_score,json=userScore" json:"user_score,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *CMD_GR_UserScore) Reset()                    { *m = CMD_GR_UserScore{} }
func (m *CMD_GR_UserScore) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_UserScore) ProtoMessage()               {}
func (*CMD_GR_UserScore) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *CMD_GR_UserScore) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_UserScore) GetUserScore() *TagUserScore {
	if m != nil {
		return m.UserScore
	}
	return nil
}

// 玩家分数
type CMD_GR_OtherScore struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Score            *int64  `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_OtherScore) Reset()                    { *m = CMD_GR_OtherScore{} }
func (m *CMD_GR_OtherScore) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_OtherScore) ProtoMessage()               {}
func (*CMD_GR_OtherScore) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *CMD_GR_OtherScore) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_OtherScore) GetScore() int64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

type CMD_GR_UserLevUp struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Level            *int32  `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	Exp              *int64  `protobuf:"varint,3,opt,name=exp" json:"exp,omitempty"`
	CurLevelExp      *int64  `protobuf:"varint,4,opt,name=cur_level_exp,json=curLevelExp" json:"cur_level_exp,omitempty"`
	NextLevelExp     *int64  `protobuf:"varint,5,opt,name=next_level_exp,json=nextLevelExp" json:"next_level_exp,omitempty"`
	PriceScore       *int64  `protobuf:"varint,6,opt,name=price_score,json=priceScore" json:"price_score,omitempty"`
	NowScore         *int64  `protobuf:"varint,7,opt,name=now_score,json=nowScore" json:"now_score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_UserLevUp) Reset()                    { *m = CMD_GR_UserLevUp{} }
func (m *CMD_GR_UserLevUp) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_UserLevUp) ProtoMessage()               {}
func (*CMD_GR_UserLevUp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *CMD_GR_UserLevUp) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_UserLevUp) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CMD_GR_UserLevUp) GetExp() int64 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *CMD_GR_UserLevUp) GetCurLevelExp() int64 {
	if m != nil && m.CurLevelExp != nil {
		return *m.CurLevelExp
	}
	return 0
}

func (m *CMD_GR_UserLevUp) GetNextLevelExp() int64 {
	if m != nil && m.NextLevelExp != nil {
		return *m.NextLevelExp
	}
	return 0
}

func (m *CMD_GR_UserLevUp) GetPriceScore() int64 {
	if m != nil && m.PriceScore != nil {
		return *m.PriceScore
	}
	return 0
}

func (m *CMD_GR_UserLevUp) GetNowScore() int64 {
	if m != nil && m.NowScore != nil {
		return *m.NowScore
	}
	return 0
}

// 用户积分
type TagMobileUserScore struct {
	// 积分信息
	Score *int64 `protobuf:"varint,1,opt,name=score" json:"score,omitempty"`
	// 输赢信息
	WinCount  *uint32 `protobuf:"varint,2,opt,name=win_count,json=winCount" json:"win_count,omitempty"`
	LostCount *uint32 `protobuf:"varint,3,opt,name=lost_count,json=lostCount" json:"lost_count,omitempty"`
	DrawCount *uint32 `protobuf:"varint,4,opt,name=draw_count,json=drawCount" json:"draw_count,omitempty"`
	FleeCount *uint32 `protobuf:"varint,5,opt,name=flee_count,json=fleeCount" json:"flee_count,omitempty"`
	// 全局信息
	Exp              *int64 `protobuf:"varint,6,opt,name=exp" json:"exp,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TagMobileUserScore) Reset()                    { *m = TagMobileUserScore{} }
func (m *TagMobileUserScore) String() string            { return proto.CompactTextString(m) }
func (*TagMobileUserScore) ProtoMessage()               {}
func (*TagMobileUserScore) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *TagMobileUserScore) GetScore() int64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *TagMobileUserScore) GetWinCount() uint32 {
	if m != nil && m.WinCount != nil {
		return *m.WinCount
	}
	return 0
}

func (m *TagMobileUserScore) GetLostCount() uint32 {
	if m != nil && m.LostCount != nil {
		return *m.LostCount
	}
	return 0
}

func (m *TagMobileUserScore) GetDrawCount() uint32 {
	if m != nil && m.DrawCount != nil {
		return *m.DrawCount
	}
	return 0
}

func (m *TagMobileUserScore) GetFleeCount() uint32 {
	if m != nil && m.FleeCount != nil {
		return *m.FleeCount
	}
	return 0
}

func (m *TagMobileUserScore) GetExp() int64 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

// 用户分数
type CMD_GR_MobileUserScore struct {
	UserId           *uint32             `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	UserScore        *TagMobileUserScore `protobuf:"bytes,2,opt,name=user_score,json=userScore" json:"user_score,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CMD_GR_MobileUserScore) Reset()                    { *m = CMD_GR_MobileUserScore{} }
func (m *CMD_GR_MobileUserScore) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_MobileUserScore) ProtoMessage()               {}
func (*CMD_GR_MobileUserScore) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *CMD_GR_MobileUserScore) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_MobileUserScore) GetUserScore() *TagMobileUserScore {
	if m != nil {
		return m.UserScore
	}
	return nil
}

// 用户状态
type TagUserStatus struct {
	TableId          *int32 `protobuf:"varint,1,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	ChairId          *int32 `protobuf:"varint,2,opt,name=chair_id,json=chairId" json:"chair_id,omitempty"`
	UserStatus       *int32 `protobuf:"varint,3,opt,name=user_status,json=userStatus" json:"user_status,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TagUserStatus) Reset()                    { *m = TagUserStatus{} }
func (m *TagUserStatus) String() string            { return proto.CompactTextString(m) }
func (*TagUserStatus) ProtoMessage()               {}
func (*TagUserStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *TagUserStatus) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *TagUserStatus) GetChairId() int32 {
	if m != nil && m.ChairId != nil {
		return *m.ChairId
	}
	return 0
}

func (m *TagUserStatus) GetUserStatus() int32 {
	if m != nil && m.UserStatus != nil {
		return *m.UserStatus
	}
	return 0
}

// 用户状态
type CMD_GR_UserStatus struct {
	UserId           *uint32        `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	UserStatus       *TagUserStatus `protobuf:"bytes,2,opt,name=user_status,json=userStatus" json:"user_status,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CMD_GR_UserStatus) Reset()                    { *m = CMD_GR_UserStatus{} }
func (m *CMD_GR_UserStatus) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_UserStatus) ProtoMessage()               {}
func (*CMD_GR_UserStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *CMD_GR_UserStatus) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_UserStatus) GetUserStatus() *TagUserStatus {
	if m != nil {
		return m.UserStatus
	}
	return nil
}

// 请求失败
type CMD_GR_RequestFailure struct {
	ErrorCode        *int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Describe         []byte `protobuf:"bytes,2,opt,name=describe" json:"describe,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_RequestFailure) Reset()                    { *m = CMD_GR_RequestFailure{} }
func (m *CMD_GR_RequestFailure) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_RequestFailure) ProtoMessage()               {}
func (*CMD_GR_RequestFailure) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *CMD_GR_RequestFailure) GetErrorCode() int32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *CMD_GR_RequestFailure) GetDescribe() []byte {
	if m != nil {
		return m.Describe
	}
	return nil
}

// 用户聊天
type CMD_GR_C_UserChat struct {
	ChatColor        *uint32 `protobuf:"varint,1,opt,name=chat_color,json=chatColor" json:"chat_color,omitempty"`
	TargetUserId     *uint32 `protobuf:"varint,2,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	Chat             []byte  `protobuf:"bytes,3,opt,name=chat" json:"chat,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_C_UserChat) Reset()                    { *m = CMD_GR_C_UserChat{} }
func (m *CMD_GR_C_UserChat) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_UserChat) ProtoMessage()               {}
func (*CMD_GR_C_UserChat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *CMD_GR_C_UserChat) GetChatColor() uint32 {
	if m != nil && m.ChatColor != nil {
		return *m.ChatColor
	}
	return 0
}

func (m *CMD_GR_C_UserChat) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

func (m *CMD_GR_C_UserChat) GetChat() []byte {
	if m != nil {
		return m.Chat
	}
	return nil
}

// 用户聊天
type CMD_GR_S_UserChat struct {
	ChatColor        *uint32 `protobuf:"varint,1,opt,name=chat_color,json=chatColor" json:"chat_color,omitempty"`
	SendUserId       *uint32 `protobuf:"varint,2,opt,name=send_user_id,json=sendUserId" json:"send_user_id,omitempty"`
	TargetUserId     *uint32 `protobuf:"varint,3,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	Chat             []byte  `protobuf:"bytes,4,opt,name=chat" json:"chat,omitempty"`
	CostValue        *int64  `protobuf:"varint,5,opt,name=cost_value,json=costValue" json:"cost_value,omitempty"`
	CostType         *int32  `protobuf:"varint,6,opt,name=cost_type,json=costType" json:"cost_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_S_UserChat) Reset()                    { *m = CMD_GR_S_UserChat{} }
func (m *CMD_GR_S_UserChat) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_UserChat) ProtoMessage()               {}
func (*CMD_GR_S_UserChat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *CMD_GR_S_UserChat) GetChatColor() uint32 {
	if m != nil && m.ChatColor != nil {
		return *m.ChatColor
	}
	return 0
}

func (m *CMD_GR_S_UserChat) GetSendUserId() uint32 {
	if m != nil && m.SendUserId != nil {
		return *m.SendUserId
	}
	return 0
}

func (m *CMD_GR_S_UserChat) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

func (m *CMD_GR_S_UserChat) GetChat() []byte {
	if m != nil {
		return m.Chat
	}
	return nil
}

func (m *CMD_GR_S_UserChat) GetCostValue() int64 {
	if m != nil && m.CostValue != nil {
		return *m.CostValue
	}
	return 0
}

func (m *CMD_GR_S_UserChat) GetCostType() int32 {
	if m != nil && m.CostType != nil {
		return *m.CostType
	}
	return 0
}

// 用户表情
type CMD_GR_C_UserExpression struct {
	ItemIndex        *int32  `protobuf:"varint,1,opt,name=item_index,json=itemIndex" json:"item_index,omitempty"`
	TargetUserId     *uint32 `protobuf:"varint,2,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_C_UserExpression) Reset()                    { *m = CMD_GR_C_UserExpression{} }
func (m *CMD_GR_C_UserExpression) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_UserExpression) ProtoMessage()               {}
func (*CMD_GR_C_UserExpression) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *CMD_GR_C_UserExpression) GetItemIndex() int32 {
	if m != nil && m.ItemIndex != nil {
		return *m.ItemIndex
	}
	return 0
}

func (m *CMD_GR_C_UserExpression) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

// 用户表情
type CMD_GR_S_UserExpression struct {
	ItemIndex        *int32  `protobuf:"varint,1,opt,name=item_index,json=itemIndex" json:"item_index,omitempty"`
	SendUserId       *uint32 `protobuf:"varint,2,opt,name=send_user_id,json=sendUserId" json:"send_user_id,omitempty"`
	TargetUserId     *uint32 `protobuf:"varint,3,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	CostValue        *int64  `protobuf:"varint,4,opt,name=cost_value,json=costValue" json:"cost_value,omitempty"`
	CostType         *int32  `protobuf:"varint,5,opt,name=cost_type,json=costType" json:"cost_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_S_UserExpression) Reset()                    { *m = CMD_GR_S_UserExpression{} }
func (m *CMD_GR_S_UserExpression) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_UserExpression) ProtoMessage()               {}
func (*CMD_GR_S_UserExpression) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *CMD_GR_S_UserExpression) GetItemIndex() int32 {
	if m != nil && m.ItemIndex != nil {
		return *m.ItemIndex
	}
	return 0
}

func (m *CMD_GR_S_UserExpression) GetSendUserId() uint32 {
	if m != nil && m.SendUserId != nil {
		return *m.SendUserId
	}
	return 0
}

func (m *CMD_GR_S_UserExpression) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

func (m *CMD_GR_S_UserExpression) GetCostValue() int64 {
	if m != nil && m.CostValue != nil {
		return *m.CostValue
	}
	return 0
}

func (m *CMD_GR_S_UserExpression) GetCostType() int32 {
	if m != nil && m.CostType != nil {
		return *m.CostType
	}
	return 0
}

// 用户私聊
type CMD_GR_C_WisperChat struct {
	ChatColor        *uint32 `protobuf:"varint,1,opt,name=chat_color,json=chatColor" json:"chat_color,omitempty"`
	TargetUserId     *uint32 `protobuf:"varint,2,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	Chat             []byte  `protobuf:"bytes,3,opt,name=chat" json:"chat,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_C_WisperChat) Reset()                    { *m = CMD_GR_C_WisperChat{} }
func (m *CMD_GR_C_WisperChat) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_WisperChat) ProtoMessage()               {}
func (*CMD_GR_C_WisperChat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *CMD_GR_C_WisperChat) GetChatColor() uint32 {
	if m != nil && m.ChatColor != nil {
		return *m.ChatColor
	}
	return 0
}

func (m *CMD_GR_C_WisperChat) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

func (m *CMD_GR_C_WisperChat) GetChat() []byte {
	if m != nil {
		return m.Chat
	}
	return nil
}

// 用户私聊
type CMD_GR_S_WisperChat struct {
	ChatColor        *uint32 `protobuf:"varint,1,opt,name=chat_color,json=chatColor" json:"chat_color,omitempty"`
	SendUserId       *uint32 `protobuf:"varint,2,opt,name=send_user_id,json=sendUserId" json:"send_user_id,omitempty"`
	TargetUserId     *uint32 `protobuf:"varint,3,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	Chat             []byte  `protobuf:"bytes,4,opt,name=chat" json:"chat,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_S_WisperChat) Reset()                    { *m = CMD_GR_S_WisperChat{} }
func (m *CMD_GR_S_WisperChat) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_WisperChat) ProtoMessage()               {}
func (*CMD_GR_S_WisperChat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *CMD_GR_S_WisperChat) GetChatColor() uint32 {
	if m != nil && m.ChatColor != nil {
		return *m.ChatColor
	}
	return 0
}

func (m *CMD_GR_S_WisperChat) GetSendUserId() uint32 {
	if m != nil && m.SendUserId != nil {
		return *m.SendUserId
	}
	return 0
}

func (m *CMD_GR_S_WisperChat) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

func (m *CMD_GR_S_WisperChat) GetChat() []byte {
	if m != nil {
		return m.Chat
	}
	return nil
}

// 私聊表情
type CMD_GR_C_WisperExpression struct {
	ItemIndex        *int32  `protobuf:"varint,1,opt,name=item_index,json=itemIndex" json:"item_index,omitempty"`
	TargetUserId     *uint32 `protobuf:"varint,2,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_C_WisperExpression) Reset()                    { *m = CMD_GR_C_WisperExpression{} }
func (m *CMD_GR_C_WisperExpression) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_WisperExpression) ProtoMessage()               {}
func (*CMD_GR_C_WisperExpression) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *CMD_GR_C_WisperExpression) GetItemIndex() int32 {
	if m != nil && m.ItemIndex != nil {
		return *m.ItemIndex
	}
	return 0
}

func (m *CMD_GR_C_WisperExpression) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

// 私聊表情
type CMD_GR_S_WisperExpression struct {
	ItemIndex        *int32  `protobuf:"varint,1,opt,name=item_index,json=itemIndex" json:"item_index,omitempty"`
	SendUserId       *uint32 `protobuf:"varint,2,opt,name=send_user_id,json=sendUserId" json:"send_user_id,omitempty"`
	TargetUserId     *uint32 `protobuf:"varint,3,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_S_WisperExpression) Reset()                    { *m = CMD_GR_S_WisperExpression{} }
func (m *CMD_GR_S_WisperExpression) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_WisperExpression) ProtoMessage()               {}
func (*CMD_GR_S_WisperExpression) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *CMD_GR_S_WisperExpression) GetItemIndex() int32 {
	if m != nil && m.ItemIndex != nil {
		return *m.ItemIndex
	}
	return 0
}

func (m *CMD_GR_S_WisperExpression) GetSendUserId() uint32 {
	if m != nil && m.SendUserId != nil {
		return *m.SendUserId
	}
	return 0
}

func (m *CMD_GR_S_WisperExpression) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

// 用户会话
type CMD_GR_ColloquyChat struct {
	ChatColor        *uint32  `protobuf:"varint,1,opt,name=chat_color,json=chatColor" json:"chat_color,omitempty"`
	SendUserId       *uint32  `protobuf:"varint,2,opt,name=send_user_id,json=sendUserId" json:"send_user_id,omitempty"`
	ConversationId   *uint32  `protobuf:"varint,3,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	TargetUserIdList []uint32 `protobuf:"varint,4,rep,name=target_user_id_list,json=targetUserIdList" json:"target_user_id_list,omitempty"`
	Chat             []byte   `protobuf:"bytes,5,opt,name=chat" json:"chat,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMD_GR_ColloquyChat) Reset()                    { *m = CMD_GR_ColloquyChat{} }
func (m *CMD_GR_ColloquyChat) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_ColloquyChat) ProtoMessage()               {}
func (*CMD_GR_ColloquyChat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *CMD_GR_ColloquyChat) GetChatColor() uint32 {
	if m != nil && m.ChatColor != nil {
		return *m.ChatColor
	}
	return 0
}

func (m *CMD_GR_ColloquyChat) GetSendUserId() uint32 {
	if m != nil && m.SendUserId != nil {
		return *m.SendUserId
	}
	return 0
}

func (m *CMD_GR_ColloquyChat) GetConversationId() uint32 {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return 0
}

func (m *CMD_GR_ColloquyChat) GetTargetUserIdList() []uint32 {
	if m != nil {
		return m.TargetUserIdList
	}
	return nil
}

func (m *CMD_GR_ColloquyChat) GetChat() []byte {
	if m != nil {
		return m.Chat
	}
	return nil
}

// 邀请用户
type CMD_GR_C_InviteUser struct {
	TableId          *int32  `protobuf:"varint,1,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	SendUserId       *uint32 `protobuf:"varint,2,opt,name=send_user_id,json=sendUserId" json:"send_user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_C_InviteUser) Reset()                    { *m = CMD_GR_C_InviteUser{} }
func (m *CMD_GR_C_InviteUser) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_InviteUser) ProtoMessage()               {}
func (*CMD_GR_C_InviteUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *CMD_GR_C_InviteUser) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *CMD_GR_C_InviteUser) GetSendUserId() uint32 {
	if m != nil && m.SendUserId != nil {
		return *m.SendUserId
	}
	return 0
}

// 邀请用户
type CMD_GR_S_InviteUser struct {
	TargetUserId     *uint32 `protobuf:"varint,1,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_S_InviteUser) Reset()                    { *m = CMD_GR_S_InviteUser{} }
func (m *CMD_GR_S_InviteUser) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_InviteUser) ProtoMessage()               {}
func (*CMD_GR_S_InviteUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *CMD_GR_S_InviteUser) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

// 购买道具
type CMD_GR_C_PropertyBuy struct {
	RequestArea      *int32  `protobuf:"varint,1,opt,name=request_area,json=requestArea" json:"request_area,omitempty"`
	ConsumeScore     *int32  `protobuf:"varint,2,opt,name=consume_score,json=consumeScore" json:"consume_score,omitempty"`
	ItemCount        *int32  `protobuf:"varint,3,opt,name=item_count,json=itemCount" json:"item_count,omitempty"`
	PropertyIndex    *int32  `protobuf:"varint,4,opt,name=property_index,json=propertyIndex" json:"property_index,omitempty"`
	TargetUserId     *uint32 `protobuf:"varint,5,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_C_PropertyBuy) Reset()                    { *m = CMD_GR_C_PropertyBuy{} }
func (m *CMD_GR_C_PropertyBuy) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_PropertyBuy) ProtoMessage()               {}
func (*CMD_GR_C_PropertyBuy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *CMD_GR_C_PropertyBuy) GetRequestArea() int32 {
	if m != nil && m.RequestArea != nil {
		return *m.RequestArea
	}
	return 0
}

func (m *CMD_GR_C_PropertyBuy) GetConsumeScore() int32 {
	if m != nil && m.ConsumeScore != nil {
		return *m.ConsumeScore
	}
	return 0
}

func (m *CMD_GR_C_PropertyBuy) GetItemCount() int32 {
	if m != nil && m.ItemCount != nil {
		return *m.ItemCount
	}
	return 0
}

func (m *CMD_GR_C_PropertyBuy) GetPropertyIndex() int32 {
	if m != nil && m.PropertyIndex != nil {
		return *m.PropertyIndex
	}
	return 0
}

func (m *CMD_GR_C_PropertyBuy) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

// 道具成功
type CMD_GR_S_PropertySuccess struct {
	RequestArea      *int32  `protobuf:"varint,1,opt,name=request_area,json=requestArea" json:"request_area,omitempty"`
	ItemCount        *int32  `protobuf:"varint,2,opt,name=item_count,json=itemCount" json:"item_count,omitempty"`
	PropertyIndex    *int32  `protobuf:"varint,3,opt,name=property_index,json=propertyIndex" json:"property_index,omitempty"`
	SourceUserId     *uint32 `protobuf:"varint,4,opt,name=source_user_id,json=sourceUserId" json:"source_user_id,omitempty"`
	TargetUserId     *uint32 `protobuf:"varint,5,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_S_PropertySuccess) Reset()                    { *m = CMD_GR_S_PropertySuccess{} }
func (m *CMD_GR_S_PropertySuccess) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_PropertySuccess) ProtoMessage()               {}
func (*CMD_GR_S_PropertySuccess) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *CMD_GR_S_PropertySuccess) GetRequestArea() int32 {
	if m != nil && m.RequestArea != nil {
		return *m.RequestArea
	}
	return 0
}

func (m *CMD_GR_S_PropertySuccess) GetItemCount() int32 {
	if m != nil && m.ItemCount != nil {
		return *m.ItemCount
	}
	return 0
}

func (m *CMD_GR_S_PropertySuccess) GetPropertyIndex() int32 {
	if m != nil && m.PropertyIndex != nil {
		return *m.PropertyIndex
	}
	return 0
}

func (m *CMD_GR_S_PropertySuccess) GetSourceUserId() uint32 {
	if m != nil && m.SourceUserId != nil {
		return *m.SourceUserId
	}
	return 0
}

func (m *CMD_GR_S_PropertySuccess) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

// 道具失败
type CMD_GR_PropertyFailure struct {
	RequestArea      *int32 `protobuf:"varint,1,opt,name=request_area,json=requestArea" json:"request_area,omitempty"`
	ErrorCode        *int32 `protobuf:"varint,2,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Describe         []byte `protobuf:"bytes,3,opt,name=describe" json:"describe,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_PropertyFailure) Reset()                    { *m = CMD_GR_PropertyFailure{} }
func (m *CMD_GR_PropertyFailure) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_PropertyFailure) ProtoMessage()               {}
func (*CMD_GR_PropertyFailure) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *CMD_GR_PropertyFailure) GetRequestArea() int32 {
	if m != nil && m.RequestArea != nil {
		return *m.RequestArea
	}
	return 0
}

func (m *CMD_GR_PropertyFailure) GetErrorCode() int32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *CMD_GR_PropertyFailure) GetDescribe() []byte {
	if m != nil {
		return m.Describe
	}
	return nil
}

// 道具消息
type CMD_GR_S_PropertyMessage struct {
	// 道具信息
	PropertyIndex    *int32  `protobuf:"varint,1,opt,name=property_index,json=propertyIndex" json:"property_index,omitempty"`
	PropertyCount    *int32  `protobuf:"varint,2,opt,name=property_count,json=propertyCount" json:"property_count,omitempty"`
	SourceUserId     *uint32 `protobuf:"varint,3,opt,name=source_user_id,json=sourceUserId" json:"source_user_id,omitempty"`
	TargerUserId     *uint32 `protobuf:"varint,4,opt,name=targer_user_id,json=targerUserId" json:"targer_user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_S_PropertyMessage) Reset()                    { *m = CMD_GR_S_PropertyMessage{} }
func (m *CMD_GR_S_PropertyMessage) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_PropertyMessage) ProtoMessage()               {}
func (*CMD_GR_S_PropertyMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *CMD_GR_S_PropertyMessage) GetPropertyIndex() int32 {
	if m != nil && m.PropertyIndex != nil {
		return *m.PropertyIndex
	}
	return 0
}

func (m *CMD_GR_S_PropertyMessage) GetPropertyCount() int32 {
	if m != nil && m.PropertyCount != nil {
		return *m.PropertyCount
	}
	return 0
}

func (m *CMD_GR_S_PropertyMessage) GetSourceUserId() uint32 {
	if m != nil && m.SourceUserId != nil {
		return *m.SourceUserId
	}
	return 0
}

func (m *CMD_GR_S_PropertyMessage) GetTargerUserId() uint32 {
	if m != nil && m.TargerUserId != nil {
		return *m.TargerUserId
	}
	return 0
}

// 道具效应
type CMD_GR_S_PropertyEffect struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	MemberOrder      *int32  `protobuf:"varint,2,opt,name=member_order,json=memberOrder" json:"member_order,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_S_PropertyEffect) Reset()                    { *m = CMD_GR_S_PropertyEffect{} }
func (m *CMD_GR_S_PropertyEffect) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_PropertyEffect) ProtoMessage()               {}
func (*CMD_GR_S_PropertyEffect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *CMD_GR_S_PropertyEffect) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_S_PropertyEffect) GetMemberOrder() int32 {
	if m != nil && m.MemberOrder != nil {
		return *m.MemberOrder
	}
	return 0
}

// 发送喇叭
type CMD_GR_C_SendTrumpet struct {
	RequestArea      *int32  `protobuf:"varint,1,opt,name=request_area,json=requestArea" json:"request_area,omitempty"`
	PropertyIndex    *int32  `protobuf:"varint,2,opt,name=property_index,json=propertyIndex" json:"property_index,omitempty"`
	TrumpetColor     *uint32 `protobuf:"varint,3,opt,name=trumpet_color,json=trumpetColor" json:"trumpet_color,omitempty"`
	TrumpetContent   []byte  `protobuf:"bytes,4,opt,name=trumpet_content,json=trumpetContent" json:"trumpet_content,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_C_SendTrumpet) Reset()                    { *m = CMD_GR_C_SendTrumpet{} }
func (m *CMD_GR_C_SendTrumpet) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_SendTrumpet) ProtoMessage()               {}
func (*CMD_GR_C_SendTrumpet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *CMD_GR_C_SendTrumpet) GetRequestArea() int32 {
	if m != nil && m.RequestArea != nil {
		return *m.RequestArea
	}
	return 0
}

func (m *CMD_GR_C_SendTrumpet) GetPropertyIndex() int32 {
	if m != nil && m.PropertyIndex != nil {
		return *m.PropertyIndex
	}
	return 0
}

func (m *CMD_GR_C_SendTrumpet) GetTrumpetColor() uint32 {
	if m != nil && m.TrumpetColor != nil {
		return *m.TrumpetColor
	}
	return 0
}

func (m *CMD_GR_C_SendTrumpet) GetTrumpetContent() []byte {
	if m != nil {
		return m.TrumpetContent
	}
	return nil
}

// 发送喇叭
type CMD_GR_S_SendTrumpet struct {
	PropertyIndex    *int32  `protobuf:"varint,1,opt,name=property_index,json=propertyIndex" json:"property_index,omitempty"`
	SendUserId       *uint32 `protobuf:"varint,2,opt,name=send_user_id,json=sendUserId" json:"send_user_id,omitempty"`
	TrumpetColor     *uint32 `protobuf:"varint,3,opt,name=trumpet_color,json=trumpetColor" json:"trumpet_color,omitempty"`
	SendNickName     []byte  `protobuf:"bytes,4,opt,name=send_nick_name,json=sendNickName" json:"send_nick_name,omitempty"`
	TrumpetContent   []byte  `protobuf:"bytes,5,opt,name=trumpet_content,json=trumpetContent" json:"trumpet_content,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_S_SendTrumpet) Reset()                    { *m = CMD_GR_S_SendTrumpet{} }
func (m *CMD_GR_S_SendTrumpet) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_SendTrumpet) ProtoMessage()               {}
func (*CMD_GR_S_SendTrumpet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *CMD_GR_S_SendTrumpet) GetPropertyIndex() int32 {
	if m != nil && m.PropertyIndex != nil {
		return *m.PropertyIndex
	}
	return 0
}

func (m *CMD_GR_S_SendTrumpet) GetSendUserId() uint32 {
	if m != nil && m.SendUserId != nil {
		return *m.SendUserId
	}
	return 0
}

func (m *CMD_GR_S_SendTrumpet) GetTrumpetColor() uint32 {
	if m != nil && m.TrumpetColor != nil {
		return *m.TrumpetColor
	}
	return 0
}

func (m *CMD_GR_S_SendTrumpet) GetSendNickName() []byte {
	if m != nil {
		return m.SendNickName
	}
	return nil
}

func (m *CMD_GR_S_SendTrumpet) GetTrumpetContent() []byte {
	if m != nil {
		return m.TrumpetContent
	}
	return nil
}

// 用户拒绝黑名单坐下
type CMD_GR_UserRepulseSit struct {
	TableId          *int32  `protobuf:"varint,1,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	ChairId          *int32  `protobuf:"varint,2,opt,name=chair_id,json=chairId" json:"chair_id,omitempty"`
	UserId           *uint32 `protobuf:"varint,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	RepulseUserId    *uint32 `protobuf:"varint,4,opt,name=repulse_user_id,json=repulseUserId" json:"repulse_user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_UserRepulseSit) Reset()                    { *m = CMD_GR_UserRepulseSit{} }
func (m *CMD_GR_UserRepulseSit) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_UserRepulseSit) ProtoMessage()               {}
func (*CMD_GR_UserRepulseSit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *CMD_GR_UserRepulseSit) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *CMD_GR_UserRepulseSit) GetChairId() int32 {
	if m != nil && m.ChairId != nil {
		return *m.ChairId
	}
	return 0
}

func (m *CMD_GR_UserRepulseSit) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_UserRepulseSit) GetRepulseUserId() uint32 {
	if m != nil && m.RepulseUserId != nil {
		return *m.RepulseUserId
	}
	return 0
}

// 用户规则
type CMD_GR_UserRule struct {
	RuleMask         *int32 `protobuf:"varint,1,opt,name=rule_mask,json=ruleMask" json:"rule_mask,omitempty"`
	MinWinRate       *int32 `protobuf:"varint,2,opt,name=min_win_rate,json=minWinRate" json:"min_win_rate,omitempty"`
	MaxFleeRate      *int32 `protobuf:"varint,3,opt,name=max_flee_rate,json=maxFleeRate" json:"max_flee_rate,omitempty"`
	MaxGameScore     *int32 `protobuf:"varint,4,opt,name=max_game_score,json=maxGameScore" json:"max_game_score,omitempty"`
	MinGameScore     *int32 `protobuf:"varint,5,opt,name=min_game_score,json=minGameScore" json:"min_game_score,omitempty"`
	Password         []byte `protobuf:"bytes,6,opt,name=password" json:"password,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_UserRule) Reset()                    { *m = CMD_GR_UserRule{} }
func (m *CMD_GR_UserRule) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_UserRule) ProtoMessage()               {}
func (*CMD_GR_UserRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *CMD_GR_UserRule) GetRuleMask() int32 {
	if m != nil && m.RuleMask != nil {
		return *m.RuleMask
	}
	return 0
}

func (m *CMD_GR_UserRule) GetMinWinRate() int32 {
	if m != nil && m.MinWinRate != nil {
		return *m.MinWinRate
	}
	return 0
}

func (m *CMD_GR_UserRule) GetMaxFleeRate() int32 {
	if m != nil && m.MaxFleeRate != nil {
		return *m.MaxFleeRate
	}
	return 0
}

func (m *CMD_GR_UserRule) GetMaxGameScore() int32 {
	if m != nil && m.MaxGameScore != nil {
		return *m.MaxGameScore
	}
	return 0
}

func (m *CMD_GR_UserRule) GetMinGameScore() int32 {
	if m != nil && m.MinGameScore != nil {
		return *m.MinGameScore
	}
	return 0
}

func (m *CMD_GR_UserRule) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

// 请求用户信息
type CMD_GR_UserInfoReq struct {
	UserIdReq        *uint32 `protobuf:"varint,1,opt,name=user_id_req,json=userIdReq" json:"user_id_req,omitempty"`
	TablePos         *int32  `protobuf:"varint,2,opt,name=table_pos,json=tablePos" json:"table_pos,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_UserInfoReq) Reset()                    { *m = CMD_GR_UserInfoReq{} }
func (m *CMD_GR_UserInfoReq) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_UserInfoReq) ProtoMessage()               {}
func (*CMD_GR_UserInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *CMD_GR_UserInfoReq) GetUserIdReq() uint32 {
	if m != nil && m.UserIdReq != nil {
		return *m.UserIdReq
	}
	return 0
}

func (m *CMD_GR_UserInfoReq) GetTablePos() int32 {
	if m != nil && m.TablePos != nil {
		return *m.TablePos
	}
	return 0
}

// 请求用户信息
type CMD_GR_ChairUserInfoReq struct {
	TableId          *int32 `protobuf:"varint,1,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	ChairId          *int32 `protobuf:"varint,2,opt,name=chair_id,json=chairId" json:"chair_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_ChairUserInfoReq) Reset()                    { *m = CMD_GR_ChairUserInfoReq{} }
func (m *CMD_GR_ChairUserInfoReq) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_ChairUserInfoReq) ProtoMessage()               {}
func (*CMD_GR_ChairUserInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *CMD_GR_ChairUserInfoReq) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *CMD_GR_ChairUserInfoReq) GetChairId() int32 {
	if m != nil && m.ChairId != nil {
		return *m.ChairId
	}
	return 0
}

// 桌子状态
type TagTableStatus struct {
	Table_Lock       *int32 `protobuf:"varint,1,opt,name=table_Lock,json=tableLock" json:"table_Lock,omitempty"`
	PlayStatus       *int32 `protobuf:"varint,2,opt,name=play_status,json=playStatus" json:"play_status,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TagTableStatus) Reset()                    { *m = TagTableStatus{} }
func (m *TagTableStatus) String() string            { return proto.CompactTextString(m) }
func (*TagTableStatus) ProtoMessage()               {}
func (*TagTableStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *TagTableStatus) GetTable_Lock() int32 {
	if m != nil && m.Table_Lock != nil {
		return *m.Table_Lock
	}
	return 0
}

func (m *TagTableStatus) GetPlayStatus() int32 {
	if m != nil && m.PlayStatus != nil {
		return *m.PlayStatus
	}
	return 0
}

// 桌子信息
type CMD_GR_TableInfo struct {
	TableStatusList  []*TagTableStatus `protobuf:"bytes,1,rep,name=table_status_list,json=tableStatusList" json:"table_status_list,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CMD_GR_TableInfo) Reset()                    { *m = CMD_GR_TableInfo{} }
func (m *CMD_GR_TableInfo) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_TableInfo) ProtoMessage()               {}
func (*CMD_GR_TableInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *CMD_GR_TableInfo) GetTableStatusList() []*TagTableStatus {
	if m != nil {
		return m.TableStatusList
	}
	return nil
}

// 桌子状态
type CMD_GR_TableStatus struct {
	TableId          *int32          `protobuf:"varint,1,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	TableStatus      *TagTableStatus `protobuf:"bytes,2,opt,name=table_status,json=tableStatus" json:"table_status,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CMD_GR_TableStatus) Reset()                    { *m = CMD_GR_TableStatus{} }
func (m *CMD_GR_TableStatus) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_TableStatus) ProtoMessage()               {}
func (*CMD_GR_TableStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *CMD_GR_TableStatus) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *CMD_GR_TableStatus) GetTableStatus() *TagTableStatus {
	if m != nil {
		return m.TableStatus
	}
	return nil
}

// 查询银行
type CMD_GR_C_QueryInsureInfoRequest struct {
	ActivityGame     *int32 `protobuf:"varint,1,opt,name=activity_game,json=activityGame" json:"activity_game,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_C_QueryInsureInfoRequest) Reset()         { *m = CMD_GR_C_QueryInsureInfoRequest{} }
func (m *CMD_GR_C_QueryInsureInfoRequest) String() string { return proto.CompactTextString(m) }
func (*CMD_GR_C_QueryInsureInfoRequest) ProtoMessage()    {}
func (*CMD_GR_C_QueryInsureInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{56}
}

func (m *CMD_GR_C_QueryInsureInfoRequest) GetActivityGame() int32 {
	if m != nil && m.ActivityGame != nil {
		return *m.ActivityGame
	}
	return 0
}

// 存款请求
type CMD_GR_C_SaveScoreRequest struct {
	ActivityGame     *int32 `protobuf:"varint,1,opt,name=activity_game,json=activityGame" json:"activity_game,omitempty"`
	SaveScore        *int64 `protobuf:"varint,2,opt,name=save_score,json=saveScore" json:"save_score,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_C_SaveScoreRequest) Reset()                    { *m = CMD_GR_C_SaveScoreRequest{} }
func (m *CMD_GR_C_SaveScoreRequest) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_SaveScoreRequest) ProtoMessage()               {}
func (*CMD_GR_C_SaveScoreRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *CMD_GR_C_SaveScoreRequest) GetActivityGame() int32 {
	if m != nil && m.ActivityGame != nil {
		return *m.ActivityGame
	}
	return 0
}

func (m *CMD_GR_C_SaveScoreRequest) GetSaveScore() int64 {
	if m != nil && m.SaveScore != nil {
		return *m.SaveScore
	}
	return 0
}

// 取款请求
type CMD_GR_C_TakeScoreRequest struct {
	ActivityGame     *int32 `protobuf:"varint,1,opt,name=activity_game,json=activityGame" json:"activity_game,omitempty"`
	TakeScore        *int64 `protobuf:"varint,2,opt,name=take_score,json=takeScore" json:"take_score,omitempty"`
	InsurePass       []byte `protobuf:"bytes,3,opt,name=insure_pass,json=insurePass" json:"insure_pass,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_C_TakeScoreRequest) Reset()                    { *m = CMD_GR_C_TakeScoreRequest{} }
func (m *CMD_GR_C_TakeScoreRequest) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_TakeScoreRequest) ProtoMessage()               {}
func (*CMD_GR_C_TakeScoreRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

func (m *CMD_GR_C_TakeScoreRequest) GetActivityGame() int32 {
	if m != nil && m.ActivityGame != nil {
		return *m.ActivityGame
	}
	return 0
}

func (m *CMD_GR_C_TakeScoreRequest) GetTakeScore() int64 {
	if m != nil && m.TakeScore != nil {
		return *m.TakeScore
	}
	return 0
}

func (m *CMD_GR_C_TakeScoreRequest) GetInsurePass() []byte {
	if m != nil {
		return m.InsurePass
	}
	return nil
}

// 转账金币
type CMD_GP_C_TransferScoreRequest struct {
	ActivityGame     *int32 `protobuf:"varint,1,opt,name=activity_game,json=activityGame" json:"activity_game,omitempty"`
	ByNickName       *int32 `protobuf:"varint,2,opt,name=by_nick_name,json=byNickName" json:"by_nick_name,omitempty"`
	TransferScore    *int64 `protobuf:"varint,3,opt,name=transfer_score,json=transferScore" json:"transfer_score,omitempty"`
	NickName         []byte `protobuf:"bytes,4,opt,name=nick_name,json=nickName" json:"nick_name,omitempty"`
	InsurePass       []byte `protobuf:"bytes,5,opt,name=insure_pass,json=insurePass" json:"insure_pass,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GP_C_TransferScoreRequest) Reset()                    { *m = CMD_GP_C_TransferScoreRequest{} }
func (m *CMD_GP_C_TransferScoreRequest) String() string            { return proto.CompactTextString(m) }
func (*CMD_GP_C_TransferScoreRequest) ProtoMessage()               {}
func (*CMD_GP_C_TransferScoreRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *CMD_GP_C_TransferScoreRequest) GetActivityGame() int32 {
	if m != nil && m.ActivityGame != nil {
		return *m.ActivityGame
	}
	return 0
}

func (m *CMD_GP_C_TransferScoreRequest) GetByNickName() int32 {
	if m != nil && m.ByNickName != nil {
		return *m.ByNickName
	}
	return 0
}

func (m *CMD_GP_C_TransferScoreRequest) GetTransferScore() int64 {
	if m != nil && m.TransferScore != nil {
		return *m.TransferScore
	}
	return 0
}

func (m *CMD_GP_C_TransferScoreRequest) GetNickName() []byte {
	if m != nil {
		return m.NickName
	}
	return nil
}

func (m *CMD_GP_C_TransferScoreRequest) GetInsurePass() []byte {
	if m != nil {
		return m.InsurePass
	}
	return nil
}

// 修改密码(SeeYOu)
type CMD_MB_C_ModifyInsurePass struct {
	ActivityGame     *int32 `protobuf:"varint,1,opt,name=activity_game,json=activityGame" json:"activity_game,omitempty"`
	DesPassword      []byte `protobuf:"bytes,2,opt,name=des_password,json=desPassword" json:"des_password,omitempty"`
	ScrPassword      []byte `protobuf:"bytes,3,opt,name=scr_password,json=scrPassword" json:"scr_password,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_MB_C_ModifyInsurePass) Reset()                    { *m = CMD_MB_C_ModifyInsurePass{} }
func (m *CMD_MB_C_ModifyInsurePass) String() string            { return proto.CompactTextString(m) }
func (*CMD_MB_C_ModifyInsurePass) ProtoMessage()               {}
func (*CMD_MB_C_ModifyInsurePass) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *CMD_MB_C_ModifyInsurePass) GetActivityGame() int32 {
	if m != nil && m.ActivityGame != nil {
		return *m.ActivityGame
	}
	return 0
}

func (m *CMD_MB_C_ModifyInsurePass) GetDesPassword() []byte {
	if m != nil {
		return m.DesPassword
	}
	return nil
}

func (m *CMD_MB_C_ModifyInsurePass) GetScrPassword() []byte {
	if m != nil {
		return m.ScrPassword
	}
	return nil
}

// 移动端转账(SeeYOu)
type CMD_MB_C_UserTransferScore struct {
	ActivityGame     *int32  `protobuf:"varint,1,opt,name=activity_game,json=activityGame" json:"activity_game,omitempty"`
	TargetId         *uint32 `protobuf:"varint,2,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	TransferScore    *int64  `protobuf:"varint,3,opt,name=transfer_score,json=transferScore" json:"transfer_score,omitempty"`
	Password         []byte  `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
	MachineId        []byte  `protobuf:"bytes,5,opt,name=machine_id,json=machineId" json:"machine_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_MB_C_UserTransferScore) Reset()                    { *m = CMD_MB_C_UserTransferScore{} }
func (m *CMD_MB_C_UserTransferScore) String() string            { return proto.CompactTextString(m) }
func (*CMD_MB_C_UserTransferScore) ProtoMessage()               {}
func (*CMD_MB_C_UserTransferScore) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

func (m *CMD_MB_C_UserTransferScore) GetActivityGame() int32 {
	if m != nil && m.ActivityGame != nil {
		return *m.ActivityGame
	}
	return 0
}

func (m *CMD_MB_C_UserTransferScore) GetTargetId() uint32 {
	if m != nil && m.TargetId != nil {
		return *m.TargetId
	}
	return 0
}

func (m *CMD_MB_C_UserTransferScore) GetTransferScore() int64 {
	if m != nil && m.TransferScore != nil {
		return *m.TransferScore
	}
	return 0
}

func (m *CMD_MB_C_UserTransferScore) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *CMD_MB_C_UserTransferScore) GetMachineId() []byte {
	if m != nil {
		return m.MachineId
	}
	return nil
}

// 移动端查询银行操作(SeeYOu)
type CMD_MB_C_InsureRecord_Get struct {
	ActivityGame     *int32 `protobuf:"varint,1,opt,name=activity_game,json=activityGame" json:"activity_game,omitempty"`
	MaxRecordId      *int32 `protobuf:"varint,2,opt,name=max_record_id,json=maxRecordId" json:"max_record_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_MB_C_InsureRecord_Get) Reset()                    { *m = CMD_MB_C_InsureRecord_Get{} }
func (m *CMD_MB_C_InsureRecord_Get) String() string            { return proto.CompactTextString(m) }
func (*CMD_MB_C_InsureRecord_Get) ProtoMessage()               {}
func (*CMD_MB_C_InsureRecord_Get) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *CMD_MB_C_InsureRecord_Get) GetActivityGame() int32 {
	if m != nil && m.ActivityGame != nil {
		return *m.ActivityGame
	}
	return 0
}

func (m *CMD_MB_C_InsureRecord_Get) GetMaxRecordId() int32 {
	if m != nil && m.MaxRecordId != nil {
		return *m.MaxRecordId
	}
	return 0
}

type CMD_MB_S_InsureRecord_Back struct {
	ActivityGame         *int32                        `protobuf:"varint,1,opt,name=activity_game,json=activityGame" json:"activity_game,omitempty"`
	MaxRecord            *int32                        `protobuf:"varint,2,opt,name=max_record,json=maxRecord" json:"max_record,omitempty"`
	InsureRecordDataList []*TagMBInsureRecordData `protobuf:"bytes,3,rep,name=insure_record_data_list,json=insureRecordDataList" json:"insure_record_data_list,omitempty"`
	XXX_unrecognized     []byte                        `json:"-"`
}

func (m *CMD_MB_S_InsureRecord_Back) Reset()                    { *m = CMD_MB_S_InsureRecord_Back{} }
func (m *CMD_MB_S_InsureRecord_Back) String() string            { return proto.CompactTextString(m) }
func (*CMD_MB_S_InsureRecord_Back) ProtoMessage()               {}
func (*CMD_MB_S_InsureRecord_Back) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *CMD_MB_S_InsureRecord_Back) GetActivityGame() int32 {
	if m != nil && m.ActivityGame != nil {
		return *m.ActivityGame
	}
	return 0
}

func (m *CMD_MB_S_InsureRecord_Back) GetMaxRecord() int32 {
	if m != nil && m.MaxRecord != nil {
		return *m.MaxRecord
	}
	return 0
}

func (m *CMD_MB_S_InsureRecord_Back) GetInsureRecordDataList() []*TagMBInsureRecordData {
	if m != nil {
		return m.InsureRecordDataList
	}
	return nil
}

// 查询用户
type CMD_GR_C_QueryUserInfoRequest struct {
	ActivityGame     *int32 `protobuf:"varint,1,opt,name=activity_game,json=activityGame" json:"activity_game,omitempty"`
	ByNickName       *int32 `protobuf:"varint,2,opt,name=by_nick_name,json=byNickName" json:"by_nick_name,omitempty"`
	NickName         []byte `protobuf:"bytes,3,opt,name=nick_name,json=nickName" json:"nick_name,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_C_QueryUserInfoRequest) Reset()                    { *m = CMD_GR_C_QueryUserInfoRequest{} }
func (m *CMD_GR_C_QueryUserInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_QueryUserInfoRequest) ProtoMessage()               {}
func (*CMD_GR_C_QueryUserInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

func (m *CMD_GR_C_QueryUserInfoRequest) GetActivityGame() int32 {
	if m != nil && m.ActivityGame != nil {
		return *m.ActivityGame
	}
	return 0
}

func (m *CMD_GR_C_QueryUserInfoRequest) GetByNickName() int32 {
	if m != nil && m.ByNickName != nil {
		return *m.ByNickName
	}
	return 0
}

func (m *CMD_GR_C_QueryUserInfoRequest) GetNickName() []byte {
	if m != nil {
		return m.NickName
	}
	return nil
}

// 银行资料
type CMD_GR_S_UserInsureInfo struct {
	ActivityGame         *int32 `protobuf:"varint,1,opt,name=activity_game,json=activityGame" json:"activity_game,omitempty"`
	RevenueTake          *int32 `protobuf:"varint,2,opt,name=revenue_take,json=revenueTake" json:"revenue_take,omitempty"`
	RevenueTransfer      *int32 `protobuf:"varint,3,opt,name=revenue_transfer,json=revenueTransfer" json:"revenue_transfer,omitempty"`
	ServerId             *int32 `protobuf:"varint,4,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	UserScore            *int64 `protobuf:"varint,5,opt,name=user_score,json=userScore" json:"user_score,omitempty"`
	UserInsure           *int64 `protobuf:"varint,6,opt,name=user_insure,json=userInsure" json:"user_insure,omitempty"`
	TransferPrerequisite *int64 `protobuf:"varint,7,opt,name=transfer_prerequisite,json=transferPrerequisite" json:"transfer_prerequisite,omitempty"`
	XXX_unrecognized     []byte `json:"-"`
}

func (m *CMD_GR_S_UserInsureInfo) Reset()                    { *m = CMD_GR_S_UserInsureInfo{} }
func (m *CMD_GR_S_UserInsureInfo) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_UserInsureInfo) ProtoMessage()               {}
func (*CMD_GR_S_UserInsureInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65} }

func (m *CMD_GR_S_UserInsureInfo) GetActivityGame() int32 {
	if m != nil && m.ActivityGame != nil {
		return *m.ActivityGame
	}
	return 0
}

func (m *CMD_GR_S_UserInsureInfo) GetRevenueTake() int32 {
	if m != nil && m.RevenueTake != nil {
		return *m.RevenueTake
	}
	return 0
}

func (m *CMD_GR_S_UserInsureInfo) GetRevenueTransfer() int32 {
	if m != nil && m.RevenueTransfer != nil {
		return *m.RevenueTransfer
	}
	return 0
}

func (m *CMD_GR_S_UserInsureInfo) GetServerId() int32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *CMD_GR_S_UserInsureInfo) GetUserScore() int64 {
	if m != nil && m.UserScore != nil {
		return *m.UserScore
	}
	return 0
}

func (m *CMD_GR_S_UserInsureInfo) GetUserInsure() int64 {
	if m != nil && m.UserInsure != nil {
		return *m.UserInsure
	}
	return 0
}

func (m *CMD_GR_S_UserInsureInfo) GetTransferPrerequisite() int64 {
	if m != nil && m.TransferPrerequisite != nil {
		return *m.TransferPrerequisite
	}
	return 0
}

// 银行成功
type CMD_GR_S_UserInsureSuccess struct {
	ActivityGame     *int32 `protobuf:"varint,1,opt,name=activity_game,json=activityGame" json:"activity_game,omitempty"`
	UserScore        *int64 `protobuf:"varint,2,opt,name=user_score,json=userScore" json:"user_score,omitempty"`
	UserInsure       *int64 `protobuf:"varint,3,opt,name=user_insure,json=userInsure" json:"user_insure,omitempty"`
	Describe         []byte `protobuf:"bytes,4,opt,name=describe" json:"describe,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_S_UserInsureSuccess) Reset()                    { *m = CMD_GR_S_UserInsureSuccess{} }
func (m *CMD_GR_S_UserInsureSuccess) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_UserInsureSuccess) ProtoMessage()               {}
func (*CMD_GR_S_UserInsureSuccess) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

func (m *CMD_GR_S_UserInsureSuccess) GetActivityGame() int32 {
	if m != nil && m.ActivityGame != nil {
		return *m.ActivityGame
	}
	return 0
}

func (m *CMD_GR_S_UserInsureSuccess) GetUserScore() int64 {
	if m != nil && m.UserScore != nil {
		return *m.UserScore
	}
	return 0
}

func (m *CMD_GR_S_UserInsureSuccess) GetUserInsure() int64 {
	if m != nil && m.UserInsure != nil {
		return *m.UserInsure
	}
	return 0
}

func (m *CMD_GR_S_UserInsureSuccess) GetDescribe() []byte {
	if m != nil {
		return m.Describe
	}
	return nil
}

// 银行失败
type CMD_GR_S_UserInsureFailure struct {
	ActivityGame     *int32 `protobuf:"varint,1,opt,name=activity_game,json=activityGame" json:"activity_game,omitempty"`
	ErrorCode        *int32 `protobuf:"varint,2,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Describe         []byte `protobuf:"bytes,3,opt,name=describe" json:"describe,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_S_UserInsureFailure) Reset()                    { *m = CMD_GR_S_UserInsureFailure{} }
func (m *CMD_GR_S_UserInsureFailure) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_UserInsureFailure) ProtoMessage()               {}
func (*CMD_GR_S_UserInsureFailure) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

func (m *CMD_GR_S_UserInsureFailure) GetActivityGame() int32 {
	if m != nil && m.ActivityGame != nil {
		return *m.ActivityGame
	}
	return 0
}

func (m *CMD_GR_S_UserInsureFailure) GetErrorCode() int32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *CMD_GR_S_UserInsureFailure) GetDescribe() []byte {
	if m != nil {
		return m.Describe
	}
	return nil
}

// 用户信息
type CMD_GR_S_UserTransferUserInfo struct {
	ActivityGame     *int32  `protobuf:"varint,1,opt,name=activity_game,json=activityGame" json:"activity_game,omitempty"`
	TargetGameId     *uint32 `protobuf:"varint,2,opt,name=target_game_id,json=targetGameId" json:"target_game_id,omitempty"`
	NickName         []byte  `protobuf:"bytes,3,opt,name=nick_name,json=nickName" json:"nick_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_S_UserTransferUserInfo) Reset()                    { *m = CMD_GR_S_UserTransferUserInfo{} }
func (m *CMD_GR_S_UserTransferUserInfo) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_UserTransferUserInfo) ProtoMessage()               {}
func (*CMD_GR_S_UserTransferUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *CMD_GR_S_UserTransferUserInfo) GetActivityGame() int32 {
	if m != nil && m.ActivityGame != nil {
		return *m.ActivityGame
	}
	return 0
}

func (m *CMD_GR_S_UserTransferUserInfo) GetTargetGameId() uint32 {
	if m != nil && m.TargetGameId != nil {
		return *m.TargetGameId
	}
	return 0
}

func (m *CMD_GR_S_UserTransferUserInfo) GetNickName() []byte {
	if m != nil {
		return m.NickName
	}
	return nil
}

// 发送警告
type CMD_GR_SendWarning struct {
	TargetUserId     *uint32 `protobuf:"varint,1,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	WarningMessage   []byte  `protobuf:"bytes,2,opt,name=warning_message,json=warningMessage" json:"warning_message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_SendWarning) Reset()                    { *m = CMD_GR_SendWarning{} }
func (m *CMD_GR_SendWarning) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_SendWarning) ProtoMessage()               {}
func (*CMD_GR_SendWarning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

func (m *CMD_GR_SendWarning) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

func (m *CMD_GR_SendWarning) GetWarningMessage() []byte {
	if m != nil {
		return m.WarningMessage
	}
	return nil
}

// 系统消息
type CMD_GR_SendMessage struct {
	Game             *int32 `protobuf:"varint,1,opt,name=game" json:"game,omitempty"`
	Room             *int32 `protobuf:"varint,2,opt,name=room" json:"room,omitempty"`
	AllRoom          *int32 `protobuf:"varint,3,opt,name=all_room,json=allRoom" json:"all_room,omitempty"`
	SystemMessage    []byte `protobuf:"bytes,4,opt,name=system_message,json=systemMessage" json:"system_message,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_SendMessage) Reset()                    { *m = CMD_GR_SendMessage{} }
func (m *CMD_GR_SendMessage) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_SendMessage) ProtoMessage()               {}
func (*CMD_GR_SendMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

func (m *CMD_GR_SendMessage) GetGame() int32 {
	if m != nil && m.Game != nil {
		return *m.Game
	}
	return 0
}

func (m *CMD_GR_SendMessage) GetRoom() int32 {
	if m != nil && m.Room != nil {
		return *m.Room
	}
	return 0
}

func (m *CMD_GR_SendMessage) GetAllRoom() int32 {
	if m != nil && m.AllRoom != nil {
		return *m.AllRoom
	}
	return 0
}

func (m *CMD_GR_SendMessage) GetSystemMessage() []byte {
	if m != nil {
		return m.SystemMessage
	}
	return nil
}

// 查看地址
type CMD_GR_LookUserIP struct {
	TargetUserId     *uint32 `protobuf:"varint,1,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_LookUserIP) Reset()                    { *m = CMD_GR_LookUserIP{} }
func (m *CMD_GR_LookUserIP) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_LookUserIP) ProtoMessage()               {}
func (*CMD_GR_LookUserIP) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

func (m *CMD_GR_LookUserIP) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

// 踢出用户
type CMD_GR_KickUser struct {
	TargetUserId     *uint32 `protobuf:"varint,1,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_KickUser) Reset()                    { *m = CMD_GR_KickUser{} }
func (m *CMD_GR_KickUser) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_KickUser) ProtoMessage()               {}
func (*CMD_GR_KickUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *CMD_GR_KickUser) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

// 禁用帐户
type CMD_GR_LimitAccounts struct {
	TargetUserId     *uint32 `protobuf:"varint,1,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_LimitAccounts) Reset()                    { *m = CMD_GR_LimitAccounts{} }
func (m *CMD_GR_LimitAccounts) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_LimitAccounts) ProtoMessage()               {}
func (*CMD_GR_LimitAccounts) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{73} }

func (m *CMD_GR_LimitAccounts) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

// 权限设置
type CMD_GR_SetUserRight struct {
	// 目标用户
	TargetUserId *uint32 `protobuf:"varint,1,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	// 绑定变量
	GameRight     *int32 `protobuf:"varint,2,opt,name=game_right,json=gameRight" json:"game_right,omitempty"`
	AccountsRight *int32 `protobuf:"varint,3,opt,name=accounts_right,json=accountsRight" json:"accounts_right,omitempty"`
	// 权限变化
	LimitRoomChat    *int32 `protobuf:"varint,4,opt,name=limit_room_chat,json=limitRoomChat" json:"limit_room_chat,omitempty"`
	LimitGameChat    *int32 `protobuf:"varint,5,opt,name=limit_game_chat,json=limitGameChat" json:"limit_game_chat,omitempty"`
	LimitPlayGame    *int32 `protobuf:"varint,6,opt,name=limit_play_game,json=limitPlayGame" json:"limit_play_game,omitempty"`
	LimitSendWisper  *int32 `protobuf:"varint,7,opt,name=limit_send_wisper,json=limitSendWisper" json:"limit_send_wisper,omitempty"`
	LimitLookonGame  *int32 `protobuf:"varint,8,opt,name=limit_lookon_game,json=limitLookonGame" json:"limit_lookon_game,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_SetUserRight) Reset()                    { *m = CMD_GR_SetUserRight{} }
func (m *CMD_GR_SetUserRight) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_SetUserRight) ProtoMessage()               {}
func (*CMD_GR_SetUserRight) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{74} }

func (m *CMD_GR_SetUserRight) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

func (m *CMD_GR_SetUserRight) GetGameRight() int32 {
	if m != nil && m.GameRight != nil {
		return *m.GameRight
	}
	return 0
}

func (m *CMD_GR_SetUserRight) GetAccountsRight() int32 {
	if m != nil && m.AccountsRight != nil {
		return *m.AccountsRight
	}
	return 0
}

func (m *CMD_GR_SetUserRight) GetLimitRoomChat() int32 {
	if m != nil && m.LimitRoomChat != nil {
		return *m.LimitRoomChat
	}
	return 0
}

func (m *CMD_GR_SetUserRight) GetLimitGameChat() int32 {
	if m != nil && m.LimitGameChat != nil {
		return *m.LimitGameChat
	}
	return 0
}

func (m *CMD_GR_SetUserRight) GetLimitPlayGame() int32 {
	if m != nil && m.LimitPlayGame != nil {
		return *m.LimitPlayGame
	}
	return 0
}

func (m *CMD_GR_SetUserRight) GetLimitSendWisper() int32 {
	if m != nil && m.LimitSendWisper != nil {
		return *m.LimitSendWisper
	}
	return 0
}

func (m *CMD_GR_SetUserRight) GetLimitLookonGame() int32 {
	if m != nil && m.LimitLookonGame != nil {
		return *m.LimitLookonGame
	}
	return 0
}

// 房间配置
type TagServerOptionInfo struct {
	// 挂接属性
	KindId *int32 `protobuf:"varint,1,opt,name=kind_id,json=kindId" json:"kind_id,omitempty"`
	NodeId *int32 `protobuf:"varint,2,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	SortId *int32 `protobuf:"varint,3,opt,name=sort_id,json=sortId" json:"sort_id,omitempty"`
	// 税收配置
	RevenueRatio *int32 `protobuf:"varint,4,opt,name=revenue_ratio,json=revenueRatio" json:"revenue_ratio,omitempty"`
	ServiceScore *int64 `protobuf:"varint,5,opt,name=service_score,json=serviceScore" json:"service_score,omitempty"`
	// 房间配置
	RestrictScore *int64 `protobuf:"varint,6,opt,name=restrict_score,json=restrictScore" json:"restrict_score,omitempty"`
	MinTableScore *int64 `protobuf:"varint,7,opt,name=min_table_score,json=minTableScore" json:"min_table_score,omitempty"`
	MinEnterScore *int64 `protobuf:"varint,8,opt,name=min_enter_score,json=minEnterScore" json:"min_enter_score,omitempty"`
	MaxEnterScore *int64 `protobuf:"varint,9,opt,name=max_enter_score,json=maxEnterScore" json:"max_enter_score,omitempty"`
	// 会员限制
	MinEnterMember *int32 `protobuf:"varint,10,opt,name=min_enter_member,json=minEnterMember" json:"min_enter_member,omitempty"`
	MaxEnterMember *int32 `protobuf:"varint,11,opt,name=max_enter_member,json=maxEnterMember" json:"max_enter_member,omitempty"`
	// 房间属性
	ServerRule       *int64 `protobuf:"varint,12,opt,name=server_rule,json=serverRule" json:"server_rule,omitempty"`
	ServerName       []byte `protobuf:"bytes,13,opt,name=server_name,json=serverName" json:"server_name,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TagServerOptionInfo) Reset()                    { *m = TagServerOptionInfo{} }
func (m *TagServerOptionInfo) String() string            { return proto.CompactTextString(m) }
func (*TagServerOptionInfo) ProtoMessage()               {}
func (*TagServerOptionInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75} }

func (m *TagServerOptionInfo) GetKindId() int32 {
	if m != nil && m.KindId != nil {
		return *m.KindId
	}
	return 0
}

func (m *TagServerOptionInfo) GetNodeId() int32 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

func (m *TagServerOptionInfo) GetSortId() int32 {
	if m != nil && m.SortId != nil {
		return *m.SortId
	}
	return 0
}

func (m *TagServerOptionInfo) GetRevenueRatio() int32 {
	if m != nil && m.RevenueRatio != nil {
		return *m.RevenueRatio
	}
	return 0
}

func (m *TagServerOptionInfo) GetServiceScore() int64 {
	if m != nil && m.ServiceScore != nil {
		return *m.ServiceScore
	}
	return 0
}

func (m *TagServerOptionInfo) GetRestrictScore() int64 {
	if m != nil && m.RestrictScore != nil {
		return *m.RestrictScore
	}
	return 0
}

func (m *TagServerOptionInfo) GetMinTableScore() int64 {
	if m != nil && m.MinTableScore != nil {
		return *m.MinTableScore
	}
	return 0
}

func (m *TagServerOptionInfo) GetMinEnterScore() int64 {
	if m != nil && m.MinEnterScore != nil {
		return *m.MinEnterScore
	}
	return 0
}

func (m *TagServerOptionInfo) GetMaxEnterScore() int64 {
	if m != nil && m.MaxEnterScore != nil {
		return *m.MaxEnterScore
	}
	return 0
}

func (m *TagServerOptionInfo) GetMinEnterMember() int32 {
	if m != nil && m.MinEnterMember != nil {
		return *m.MinEnterMember
	}
	return 0
}

func (m *TagServerOptionInfo) GetMaxEnterMember() int32 {
	if m != nil && m.MaxEnterMember != nil {
		return *m.MaxEnterMember
	}
	return 0
}

func (m *TagServerOptionInfo) GetServerRule() int64 {
	if m != nil && m.ServerRule != nil {
		return *m.ServerRule
	}
	return 0
}

func (m *TagServerOptionInfo) GetServerName() []byte {
	if m != nil {
		return m.ServerName
	}
	return nil
}

// 房间设置
type CMD_GR_OptionCurrent struct {
	RuleMask         *uint32              `protobuf:"varint,1,opt,name=rule_mask,json=ruleMask" json:"rule_mask,omitempty"`
	ServerOptionInfo *TagServerOptionInfo `protobuf:"bytes,2,opt,name=server_option_info,json=serverOptionInfo" json:"server_option_info,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CMD_GR_OptionCurrent) Reset()                    { *m = CMD_GR_OptionCurrent{} }
func (m *CMD_GR_OptionCurrent) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_OptionCurrent) ProtoMessage()               {}
func (*CMD_GR_OptionCurrent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{76} }

func (m *CMD_GR_OptionCurrent) GetRuleMask() uint32 {
	if m != nil && m.RuleMask != nil {
		return *m.RuleMask
	}
	return 0
}

func (m *CMD_GR_OptionCurrent) GetServerOptionInfo() *TagServerOptionInfo {
	if m != nil {
		return m.ServerOptionInfo
	}
	return nil
}

// 房间设置
type CMD_GR_ServerOption struct {
	ServerOptionInfo *TagServerOptionInfo `protobuf:"bytes,1,opt,name=server_option_info,json=serverOptionInfo" json:"server_option_info,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CMD_GR_ServerOption) Reset()                    { *m = CMD_GR_ServerOption{} }
func (m *CMD_GR_ServerOption) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_ServerOption) ProtoMessage()               {}
func (*CMD_GR_ServerOption) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{77} }

func (m *CMD_GR_ServerOption) GetServerOptionInfo() *TagServerOptionInfo {
	if m != nil {
		return m.ServerOptionInfo
	}
	return nil
}

// 踢出所有用户
type CMD_GR_KickAllUser struct {
	KickMessage      []byte `protobuf:"bytes,1,opt,name=kick_message,json=kickMessage" json:"kick_message,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_KickAllUser) Reset()                    { *m = CMD_GR_KickAllUser{} }
func (m *CMD_GR_KickAllUser) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_KickAllUser) ProtoMessage()               {}
func (*CMD_GR_KickAllUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{78} }

func (m *CMD_GR_KickAllUser) GetKickMessage() []byte {
	if m != nil {
		return m.KickMessage
	}
	return nil
}

// 解散游戏
type CMD_GR_DismissGame struct {
	DismissTableNum  *int32 `protobuf:"varint,1,opt,name=dismiss_table_num,json=dismissTableNum" json:"dismiss_table_num,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_DismissGame) Reset()                    { *m = CMD_GR_DismissGame{} }
func (m *CMD_GR_DismissGame) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_DismissGame) ProtoMessage()               {}
func (*CMD_GR_DismissGame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{79} }

func (m *CMD_GR_DismissGame) GetDismissTableNum() int32 {
	if m != nil && m.DismissTableNum != nil {
		return *m.DismissTableNum
	}
	return 0
}

// 比赛报名费
type CMD_GR_S_MATCH_FEE struct {
	Score            *int32 `protobuf:"varint,1,opt,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_S_MATCH_FEE) Reset()                    { *m = CMD_GR_S_MATCH_FEE{} }
func (m *CMD_GR_S_MATCH_FEE) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_MATCH_FEE) ProtoMessage()               {}
func (*CMD_GR_S_MATCH_FEE) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{80} }

func (m *CMD_GR_S_MATCH_FEE) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

// 比赛报名失败
type CMD_GR_S_MATCH_FEE_FAIL struct {
	FailType         *int32 `protobuf:"varint,1,opt,name=fail_type,json=failType" json:"fail_type,omitempty"`
	Describe         []byte `protobuf:"bytes,2,opt,name=describe" json:"describe,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_S_MATCH_FEE_FAIL) Reset()                    { *m = CMD_GR_S_MATCH_FEE_FAIL{} }
func (m *CMD_GR_S_MATCH_FEE_FAIL) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_MATCH_FEE_FAIL) ProtoMessage()               {}
func (*CMD_GR_S_MATCH_FEE_FAIL) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{81} }

func (m *CMD_GR_S_MATCH_FEE_FAIL) GetFailType() int32 {
	if m != nil && m.FailType != nil {
		return *m.FailType
	}
	return 0
}

func (m *CMD_GR_S_MATCH_FEE_FAIL) GetDescribe() []byte {
	if m != nil {
		return m.Describe
	}
	return nil
}

// 提示信息
type CMD_GR_S_Match_Wait_Tip struct {
	Score            *int64 `protobuf:"varint,1,opt,name=score" json:"score,omitempty"`
	Rank             *int32 `protobuf:"varint,2,opt,name=rank" json:"rank,omitempty"`
	CurTableRank     *int32 `protobuf:"varint,3,opt,name=cur_table_rank,json=curTableRank" json:"cur_table_rank,omitempty"`
	UserCount        *int32 `protobuf:"varint,4,opt,name=user_count,json=userCount" json:"user_count,omitempty"`
	PlayingTable     *int32 `protobuf:"varint,5,opt,name=playing_table,json=playingTable" json:"playing_table,omitempty"`
	MatchName        []byte `protobuf:"bytes,6,opt,name=match_name,json=matchName" json:"match_name,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_S_Match_Wait_Tip) Reset()                    { *m = CMD_GR_S_Match_Wait_Tip{} }
func (m *CMD_GR_S_Match_Wait_Tip) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_Match_Wait_Tip) ProtoMessage()               {}
func (*CMD_GR_S_Match_Wait_Tip) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{82} }

func (m *CMD_GR_S_Match_Wait_Tip) GetScore() int64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CMD_GR_S_Match_Wait_Tip) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *CMD_GR_S_Match_Wait_Tip) GetCurTableRank() int32 {
	if m != nil && m.CurTableRank != nil {
		return *m.CurTableRank
	}
	return 0
}

func (m *CMD_GR_S_Match_Wait_Tip) GetUserCount() int32 {
	if m != nil && m.UserCount != nil {
		return *m.UserCount
	}
	return 0
}

func (m *CMD_GR_S_Match_Wait_Tip) GetPlayingTable() int32 {
	if m != nil && m.PlayingTable != nil {
		return *m.PlayingTable
	}
	return 0
}

func (m *CMD_GR_S_Match_Wait_Tip) GetMatchName() []byte {
	if m != nil {
		return m.MatchName
	}
	return nil
}

// 结束奖励
type TagMatchEndRank struct {
	Rank             *int32  `protobuf:"varint,1,opt,name=rank" json:"rank,omitempty"`
	UserId           *uint32 `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	NickName         []byte  `protobuf:"bytes,3,opt,name=nick_name,json=nickName" json:"nick_name,omitempty"`
	Score            *int32  `protobuf:"varint,4,opt,name=score" json:"score,omitempty"`
	AwardItemId      *int32  `protobuf:"varint,5,opt,name=award_item_id,json=awardItemId" json:"award_item_id,omitempty"`
	AwardItemNum     *int32  `protobuf:"varint,6,opt,name=award_item_num,json=awardItemNum" json:"award_item_num,omitempty"`
	AwardGlod        *int32  `protobuf:"varint,7,opt,name=award_glod,json=awardGlod" json:"award_glod,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TagMatchEndRank) Reset()                    { *m = TagMatchEndRank{} }
func (m *TagMatchEndRank) String() string            { return proto.CompactTextString(m) }
func (*TagMatchEndRank) ProtoMessage()               {}
func (*TagMatchEndRank) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{83} }

func (m *TagMatchEndRank) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *TagMatchEndRank) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *TagMatchEndRank) GetNickName() []byte {
	if m != nil {
		return m.NickName
	}
	return nil
}

func (m *TagMatchEndRank) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *TagMatchEndRank) GetAwardItemId() int32 {
	if m != nil && m.AwardItemId != nil {
		return *m.AwardItemId
	}
	return 0
}

func (m *TagMatchEndRank) GetAwardItemNum() int32 {
	if m != nil && m.AwardItemNum != nil {
		return *m.AwardItemNum
	}
	return 0
}

func (m *TagMatchEndRank) GetAwardGlod() int32 {
	if m != nil && m.AwardGlod != nil {
		return *m.AwardGlod
	}
	return 0
}

// 比赛结果
type CMD_GR_S_MatchResult struct {
	EndRank          []*TagMatchEndRank `protobuf:"bytes,1,rep,name=end_rank,json=endRank" json:"end_rank,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CMD_GR_S_MatchResult) Reset()                    { *m = CMD_GR_S_MatchResult{} }
func (m *CMD_GR_S_MatchResult) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_MatchResult) ProtoMessage()               {}
func (*CMD_GR_S_MatchResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{84} }

func (m *CMD_GR_S_MatchResult) GetEndRank() []*TagMatchEndRank {
	if m != nil {
		return m.EndRank
	}
	return nil
}

// 比赛用户信息
type TagMatchUserInfo struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	NickName         []byte  `protobuf:"bytes,2,opt,name=nick_name,json=nickName" json:"nick_name,omitempty"`
	Vip              *uint32 `protobuf:"varint,3,opt,name=vip" json:"vip,omitempty"`
	GameId           *uint32 `protobuf:"varint,4,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	FaceId           *uint32 `protobuf:"varint,5,opt,name=face_id,json=faceId" json:"face_id,omitempty"`
	Position         *int32  `protobuf:"varint,6,opt,name=position" json:"position,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TagMatchUserInfo) Reset()                    { *m = TagMatchUserInfo{} }
func (m *TagMatchUserInfo) String() string            { return proto.CompactTextString(m) }
func (*TagMatchUserInfo) ProtoMessage()               {}
func (*TagMatchUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{85} }

func (m *TagMatchUserInfo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *TagMatchUserInfo) GetNickName() []byte {
	if m != nil {
		return m.NickName
	}
	return nil
}

func (m *TagMatchUserInfo) GetVip() uint32 {
	if m != nil && m.Vip != nil {
		return *m.Vip
	}
	return 0
}

func (m *TagMatchUserInfo) GetGameId() uint32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *TagMatchUserInfo) GetFaceId() uint32 {
	if m != nil && m.FaceId != nil {
		return *m.FaceId
	}
	return 0
}

func (m *TagMatchUserInfo) GetPosition() int32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

// 比赛状态
type CMD_GR_S_MatchStatus struct {
	Status           *int32              `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Waitting         *uint32             `protobuf:"varint,2,opt,name=waitting" json:"waitting,omitempty"`
	Total            *uint32             `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	MatchTotal       *uint32             `protobuf:"varint,4,opt,name=match_total,json=matchTotal" json:"match_total,omitempty"`
	UserList         []*TagMatchUserInfo `protobuf:"bytes,5,rep,name=user_list,json=userList" json:"user_list,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CMD_GR_S_MatchStatus) Reset()                    { *m = CMD_GR_S_MatchStatus{} }
func (m *CMD_GR_S_MatchStatus) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_MatchStatus) ProtoMessage()               {}
func (*CMD_GR_S_MatchStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{86} }

func (m *CMD_GR_S_MatchStatus) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *CMD_GR_S_MatchStatus) GetWaitting() uint32 {
	if m != nil && m.Waitting != nil {
		return *m.Waitting
	}
	return 0
}

func (m *CMD_GR_S_MatchStatus) GetTotal() uint32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *CMD_GR_S_MatchStatus) GetMatchTotal() uint32 {
	if m != nil && m.MatchTotal != nil {
		return *m.MatchTotal
	}
	return 0
}

func (m *CMD_GR_S_MatchStatus) GetUserList() []*TagMatchUserInfo {
	if m != nil {
		return m.UserList
	}
	return nil
}

// 比赛排行用户
type TagMatchUserRank struct {
	Rank             *int32  `protobuf:"varint,1,opt,name=rank" json:"rank,omitempty"`
	Score            *int32  `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	UserId           *uint32 `protobuf:"varint,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ButtleNum        *uint32 `protobuf:"varint,4,opt,name=buttle_num,json=buttleNum" json:"buttle_num,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TagMatchUserRank) Reset()                    { *m = TagMatchUserRank{} }
func (m *TagMatchUserRank) String() string            { return proto.CompactTextString(m) }
func (*TagMatchUserRank) ProtoMessage()               {}
func (*TagMatchUserRank) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{87} }

func (m *TagMatchUserRank) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *TagMatchUserRank) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *TagMatchUserRank) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *TagMatchUserRank) GetButtleNum() uint32 {
	if m != nil && m.ButtleNum != nil {
		return *m.ButtleNum
	}
	return 0
}

// 比赛排行
type CMD_GR_S_MatchRank struct {
	UserRank         []*TagMatchUserRank `protobuf:"bytes,1,rep,name=user_rank,json=userRank" json:"user_rank,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CMD_GR_S_MatchRank) Reset()                    { *m = CMD_GR_S_MatchRank{} }
func (m *CMD_GR_S_MatchRank) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_MatchRank) ProtoMessage()               {}
func (*CMD_GR_S_MatchRank) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{88} }

func (m *CMD_GR_S_MatchRank) GetUserRank() []*TagMatchUserRank {
	if m != nil {
		return m.UserRank
	}
	return nil
}

// 游戏配置
type CMD_GF_GameOption struct {
	AllowLookon      *int32  `protobuf:"varint,1,opt,name=allow_lookon,json=allowLookon" json:"allow_lookon,omitempty"`
	FrameVersion     *uint32 `protobuf:"varint,2,opt,name=frame_version,json=frameVersion" json:"frame_version,omitempty"`
	ClientVersion    *uint32 `protobuf:"varint,3,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GF_GameOption) Reset()                    { *m = CMD_GF_GameOption{} }
func (m *CMD_GF_GameOption) String() string            { return proto.CompactTextString(m) }
func (*CMD_GF_GameOption) ProtoMessage()               {}
func (*CMD_GF_GameOption) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{89} }

func (m *CMD_GF_GameOption) GetAllowLookon() int32 {
	if m != nil && m.AllowLookon != nil {
		return *m.AllowLookon
	}
	return 0
}

func (m *CMD_GF_GameOption) GetFrameVersion() uint32 {
	if m != nil && m.FrameVersion != nil {
		return *m.FrameVersion
	}
	return 0
}

func (m *CMD_GF_GameOption) GetClientVersion() uint32 {
	if m != nil && m.ClientVersion != nil {
		return *m.ClientVersion
	}
	return 0
}

// 请求在线奖励
type CMD_C_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	NType            *int32  `protobuf:"varint,2,opt,name=nType" json:"nType,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_C_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME) Reset() {
	*m = CMD_C_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME{}
}
func (m *CMD_C_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME) String() string { return proto.CompactTextString(m) }
func (*CMD_C_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME) ProtoMessage()    {}
func (*CMD_C_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{90}
}

func (m *CMD_C_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_C_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME) GetNType() int32 {
	if m != nil && m.NType != nil {
		return *m.NType
	}
	return 0
}

// 请求在线奖励返回
type CMD_S_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ErrorCode        *int32  `protobuf:"varint,2,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	OprType          *int32  `protobuf:"varint,3,opt,name=opr_type,json=oprType" json:"opr_type,omitempty"`
	GiftType         *int32  `protobuf:"varint,4,opt,name=gift_type,json=giftType" json:"gift_type,omitempty"`
	GiftIndex        *int32  `protobuf:"varint,5,opt,name=gift_index,json=giftIndex" json:"gift_index,omitempty"`
	LeftSeconds      *int32  `protobuf:"varint,6,opt,name=left_seconds,json=leftSeconds" json:"left_seconds,omitempty"`
	GiftMoney        *int32  `protobuf:"varint,7,opt,name=gift_money,json=giftMoney" json:"gift_money,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_S_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME) Reset() {
	*m = CMD_S_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME{}
}
func (m *CMD_S_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME) String() string { return proto.CompactTextString(m) }
func (*CMD_S_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME) ProtoMessage()    {}
func (*CMD_S_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{91}
}

func (m *CMD_S_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_S_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME) GetErrorCode() int32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *CMD_S_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME) GetOprType() int32 {
	if m != nil && m.OprType != nil {
		return *m.OprType
	}
	return 0
}

func (m *CMD_S_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME) GetGiftType() int32 {
	if m != nil && m.GiftType != nil {
		return *m.GiftType
	}
	return 0
}

func (m *CMD_S_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME) GetGiftIndex() int32 {
	if m != nil && m.GiftIndex != nil {
		return *m.GiftIndex
	}
	return 0
}

func (m *CMD_S_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME) GetLeftSeconds() int32 {
	if m != nil && m.LeftSeconds != nil {
		return *m.LeftSeconds
	}
	return 0
}

func (m *CMD_S_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME) GetGiftMoney() int32 {
	if m != nil && m.GiftMoney != nil {
		return *m.GiftMoney
	}
	return 0
}

// 旁观配置
type CMD_GF_LookonConfig struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	AllowLookon      *int32  `protobuf:"varint,2,opt,name=allow_lookon,json=allowLookon" json:"allow_lookon,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GF_LookonConfig) Reset()                    { *m = CMD_GF_LookonConfig{} }
func (m *CMD_GF_LookonConfig) String() string            { return proto.CompactTextString(m) }
func (*CMD_GF_LookonConfig) ProtoMessage()               {}
func (*CMD_GF_LookonConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{92} }

func (m *CMD_GF_LookonConfig) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GF_LookonConfig) GetAllowLookon() int32 {
	if m != nil && m.AllowLookon != nil {
		return *m.AllowLookon
	}
	return 0
}

// 旁观状态
type CMD_GF_LookonStatus struct {
	AllowLookon      *int32 `protobuf:"varint,1,opt,name=allow_lookon,json=allowLookon" json:"allow_lookon,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GF_LookonStatus) Reset()                    { *m = CMD_GF_LookonStatus{} }
func (m *CMD_GF_LookonStatus) String() string            { return proto.CompactTextString(m) }
func (*CMD_GF_LookonStatus) ProtoMessage()               {}
func (*CMD_GF_LookonStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{93} }

func (m *CMD_GF_LookonStatus) GetAllowLookon() int32 {
	if m != nil && m.AllowLookon != nil {
		return *m.AllowLookon
	}
	return 0
}

// 游戏环境
type CMD_GF_GameStatus struct {
	GameStatus       *int32 `protobuf:"varint,1,opt,name=game_status,json=gameStatus" json:"game_status,omitempty"`
	AllowLookon      *int32 `protobuf:"varint,2,opt,name=allow_lookon,json=allowLookon" json:"allow_lookon,omitempty"`
	StatusTime       *int32 `protobuf:"varint,3,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GF_GameStatus) Reset()                    { *m = CMD_GF_GameStatus{} }
func (m *CMD_GF_GameStatus) String() string            { return proto.CompactTextString(m) }
func (*CMD_GF_GameStatus) ProtoMessage()               {}
func (*CMD_GF_GameStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{94} }

func (m *CMD_GF_GameStatus) GetGameStatus() int32 {
	if m != nil && m.GameStatus != nil {
		return *m.GameStatus
	}
	return 0
}

func (m *CMD_GF_GameStatus) GetAllowLookon() int32 {
	if m != nil && m.AllowLookon != nil {
		return *m.AllowLookon
	}
	return 0
}

func (m *CMD_GF_GameStatus) GetStatusTime() int32 {
	if m != nil && m.StatusTime != nil {
		return *m.StatusTime
	}
	return 0
}

// 用户聊天
type CMD_GF_C_UserChat struct {
	ChatColor        *uint32 `protobuf:"varint,1,opt,name=chat_color,json=chatColor" json:"chat_color,omitempty"`
	TargetUserId     *uint32 `protobuf:"varint,2,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	Chat             []byte  `protobuf:"bytes,3,opt,name=chat" json:"chat,omitempty"`
	ChatType         *int32  `protobuf:"varint,4,opt,name=chat_type,json=chatType" json:"chat_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GF_C_UserChat) Reset()                    { *m = CMD_GF_C_UserChat{} }
func (m *CMD_GF_C_UserChat) String() string            { return proto.CompactTextString(m) }
func (*CMD_GF_C_UserChat) ProtoMessage()               {}
func (*CMD_GF_C_UserChat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{95} }

func (m *CMD_GF_C_UserChat) GetChatColor() uint32 {
	if m != nil && m.ChatColor != nil {
		return *m.ChatColor
	}
	return 0
}

func (m *CMD_GF_C_UserChat) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

func (m *CMD_GF_C_UserChat) GetChat() []byte {
	if m != nil {
		return m.Chat
	}
	return nil
}

func (m *CMD_GF_C_UserChat) GetChatType() int32 {
	if m != nil && m.ChatType != nil {
		return *m.ChatType
	}
	return 0
}

// 用户聊天
type CMD_GF_S_UserChat struct {
	ChatColor        *uint32 `protobuf:"varint,1,opt,name=chat_color,json=chatColor" json:"chat_color,omitempty"`
	SendUserId       *uint32 `protobuf:"varint,2,opt,name=send_user_id,json=sendUserId" json:"send_user_id,omitempty"`
	TargetUserId     *uint32 `protobuf:"varint,3,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	Chat             []byte  `protobuf:"bytes,4,opt,name=chat" json:"chat,omitempty"`
	CostValue        *int64  `protobuf:"varint,5,opt,name=cost_value,json=costValue" json:"cost_value,omitempty"`
	CostType         *int32  `protobuf:"varint,6,opt,name=cost_type,json=costType" json:"cost_type,omitempty"`
	IsRobot          *bool   `protobuf:"varint,7,opt,name=is_robot,json=isRobot" json:"is_robot,omitempty"`
	ChatType         *int32  `protobuf:"varint,8,opt,name=chat_type,json=chatType" json:"chat_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GF_S_UserChat) Reset()                    { *m = CMD_GF_S_UserChat{} }
func (m *CMD_GF_S_UserChat) String() string            { return proto.CompactTextString(m) }
func (*CMD_GF_S_UserChat) ProtoMessage()               {}
func (*CMD_GF_S_UserChat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{96} }

func (m *CMD_GF_S_UserChat) GetChatColor() uint32 {
	if m != nil && m.ChatColor != nil {
		return *m.ChatColor
	}
	return 0
}

func (m *CMD_GF_S_UserChat) GetSendUserId() uint32 {
	if m != nil && m.SendUserId != nil {
		return *m.SendUserId
	}
	return 0
}

func (m *CMD_GF_S_UserChat) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

func (m *CMD_GF_S_UserChat) GetChat() []byte {
	if m != nil {
		return m.Chat
	}
	return nil
}

func (m *CMD_GF_S_UserChat) GetCostValue() int64 {
	if m != nil && m.CostValue != nil {
		return *m.CostValue
	}
	return 0
}

func (m *CMD_GF_S_UserChat) GetCostType() int32 {
	if m != nil && m.CostType != nil {
		return *m.CostType
	}
	return 0
}

func (m *CMD_GF_S_UserChat) GetIsRobot() bool {
	if m != nil && m.IsRobot != nil {
		return *m.IsRobot
	}
	return false
}

func (m *CMD_GF_S_UserChat) GetChatType() int32 {
	if m != nil && m.ChatType != nil {
		return *m.ChatType
	}
	return 0
}

// 用户房间信息
type CMD_GF_S_ServerUserInfo struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ServerId         *int32  `protobuf:"varint,2,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	BigAwardPool     *int64  `protobuf:"varint,3,opt,name=big_award_pool,json=bigAwardPool" json:"big_award_pool,omitempty"`
	SmallAwardPool   *int64  `protobuf:"varint,4,opt,name=small_award_pool,json=smallAwardPool" json:"small_award_pool,omitempty"`
	RemainTableGold  *int64  `protobuf:"varint,5,opt,name=remain_table_gold,json=remainTableGold" json:"remain_table_gold,omitempty"`
	SpData_0         *int64  `protobuf:"varint,6,opt,name=sp_data_0,json=spData0" json:"sp_data_0,omitempty"`
	SpData_1         *int64  `protobuf:"varint,7,opt,name=sp_data_1,json=spData1" json:"sp_data_1,omitempty"`
	SpData_2         *int64  `protobuf:"varint,8,opt,name=sp_data_2,json=spData2" json:"sp_data_2,omitempty"`
	SpData_3         *int64  `protobuf:"varint,9,opt,name=sp_data_3,json=spData3" json:"sp_data_3,omitempty"`
	SpData_4         *int64  `protobuf:"varint,10,opt,name=sp_data_4,json=spData4" json:"sp_data_4,omitempty"`
	SpDataArr2       []byte  `protobuf:"bytes,11,opt,name=sp_data_arr2,json=spDataArr2" json:"sp_data_arr2,omitempty"`
	SpDataArr        []byte  `protobuf:"bytes,12,opt,name=sp_data_arr,json=spDataArr" json:"sp_data_arr,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GF_S_ServerUserInfo) Reset()                    { *m = CMD_GF_S_ServerUserInfo{} }
func (m *CMD_GF_S_ServerUserInfo) String() string            { return proto.CompactTextString(m) }
func (*CMD_GF_S_ServerUserInfo) ProtoMessage()               {}
func (*CMD_GF_S_ServerUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{97} }

func (m *CMD_GF_S_ServerUserInfo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GF_S_ServerUserInfo) GetServerId() int32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *CMD_GF_S_ServerUserInfo) GetBigAwardPool() int64 {
	if m != nil && m.BigAwardPool != nil {
		return *m.BigAwardPool
	}
	return 0
}

func (m *CMD_GF_S_ServerUserInfo) GetSmallAwardPool() int64 {
	if m != nil && m.SmallAwardPool != nil {
		return *m.SmallAwardPool
	}
	return 0
}

func (m *CMD_GF_S_ServerUserInfo) GetRemainTableGold() int64 {
	if m != nil && m.RemainTableGold != nil {
		return *m.RemainTableGold
	}
	return 0
}

func (m *CMD_GF_S_ServerUserInfo) GetSpData_0() int64 {
	if m != nil && m.SpData_0 != nil {
		return *m.SpData_0
	}
	return 0
}

func (m *CMD_GF_S_ServerUserInfo) GetSpData_1() int64 {
	if m != nil && m.SpData_1 != nil {
		return *m.SpData_1
	}
	return 0
}

func (m *CMD_GF_S_ServerUserInfo) GetSpData_2() int64 {
	if m != nil && m.SpData_2 != nil {
		return *m.SpData_2
	}
	return 0
}

func (m *CMD_GF_S_ServerUserInfo) GetSpData_3() int64 {
	if m != nil && m.SpData_3 != nil {
		return *m.SpData_3
	}
	return 0
}

func (m *CMD_GF_S_ServerUserInfo) GetSpData_4() int64 {
	if m != nil && m.SpData_4 != nil {
		return *m.SpData_4
	}
	return 0
}

func (m *CMD_GF_S_ServerUserInfo) GetSpDataArr2() []byte {
	if m != nil {
		return m.SpDataArr2
	}
	return nil
}

func (m *CMD_GF_S_ServerUserInfo) GetSpDataArr() []byte {
	if m != nil {
		return m.SpDataArr
	}
	return nil
}

// 用户技能信息
type CMD_CF_S_UserSkill struct {
	UserSkills       []*TagUserSkill `protobuf:"bytes,1,rep,name=user_skills,json=userSkills" json:"user_skills,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CMD_CF_S_UserSkill) Reset()                    { *m = CMD_CF_S_UserSkill{} }
func (m *CMD_CF_S_UserSkill) String() string            { return proto.CompactTextString(m) }
func (*CMD_CF_S_UserSkill) ProtoMessage()               {}
func (*CMD_CF_S_UserSkill) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{98} }

func (m *CMD_CF_S_UserSkill) GetUserSkills() []*TagUserSkill {
	if m != nil {
		return m.UserSkills
	}
	return nil
}

// 用户表情
type CMD_GF_C_UserExpression struct {
	ItemIndex        *int32  `protobuf:"varint,1,opt,name=item_index,json=itemIndex" json:"item_index,omitempty"`
	TargetUserId     *uint32 `protobuf:"varint,2,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GF_C_UserExpression) Reset()                    { *m = CMD_GF_C_UserExpression{} }
func (m *CMD_GF_C_UserExpression) String() string            { return proto.CompactTextString(m) }
func (*CMD_GF_C_UserExpression) ProtoMessage()               {}
func (*CMD_GF_C_UserExpression) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{99} }

func (m *CMD_GF_C_UserExpression) GetItemIndex() int32 {
	if m != nil && m.ItemIndex != nil {
		return *m.ItemIndex
	}
	return 0
}

func (m *CMD_GF_C_UserExpression) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

// 用户表情
type CMD_GF_S_UserExpression struct {
	ItemIndex        *int32  `protobuf:"varint,1,opt,name=item_index,json=itemIndex" json:"item_index,omitempty"`
	SendUserId       *uint32 `protobuf:"varint,2,opt,name=send_user_id,json=sendUserId" json:"send_user_id,omitempty"`
	TargetUserId     *uint32 `protobuf:"varint,3,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	CostValue        *int64  `protobuf:"varint,4,opt,name=cost_value,json=costValue" json:"cost_value,omitempty"`
	CostType         *int32  `protobuf:"varint,5,opt,name=cost_type,json=costType" json:"cost_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GF_S_UserExpression) Reset()                    { *m = CMD_GF_S_UserExpression{} }
func (m *CMD_GF_S_UserExpression) String() string            { return proto.CompactTextString(m) }
func (*CMD_GF_S_UserExpression) ProtoMessage()               {}
func (*CMD_GF_S_UserExpression) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{100} }

func (m *CMD_GF_S_UserExpression) GetItemIndex() int32 {
	if m != nil && m.ItemIndex != nil {
		return *m.ItemIndex
	}
	return 0
}

func (m *CMD_GF_S_UserExpression) GetSendUserId() uint32 {
	if m != nil && m.SendUserId != nil {
		return *m.SendUserId
	}
	return 0
}

func (m *CMD_GF_S_UserExpression) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

func (m *CMD_GF_S_UserExpression) GetCostValue() int64 {
	if m != nil && m.CostValue != nil {
		return *m.CostValue
	}
	return 0
}

func (m *CMD_GF_S_UserExpression) GetCostType() int32 {
	if m != nil && m.CostType != nil {
		return *m.CostType
	}
	return 0
}

// 系统消息
type CMD_CR_SystemMessage struct {
	Type             *int32  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Level            *int32  `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	DelayTime        *uint32 `protobuf:"varint,3,opt,name=delay_time,json=delayTime" json:"delay_time,omitempty"`
	Text             []byte  `protobuf:"bytes,4,opt,name=text" json:"text,omitempty"`
	Ditch            *uint32 `protobuf:"varint,5,opt,name=ditch" json:"ditch,omitempty"`
	ClientTextId     *uint32 `protobuf:"varint,6,opt,name=client_text_id,json=clientTextId" json:"client_text_id,omitempty"`
	ParamList        []byte  `protobuf:"bytes,7,opt,name=param_list,json=paramList" json:"param_list,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_CR_SystemMessage) Reset()                    { *m = CMD_CR_SystemMessage{} }
func (m *CMD_CR_SystemMessage) String() string            { return proto.CompactTextString(m) }
func (*CMD_CR_SystemMessage) ProtoMessage()               {}
func (*CMD_CR_SystemMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{101} }

func (m *CMD_CR_SystemMessage) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CMD_CR_SystemMessage) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CMD_CR_SystemMessage) GetDelayTime() uint32 {
	if m != nil && m.DelayTime != nil {
		return *m.DelayTime
	}
	return 0
}

func (m *CMD_CR_SystemMessage) GetText() []byte {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *CMD_CR_SystemMessage) GetDitch() uint32 {
	if m != nil && m.Ditch != nil {
		return *m.Ditch
	}
	return 0
}

func (m *CMD_CR_SystemMessage) GetClientTextId() uint32 {
	if m != nil && m.ClientTextId != nil {
		return *m.ClientTextId
	}
	return 0
}

func (m *CMD_CR_SystemMessage) GetParamList() []byte {
	if m != nil {
		return m.ParamList
	}
	return nil
}

// 用户信息
type TagUserInfoHead struct {
	// 用户属性
	GameId  *uint32 `protobuf:"varint,1,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	UserId  *uint32 `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	GroupId *uint32 `protobuf:"varint,3,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	// 头像信息
	FaceId   *int32  `protobuf:"varint,4,opt,name=face_id,json=faceId" json:"face_id,omitempty"`
	CustomId *uint32 `protobuf:"varint,5,opt,name=custom_id,json=customId" json:"custom_id,omitempty"`
	// 用户属性
	Gender      *int32 `protobuf:"varint,6,opt,name=gender" json:"gender,omitempty"`
	MemberOrder *int32 `protobuf:"varint,7,opt,name=member_order,json=memberOrder" json:"member_order,omitempty"`
	MasterOrder *int32 `protobuf:"varint,8,opt,name=master_order,json=masterOrder" json:"master_order,omitempty"`
	// 用户状态
	TableId    *int32 `protobuf:"varint,9,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	ChairId    *int32 `protobuf:"varint,10,opt,name=chair_id,json=chairId" json:"chair_id,omitempty"`
	UserStatus *int32 `protobuf:"varint,11,opt,name=user_status,json=userStatus" json:"user_status,omitempty"`
	// 积分信息
	Score  *int64 `protobuf:"varint,12,opt,name=score" json:"score,omitempty"`
	Grade  *int64 `protobuf:"varint,13,opt,name=grade" json:"grade,omitempty"`
	Insure *int64 `protobuf:"varint,14,opt,name=insure" json:"insure,omitempty"`
	// 游戏信息
	WinCount         *uint32 `protobuf:"varint,15,opt,name=win_count,json=winCount" json:"win_count,omitempty"`
	LostCount        *uint32 `protobuf:"varint,16,opt,name=lost_count,json=lostCount" json:"lost_count,omitempty"`
	DrawCount        *uint32 `protobuf:"varint,17,opt,name=draw_count,json=drawCount" json:"draw_count,omitempty"`
	FleeCount        *uint32 `protobuf:"varint,18,opt,name=flee_count,json=fleeCount" json:"flee_count,omitempty"`
	UserMedal        *uint32 `protobuf:"varint,19,opt,name=user_medal,json=userMedal" json:"user_medal,omitempty"`
	Exp              *int64  `protobuf:"varint,20,opt,name=exp" json:"exp,omitempty"`
	CurLevelExp      *int64  `protobuf:"varint,21,opt,name=cur_level_exp,json=curLevelExp" json:"cur_level_exp,omitempty"`
	NextLevelExp     *int64  `protobuf:"varint,22,opt,name=next_level_exp,json=nextLevelExp" json:"next_level_exp,omitempty"`
	Level            *int32  `protobuf:"varint,23,opt,name=level" json:"level,omitempty"`
	LoveLiness       *int32  `protobuf:"varint,24,opt,name=love_liness,json=loveLiness" json:"love_liness,omitempty"`
	VipLev           *int32  `protobuf:"varint,25,opt,name=vip_lev,json=vipLev" json:"vip_lev,omitempty"`
	SpeakerTimes     *int32  `protobuf:"varint,26,opt,name=speaker_times,json=speakerTimes" json:"speaker_times,omitempty"`
	NickName         []byte  `protobuf:"bytes,27,opt,name=nick_name,json=nickName" json:"nick_name,omitempty"`
	GroupName        []byte  `protobuf:"bytes,28,opt,name=group_name,json=groupName" json:"group_name,omitempty"`
	UnderWrite       []byte  `protobuf:"bytes,29,opt,name=under_write,json=underWrite" json:"under_write,omitempty"`
	NewGuide         *int32  `protobuf:"varint,30,opt,name=new_guide,json=newGuide" json:"new_guide,omitempty"`
	LoginType        *int32  `protobuf:"varint,31,opt,name=login_type,json=loginType" json:"login_type,omitempty"`
	FaceUrl          []byte  `protobuf:"bytes,32,opt,name=face_url,json=faceUrl" json:"face_url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TagUserInfoHead) Reset()                    { *m = TagUserInfoHead{} }
func (m *TagUserInfoHead) String() string            { return proto.CompactTextString(m) }
func (*TagUserInfoHead) ProtoMessage()               {}
func (*TagUserInfoHead) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{102} }

func (m *TagUserInfoHead) GetGameId() uint32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *TagUserInfoHead) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *TagUserInfoHead) GetGroupId() uint32 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *TagUserInfoHead) GetFaceId() int32 {
	if m != nil && m.FaceId != nil {
		return *m.FaceId
	}
	return 0
}

func (m *TagUserInfoHead) GetCustomId() uint32 {
	if m != nil && m.CustomId != nil {
		return *m.CustomId
	}
	return 0
}

func (m *TagUserInfoHead) GetGender() int32 {
	if m != nil && m.Gender != nil {
		return *m.Gender
	}
	return 0
}

func (m *TagUserInfoHead) GetMemberOrder() int32 {
	if m != nil && m.MemberOrder != nil {
		return *m.MemberOrder
	}
	return 0
}

func (m *TagUserInfoHead) GetMasterOrder() int32 {
	if m != nil && m.MasterOrder != nil {
		return *m.MasterOrder
	}
	return 0
}

func (m *TagUserInfoHead) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *TagUserInfoHead) GetChairId() int32 {
	if m != nil && m.ChairId != nil {
		return *m.ChairId
	}
	return 0
}

func (m *TagUserInfoHead) GetUserStatus() int32 {
	if m != nil && m.UserStatus != nil {
		return *m.UserStatus
	}
	return 0
}

func (m *TagUserInfoHead) GetScore() int64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *TagUserInfoHead) GetGrade() int64 {
	if m != nil && m.Grade != nil {
		return *m.Grade
	}
	return 0
}

func (m *TagUserInfoHead) GetInsure() int64 {
	if m != nil && m.Insure != nil {
		return *m.Insure
	}
	return 0
}

func (m *TagUserInfoHead) GetWinCount() uint32 {
	if m != nil && m.WinCount != nil {
		return *m.WinCount
	}
	return 0
}

func (m *TagUserInfoHead) GetLostCount() uint32 {
	if m != nil && m.LostCount != nil {
		return *m.LostCount
	}
	return 0
}

func (m *TagUserInfoHead) GetDrawCount() uint32 {
	if m != nil && m.DrawCount != nil {
		return *m.DrawCount
	}
	return 0
}

func (m *TagUserInfoHead) GetFleeCount() uint32 {
	if m != nil && m.FleeCount != nil {
		return *m.FleeCount
	}
	return 0
}

func (m *TagUserInfoHead) GetUserMedal() uint32 {
	if m != nil && m.UserMedal != nil {
		return *m.UserMedal
	}
	return 0
}

func (m *TagUserInfoHead) GetExp() int64 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *TagUserInfoHead) GetCurLevelExp() int64 {
	if m != nil && m.CurLevelExp != nil {
		return *m.CurLevelExp
	}
	return 0
}

func (m *TagUserInfoHead) GetNextLevelExp() int64 {
	if m != nil && m.NextLevelExp != nil {
		return *m.NextLevelExp
	}
	return 0
}

func (m *TagUserInfoHead) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *TagUserInfoHead) GetLoveLiness() int32 {
	if m != nil && m.LoveLiness != nil {
		return *m.LoveLiness
	}
	return 0
}

func (m *TagUserInfoHead) GetVipLev() int32 {
	if m != nil && m.VipLev != nil {
		return *m.VipLev
	}
	return 0
}

func (m *TagUserInfoHead) GetSpeakerTimes() int32 {
	if m != nil && m.SpeakerTimes != nil {
		return *m.SpeakerTimes
	}
	return 0
}

func (m *TagUserInfoHead) GetNickName() []byte {
	if m != nil {
		return m.NickName
	}
	return nil
}

func (m *TagUserInfoHead) GetGroupName() []byte {
	if m != nil {
		return m.GroupName
	}
	return nil
}

func (m *TagUserInfoHead) GetUnderWrite() []byte {
	if m != nil {
		return m.UnderWrite
	}
	return nil
}

func (m *TagUserInfoHead) GetNewGuide() int32 {
	if m != nil && m.NewGuide != nil {
		return *m.NewGuide
	}
	return 0
}

func (m *TagUserInfoHead) GetLoginType() int32 {
	if m != nil && m.LoginType != nil {
		return *m.LoginType
	}
	return 0
}

func (m *TagUserInfoHead) GetFaceUrl() []byte {
	if m != nil {
		return m.FaceUrl
	}
	return nil
}

// 用户进入
type CMD_GR_UserEnter struct {
	InfoHeadList     []*TagUserInfoHead `protobuf:"bytes,1,rep,name=info_head_list,json=infoHeadList" json:"info_head_list,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CMD_GR_UserEnter) Reset()                    { *m = CMD_GR_UserEnter{} }
func (m *CMD_GR_UserEnter) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_UserEnter) ProtoMessage()               {}
func (*CMD_GR_UserEnter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{103} }

func (m *CMD_GR_UserEnter) GetInfoHeadList() []*TagUserInfoHead {
	if m != nil {
		return m.InfoHeadList
	}
	return nil
}

// 房间设置
type CMD_GR_OptionServer struct {
	OptionFlags      *int32 `protobuf:"varint,1,opt,name=option_flags,json=optionFlags" json:"option_flags,omitempty"`
	OptionValue      *int32 `protobuf:"varint,2,opt,name=option_value,json=optionValue" json:"option_value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_OptionServer) Reset()                    { *m = CMD_GR_OptionServer{} }
func (m *CMD_GR_OptionServer) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_OptionServer) ProtoMessage()               {}
func (*CMD_GR_OptionServer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{104} }

func (m *CMD_GR_OptionServer) GetOptionFlags() int32 {
	if m != nil && m.OptionFlags != nil {
		return *m.OptionFlags
	}
	return 0
}

func (m *CMD_GR_OptionServer) GetOptionValue() int32 {
	if m != nil && m.OptionValue != nil {
		return *m.OptionValue
	}
	return 0
}

// 限制聊天
type CMD_GR_LimitUserChat struct {
	TargetUserId     *uint32 `protobuf:"varint,1,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	LimitFlags       *int32  `protobuf:"varint,2,opt,name=limit_flags,json=limitFlags" json:"limit_flags,omitempty"`
	LimitValue       *int32  `protobuf:"varint,3,opt,name=limit_value,json=limitValue" json:"limit_value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_LimitUserChat) Reset()                    { *m = CMD_GR_LimitUserChat{} }
func (m *CMD_GR_LimitUserChat) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_LimitUserChat) ProtoMessage()               {}
func (*CMD_GR_LimitUserChat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{105} }

func (m *CMD_GR_LimitUserChat) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

func (m *CMD_GR_LimitUserChat) GetLimitFlags() int32 {
	if m != nil && m.LimitFlags != nil {
		return *m.LimitFlags
	}
	return 0
}

func (m *CMD_GR_LimitUserChat) GetLimitValue() int32 {
	if m != nil && m.LimitValue != nil {
		return *m.LimitValue
	}
	return 0
}

// 刷新新的一天数据
type CMD_MB_S2C_Refresh_One_Day_For_Game struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_MB_S2C_Refresh_One_Day_For_Game) Reset()         { *m = CMD_MB_S2C_Refresh_One_Day_For_Game{} }
func (m *CMD_MB_S2C_Refresh_One_Day_For_Game) String() string { return proto.CompactTextString(m) }
func (*CMD_MB_S2C_Refresh_One_Day_For_Game) ProtoMessage()    {}
func (*CMD_MB_S2C_Refresh_One_Day_For_Game) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{106}
}

// 绑定返回
type CMD_GR_Bind_Result struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ResultCode       *int32  `protobuf:"varint,2,opt,name=result_code,json=resultCode" json:"result_code,omitempty"`
	Accounts         []byte  `protobuf:"bytes,3,opt,name=accounts" json:"accounts,omitempty"`
	NickName         []byte  `protobuf:"bytes,4,opt,name=nick_name,json=nickName" json:"nick_name,omitempty"`
	Describe         []byte  `protobuf:"bytes,5,opt,name=describe" json:"describe,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_Bind_Result) Reset()                    { *m = CMD_GR_Bind_Result{} }
func (m *CMD_GR_Bind_Result) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_Bind_Result) ProtoMessage()               {}
func (*CMD_GR_Bind_Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{107} }

func (m *CMD_GR_Bind_Result) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_Bind_Result) GetResultCode() int32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

func (m *CMD_GR_Bind_Result) GetAccounts() []byte {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *CMD_GR_Bind_Result) GetNickName() []byte {
	if m != nil {
		return m.NickName
	}
	return nil
}

func (m *CMD_GR_Bind_Result) GetDescribe() []byte {
	if m != nil {
		return m.Describe
	}
	return nil
}

// 绑定返回
type CMD_GR_Refresh_VIP_Back struct {
	CurVipLev        *int32 `protobuf:"varint,1,opt,name=cur_vip_lev,json=curVipLev" json:"cur_vip_lev,omitempty"`
	Messsage         []byte `protobuf:"bytes,2,opt,name=messsage" json:"messsage,omitempty"`
	PayTotal         *int32 `protobuf:"varint,3,opt,name=pay_total,json=payTotal" json:"pay_total,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_Refresh_VIP_Back) Reset()                    { *m = CMD_GR_Refresh_VIP_Back{} }
func (m *CMD_GR_Refresh_VIP_Back) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_Refresh_VIP_Back) ProtoMessage()               {}
func (*CMD_GR_Refresh_VIP_Back) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{108} }

func (m *CMD_GR_Refresh_VIP_Back) GetCurVipLev() int32 {
	if m != nil && m.CurVipLev != nil {
		return *m.CurVipLev
	}
	return 0
}

func (m *CMD_GR_Refresh_VIP_Back) GetMesssage() []byte {
	if m != nil {
		return m.Messsage
	}
	return nil
}

func (m *CMD_GR_Refresh_VIP_Back) GetPayTotal() int32 {
	if m != nil && m.PayTotal != nil {
		return *m.PayTotal
	}
	return 0
}

// 心跳
type CMD_C_GAME_HEART_C2G struct {
	TargetUserId     *uint32 `protobuf:"varint,1,opt,name=target_user_id,json=targetUserId" json:"target_user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_C_GAME_HEART_C2G) Reset()                    { *m = CMD_C_GAME_HEART_C2G{} }
func (m *CMD_C_GAME_HEART_C2G) String() string            { return proto.CompactTextString(m) }
func (*CMD_C_GAME_HEART_C2G) ProtoMessage()               {}
func (*CMD_C_GAME_HEART_C2G) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{109} }

func (m *CMD_C_GAME_HEART_C2G) GetTargetUserId() uint32 {
	if m != nil && m.TargetUserId != nil {
		return *m.TargetUserId
	}
	return 0
}

// 每个玩家购买的礼包
type TagGameGiftPackageInfo_GS struct {
	GiftId           *uint32 `protobuf:"varint,1,opt,name=gift_id,json=giftId" json:"gift_id,omitempty"`
	InactiveTime     *uint64 `protobuf:"varint,2,opt,name=inactive_time,json=inactiveTime" json:"inactive_time,omitempty"`
	LastuseTime      *uint64 `protobuf:"varint,3,opt,name=lastuse_time,json=lastuseTime" json:"lastuse_time,omitempty"`
	BuyTime          *uint64 `protobuf:"varint,4,opt,name=buy_time,json=buyTime" json:"buy_time,omitempty"`
	UseCount         *uint32 `protobuf:"varint,5,opt,name=use_count,json=useCount" json:"use_count,omitempty"`
	Type             *uint32 `protobuf:"varint,6,opt,name=type" json:"type,omitempty"`
	Functionn        []byte  `protobuf:"bytes,7,opt,name=functionn" json:"functionn,omitempty"`
	LittleTime       *uint64 `protobuf:"varint,8,opt,name=little_time,json=littleTime" json:"little_time,omitempty"`
	IsSeaGod         *bool   `protobuf:"varint,9,opt,name=is_sea_god,json=isSeaGod" json:"is_sea_god,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TagGameGiftPackageInfo_GS) Reset()                    { *m = TagGameGiftPackageInfo_GS{} }
func (m *TagGameGiftPackageInfo_GS) String() string            { return proto.CompactTextString(m) }
func (*TagGameGiftPackageInfo_GS) ProtoMessage()               {}
func (*TagGameGiftPackageInfo_GS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{110} }

func (m *TagGameGiftPackageInfo_GS) GetGiftId() uint32 {
	if m != nil && m.GiftId != nil {
		return *m.GiftId
	}
	return 0
}

func (m *TagGameGiftPackageInfo_GS) GetInactiveTime() uint64 {
	if m != nil && m.InactiveTime != nil {
		return *m.InactiveTime
	}
	return 0
}

func (m *TagGameGiftPackageInfo_GS) GetLastuseTime() uint64 {
	if m != nil && m.LastuseTime != nil {
		return *m.LastuseTime
	}
	return 0
}

func (m *TagGameGiftPackageInfo_GS) GetBuyTime() uint64 {
	if m != nil && m.BuyTime != nil {
		return *m.BuyTime
	}
	return 0
}

func (m *TagGameGiftPackageInfo_GS) GetUseCount() uint32 {
	if m != nil && m.UseCount != nil {
		return *m.UseCount
	}
	return 0
}

func (m *TagGameGiftPackageInfo_GS) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *TagGameGiftPackageInfo_GS) GetFunctionn() []byte {
	if m != nil {
		return m.Functionn
	}
	return nil
}

func (m *TagGameGiftPackageInfo_GS) GetLittleTime() uint64 {
	if m != nil && m.LittleTime != nil {
		return *m.LittleTime
	}
	return 0
}

func (m *TagGameGiftPackageInfo_GS) GetIsSeaGod() bool {
	if m != nil && m.IsSeaGod != nil {
		return *m.IsSeaGod
	}
	return false
}

// 请求更新我的礼包
type CMD_C_MY_GIFT_PACK_GS struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_C_MY_GIFT_PACK_GS) Reset()                    { *m = CMD_C_MY_GIFT_PACK_GS{} }
func (m *CMD_C_MY_GIFT_PACK_GS) String() string            { return proto.CompactTextString(m) }
func (*CMD_C_MY_GIFT_PACK_GS) ProtoMessage()               {}
func (*CMD_C_MY_GIFT_PACK_GS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{111} }

// 请求更新我的礼包返回
type CMD_S_MY_GIFT_PACK_BACK_GS struct {
	GameGiftPackages []*TagGameGiftPackageInfo_GS `protobuf:"bytes,1,rep,name=game_gift_packages,json=gameGiftPackages" json:"game_gift_packages,omitempty"`
	OpType           *int32                       `protobuf:"varint,2,opt,name=op_type,json=opType" json:"op_type,omitempty"`
	IsUpdate         *uint32                      `protobuf:"varint,3,opt,name=is_update,json=isUpdate" json:"is_update,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CMD_S_MY_GIFT_PACK_BACK_GS) Reset()                    { *m = CMD_S_MY_GIFT_PACK_BACK_GS{} }
func (m *CMD_S_MY_GIFT_PACK_BACK_GS) String() string            { return proto.CompactTextString(m) }
func (*CMD_S_MY_GIFT_PACK_BACK_GS) ProtoMessage()               {}
func (*CMD_S_MY_GIFT_PACK_BACK_GS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{112} }

func (m *CMD_S_MY_GIFT_PACK_BACK_GS) GetGameGiftPackages() []*TagGameGiftPackageInfo_GS {
	if m != nil {
		return m.GameGiftPackages
	}
	return nil
}

func (m *CMD_S_MY_GIFT_PACK_BACK_GS) GetOpType() int32 {
	if m != nil && m.OpType != nil {
		return *m.OpType
	}
	return 0
}

func (m *CMD_S_MY_GIFT_PACK_BACK_GS) GetIsUpdate() uint32 {
	if m != nil && m.IsUpdate != nil {
		return *m.IsUpdate
	}
	return 0
}

// 请求获取明日礼包
type CMD_C_TOMORROW_PACKAGE struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Version          *uint32 `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_C_TOMORROW_PACKAGE) Reset()                    { *m = CMD_C_TOMORROW_PACKAGE{} }
func (m *CMD_C_TOMORROW_PACKAGE) String() string            { return proto.CompactTextString(m) }
func (*CMD_C_TOMORROW_PACKAGE) ProtoMessage()               {}
func (*CMD_C_TOMORROW_PACKAGE) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{113} }

func (m *CMD_C_TOMORROW_PACKAGE) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_C_TOMORROW_PACKAGE) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

type CMD_S_TOMORROW_PACKAGE struct {
	ResultCode       *int32 `protobuf:"varint,1,opt,name=result_code,json=resultCode" json:"result_code,omitempty"`
	Describe         []byte `protobuf:"bytes,2,opt,name=describe" json:"describe,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_S_TOMORROW_PACKAGE) Reset()                    { *m = CMD_S_TOMORROW_PACKAGE{} }
func (m *CMD_S_TOMORROW_PACKAGE) String() string            { return proto.CompactTextString(m) }
func (*CMD_S_TOMORROW_PACKAGE) ProtoMessage()               {}
func (*CMD_S_TOMORROW_PACKAGE) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{114} }

func (m *CMD_S_TOMORROW_PACKAGE) GetResultCode() int32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

func (m *CMD_S_TOMORROW_PACKAGE) GetDescribe() []byte {
	if m != nil {
		return m.Describe
	}
	return nil
}

// 游戏技能
type TagGameSkill struct {
	SkillId          *uint32 `protobuf:"varint,1,opt,name=skill_id,json=skillId" json:"skill_id,omitempty"`
	Name             []byte  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	CoolDown         *int32  `protobuf:"varint,3,opt,name=cool_down,json=coolDown" json:"cool_down,omitempty"`
	Duration         *int32  `protobuf:"varint,4,opt,name=duration" json:"duration,omitempty"`
	ConsumeType      *int32  `protobuf:"varint,5,opt,name=consume_type,json=consumeType" json:"consume_type,omitempty"`
	ConsumeData      *int32  `protobuf:"varint,6,opt,name=consume_data,json=consumeData" json:"consume_data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TagGameSkill) Reset()                    { *m = TagGameSkill{} }
func (m *TagGameSkill) String() string            { return proto.CompactTextString(m) }
func (*TagGameSkill) ProtoMessage()               {}
func (*TagGameSkill) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{115} }

func (m *TagGameSkill) GetSkillId() uint32 {
	if m != nil && m.SkillId != nil {
		return *m.SkillId
	}
	return 0
}

func (m *TagGameSkill) GetName() []byte {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *TagGameSkill) GetCoolDown() int32 {
	if m != nil && m.CoolDown != nil {
		return *m.CoolDown
	}
	return 0
}

func (m *TagGameSkill) GetDuration() int32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *TagGameSkill) GetConsumeType() int32 {
	if m != nil && m.ConsumeType != nil {
		return *m.ConsumeType
	}
	return 0
}

func (m *TagGameSkill) GetConsumeData() int32 {
	if m != nil && m.ConsumeData != nil {
		return *m.ConsumeData
	}
	return 0
}

// 服务器返回游戏技能(每30秒同步一次)
type CMD_S_GAME_SKILL struct {
	GameSkills       []*TagGameSkill `protobuf:"bytes,1,rep,name=game_skills,json=gameSkills" json:"game_skills,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CMD_S_GAME_SKILL) Reset()                    { *m = CMD_S_GAME_SKILL{} }
func (m *CMD_S_GAME_SKILL) String() string            { return proto.CompactTextString(m) }
func (*CMD_S_GAME_SKILL) ProtoMessage()               {}
func (*CMD_S_GAME_SKILL) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{116} }

func (m *CMD_S_GAME_SKILL) GetGameSkills() []*TagGameSkill {
	if m != nil {
		return m.GameSkills
	}
	return nil
}

// 产生红包
type CMD_S_RED_ENVELOPE struct {
	EnvelopeId       *uint32 `protobuf:"varint,1,opt,name=envelope_id,json=envelopeId" json:"envelope_id,omitempty"`
	Name             []byte  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	LastTime         *uint32 `protobuf:"varint,3,opt,name=last_time,json=lastTime" json:"last_time,omitempty"`
	UserId           *uint32 `protobuf:"varint,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_S_RED_ENVELOPE) Reset()                    { *m = CMD_S_RED_ENVELOPE{} }
func (m *CMD_S_RED_ENVELOPE) String() string            { return proto.CompactTextString(m) }
func (*CMD_S_RED_ENVELOPE) ProtoMessage()               {}
func (*CMD_S_RED_ENVELOPE) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{117} }

func (m *CMD_S_RED_ENVELOPE) GetEnvelopeId() uint32 {
	if m != nil && m.EnvelopeId != nil {
		return *m.EnvelopeId
	}
	return 0
}

func (m *CMD_S_RED_ENVELOPE) GetName() []byte {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CMD_S_RED_ENVELOPE) GetLastTime() uint32 {
	if m != nil && m.LastTime != nil {
		return *m.LastTime
	}
	return 0
}

func (m *CMD_S_RED_ENVELOPE) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type TagBetResultData struct {
	Uid              *int32  `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Score            *int64  `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	RecordTime       *uint64 `protobuf:"varint,3,opt,name=record_time,json=recordTime" json:"record_time,omitempty"`
	DropNum          *int32  `protobuf:"varint,4,opt,name=drop_num,json=dropNum" json:"drop_num,omitempty"`
	IsMain           *int32  `protobuf:"varint,5,opt,name=is_main,json=isMain" json:"is_main,omitempty"`
	CostScore        *int64  `protobuf:"varint,6,opt,name=cost_score,json=costScore" json:"cost_score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TagBetResultData) Reset()                    { *m = TagBetResultData{} }
func (m *TagBetResultData) String() string            { return proto.CompactTextString(m) }
func (*TagBetResultData) ProtoMessage()               {}
func (*TagBetResultData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{118} }

func (m *TagBetResultData) GetUid() int32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *TagBetResultData) GetScore() int64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *TagBetResultData) GetRecordTime() uint64 {
	if m != nil && m.RecordTime != nil {
		return *m.RecordTime
	}
	return 0
}

func (m *TagBetResultData) GetDropNum() int32 {
	if m != nil && m.DropNum != nil {
		return *m.DropNum
	}
	return 0
}

func (m *TagBetResultData) GetIsMain() int32 {
	if m != nil && m.IsMain != nil {
		return *m.IsMain
	}
	return 0
}

func (m *TagBetResultData) GetCostScore() int64 {
	if m != nil && m.CostScore != nil {
		return *m.CostScore
	}
	return 0
}

// 押注信息
type CMD_S_BET_RESULT struct {
	UserId           *int32              `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	BetResultData    []*TagBetResultData `protobuf:"bytes,2,rep,name=bet_result_data,json=betResultData" json:"bet_result_data,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CMD_S_BET_RESULT) Reset()                    { *m = CMD_S_BET_RESULT{} }
func (m *CMD_S_BET_RESULT) String() string            { return proto.CompactTextString(m) }
func (*CMD_S_BET_RESULT) ProtoMessage()               {}
func (*CMD_S_BET_RESULT) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{119} }

func (m *CMD_S_BET_RESULT) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_S_BET_RESULT) GetBetResultData() []*TagBetResultData {
	if m != nil {
		return m.BetResultData
	}
	return nil
}

// 用户消息
type CMD_S_USER_MESSAGE struct {
	Type             *uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Text             []byte  `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	Extend           []int32 `protobuf:"varint,3,rep,name=extend" json:"extend,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_S_USER_MESSAGE) Reset()                    { *m = CMD_S_USER_MESSAGE{} }
func (m *CMD_S_USER_MESSAGE) String() string            { return proto.CompactTextString(m) }
func (*CMD_S_USER_MESSAGE) ProtoMessage()               {}
func (*CMD_S_USER_MESSAGE) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{120} }

func (m *CMD_S_USER_MESSAGE) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CMD_S_USER_MESSAGE) GetText() []byte {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *CMD_S_USER_MESSAGE) GetExtend() []int32 {
	if m != nil {
		return m.Extend
	}
	return nil
}

type CMD_CF_S_UserScore struct {
	CurrScore        *int64 `protobuf:"varint,1,opt,name=curr_score,json=currScore" json:"curr_score,omitempty"`
	CurrLottery      *int64 `protobuf:"varint,2,opt,name=curr_lottery,json=currLottery" json:"curr_lottery,omitempty"`
	CurrDiamond      *int64 `protobuf:"varint,3,opt,name=curr_diamond,json=currDiamond" json:"curr_diamond,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_CF_S_UserScore) Reset()                    { *m = CMD_CF_S_UserScore{} }
func (m *CMD_CF_S_UserScore) String() string            { return proto.CompactTextString(m) }
func (*CMD_CF_S_UserScore) ProtoMessage()               {}
func (*CMD_CF_S_UserScore) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{121} }

func (m *CMD_CF_S_UserScore) GetCurrScore() int64 {
	if m != nil && m.CurrScore != nil {
		return *m.CurrScore
	}
	return 0
}

func (m *CMD_CF_S_UserScore) GetCurrLottery() int64 {
	if m != nil && m.CurrLottery != nil {
		return *m.CurrLottery
	}
	return 0
}

func (m *CMD_CF_S_UserScore) GetCurrDiamond() int64 {
	if m != nil && m.CurrDiamond != nil {
		return *m.CurrDiamond
	}
	return 0
}

type CMD_S_GM_USER_LIST_GET struct {
	KillUserList     []*CMD_S_GM_USER_LIST `protobuf:"bytes,1,rep,name=kill_user_list,json=killUserList" json:"kill_user_list,omitempty"`
	LuckUserList     []*CMD_S_GM_USER_LIST `protobuf:"bytes,2,rep,name=luck_user_list,json=luckUserList" json:"luck_user_list,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CMD_S_GM_USER_LIST_GET) Reset()                    { *m = CMD_S_GM_USER_LIST_GET{} }
func (m *CMD_S_GM_USER_LIST_GET) String() string            { return proto.CompactTextString(m) }
func (*CMD_S_GM_USER_LIST_GET) ProtoMessage()               {}
func (*CMD_S_GM_USER_LIST_GET) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{122} }

func (m *CMD_S_GM_USER_LIST_GET) GetKillUserList() []*CMD_S_GM_USER_LIST {
	if m != nil {
		return m.KillUserList
	}
	return nil
}

func (m *CMD_S_GM_USER_LIST_GET) GetLuckUserList() []*CMD_S_GM_USER_LIST {
	if m != nil {
		return m.LuckUserList
	}
	return nil
}

// 用户消息
type CMD_S_GM_USER_LIST struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	UserCurScore     *int64  `protobuf:"varint,2,opt,name=user_cur_score,json=userCurScore" json:"user_cur_score,omitempty"`
	WantUserScore    *int64  `protobuf:"varint,3,opt,name=want_user_score,json=wantUserScore" json:"want_user_score,omitempty"`
	UserRule         *uint32 `protobuf:"varint,4,opt,name=user_rule,json=userRule" json:"user_rule,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_S_GM_USER_LIST) Reset()                    { *m = CMD_S_GM_USER_LIST{} }
func (m *CMD_S_GM_USER_LIST) String() string            { return proto.CompactTextString(m) }
func (*CMD_S_GM_USER_LIST) ProtoMessage()               {}
func (*CMD_S_GM_USER_LIST) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{123} }

func (m *CMD_S_GM_USER_LIST) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_S_GM_USER_LIST) GetUserCurScore() int64 {
	if m != nil && m.UserCurScore != nil {
		return *m.UserCurScore
	}
	return 0
}

func (m *CMD_S_GM_USER_LIST) GetWantUserScore() int64 {
	if m != nil && m.WantUserScore != nil {
		return *m.WantUserScore
	}
	return 0
}

func (m *CMD_S_GM_USER_LIST) GetUserRule() uint32 {
	if m != nil && m.UserRule != nil {
		return *m.UserRule
	}
	return 0
}

// 请求竞技场数据
type CMD_GR_C_REQUEST_ARENA struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_C_REQUEST_ARENA) Reset()                    { *m = CMD_GR_C_REQUEST_ARENA{} }
func (m *CMD_GR_C_REQUEST_ARENA) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_REQUEST_ARENA) ProtoMessage()               {}
func (*CMD_GR_C_REQUEST_ARENA) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{124} }

// 请求竞技场数据
type CMD_GR_S_REQUEST_ARENA struct {
	BulletNum        *uint32 `protobuf:"varint,1,opt,name=bullet_num,json=bulletNum" json:"bullet_num,omitempty"`
	CannonMultiple   *uint32 `protobuf:"varint,2,opt,name=cannon_multiple,json=cannonMultiple" json:"cannon_multiple,omitempty"`
	Score            *int32  `protobuf:"varint,3,opt,name=score" json:"score,omitempty"`
	FreeCount        *int32  `protobuf:"varint,4,opt,name=free_count,json=freeCount" json:"free_count,omitempty"`
	TodayMaxScore    *int32  `protobuf:"varint,5,opt,name=today_max_score,json=todayMaxScore" json:"today_max_score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_S_REQUEST_ARENA) Reset()                    { *m = CMD_GR_S_REQUEST_ARENA{} }
func (m *CMD_GR_S_REQUEST_ARENA) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_REQUEST_ARENA) ProtoMessage()               {}
func (*CMD_GR_S_REQUEST_ARENA) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{125} }

func (m *CMD_GR_S_REQUEST_ARENA) GetBulletNum() uint32 {
	if m != nil && m.BulletNum != nil {
		return *m.BulletNum
	}
	return 0
}

func (m *CMD_GR_S_REQUEST_ARENA) GetCannonMultiple() uint32 {
	if m != nil && m.CannonMultiple != nil {
		return *m.CannonMultiple
	}
	return 0
}

func (m *CMD_GR_S_REQUEST_ARENA) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CMD_GR_S_REQUEST_ARENA) GetFreeCount() int32 {
	if m != nil && m.FreeCount != nil {
		return *m.FreeCount
	}
	return 0
}

func (m *CMD_GR_S_REQUEST_ARENA) GetTodayMaxScore() int32 {
	if m != nil && m.TodayMaxScore != nil {
		return *m.TodayMaxScore
	}
	return 0
}

// 重新开始竞技场
type CMD_GR_C_START_ARENA struct {
	CannonMultiple   *uint32 `protobuf:"varint,1,opt,name=cannon_multiple,json=cannonMultiple" json:"cannon_multiple,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_C_START_ARENA) Reset()                    { *m = CMD_GR_C_START_ARENA{} }
func (m *CMD_GR_C_START_ARENA) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_START_ARENA) ProtoMessage()               {}
func (*CMD_GR_C_START_ARENA) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{126} }

func (m *CMD_GR_C_START_ARENA) GetCannonMultiple() uint32 {
	if m != nil && m.CannonMultiple != nil {
		return *m.CannonMultiple
	}
	return 0
}

// 重新开始竞技场
type CMD_GR_S_START_ARENA struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_S_START_ARENA) Reset()                    { *m = CMD_GR_S_START_ARENA{} }
func (m *CMD_GR_S_START_ARENA) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_START_ARENA) ProtoMessage()               {}
func (*CMD_GR_S_START_ARENA) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{127} }

type CMD_GF_S_Update_UserScore struct {
	CurrScore        *int64  `protobuf:"varint,1,opt,name=curr_score,json=currScore" json:"curr_score,omitempty"`
	CurrLottery      *int64  `protobuf:"varint,2,opt,name=curr_lottery,json=currLottery" json:"curr_lottery,omitempty"`
	CurrDiamond      *int64  `protobuf:"varint,3,opt,name=curr_diamond,json=currDiamond" json:"curr_diamond,omitempty"`
	ChangeScore      *int64  `protobuf:"varint,4,opt,name=change_score,json=changeScore" json:"change_score,omitempty"`
	ChangeLottery    *int64  `protobuf:"varint,5,opt,name=change_lottery,json=changeLottery" json:"change_lottery,omitempty"`
	ChangeDiamond    *int64  `protobuf:"varint,6,opt,name=change_diamond,json=changeDiamond" json:"change_diamond,omitempty"`
	UpdateType       *uint32 `protobuf:"varint,7,opt,name=update_type,json=updateType" json:"update_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GF_S_Update_UserScore) Reset()                    { *m = CMD_GF_S_Update_UserScore{} }
func (m *CMD_GF_S_Update_UserScore) String() string            { return proto.CompactTextString(m) }
func (*CMD_GF_S_Update_UserScore) ProtoMessage()               {}
func (*CMD_GF_S_Update_UserScore) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{128} }

func (m *CMD_GF_S_Update_UserScore) GetCurrScore() int64 {
	if m != nil && m.CurrScore != nil {
		return *m.CurrScore
	}
	return 0
}

func (m *CMD_GF_S_Update_UserScore) GetCurrLottery() int64 {
	if m != nil && m.CurrLottery != nil {
		return *m.CurrLottery
	}
	return 0
}

func (m *CMD_GF_S_Update_UserScore) GetCurrDiamond() int64 {
	if m != nil && m.CurrDiamond != nil {
		return *m.CurrDiamond
	}
	return 0
}

func (m *CMD_GF_S_Update_UserScore) GetChangeScore() int64 {
	if m != nil && m.ChangeScore != nil {
		return *m.ChangeScore
	}
	return 0
}

func (m *CMD_GF_S_Update_UserScore) GetChangeLottery() int64 {
	if m != nil && m.ChangeLottery != nil {
		return *m.ChangeLottery
	}
	return 0
}

func (m *CMD_GF_S_Update_UserScore) GetChangeDiamond() int64 {
	if m != nil && m.ChangeDiamond != nil {
		return *m.ChangeDiamond
	}
	return 0
}

func (m *CMD_GF_S_Update_UserScore) GetUpdateType() uint32 {
	if m != nil && m.UpdateType != nil {
		return *m.UpdateType
	}
	return 0
}

// 坐下成功
type CMD_GR_S_SITDOWN_SUCCESS struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_S_SITDOWN_SUCCESS) Reset()                    { *m = CMD_GR_S_SITDOWN_SUCCESS{} }
func (m *CMD_GR_S_SITDOWN_SUCCESS) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_SITDOWN_SUCCESS) ProtoMessage()               {}
func (*CMD_GR_S_SITDOWN_SUCCESS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{129} }

// 用户当前主线引导任务信息
type CMD_CF_S_UserMasterTaskGuideInfo struct {
	TaskId           *int64 `protobuf:"varint,1,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	TaskProgress     *int64 `protobuf:"varint,2,opt,name=task_progress,json=taskProgress" json:"task_progress,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_CF_S_UserMasterTaskGuideInfo) Reset()         { *m = CMD_CF_S_UserMasterTaskGuideInfo{} }
func (m *CMD_CF_S_UserMasterTaskGuideInfo) String() string { return proto.CompactTextString(m) }
func (*CMD_CF_S_UserMasterTaskGuideInfo) ProtoMessage()    {}
func (*CMD_CF_S_UserMasterTaskGuideInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{130}
}

func (m *CMD_CF_S_UserMasterTaskGuideInfo) GetTaskId() int64 {
	if m != nil && m.TaskId != nil {
		return *m.TaskId
	}
	return 0
}

func (m *CMD_CF_S_UserMasterTaskGuideInfo) GetTaskProgress() int64 {
	if m != nil && m.TaskProgress != nil {
		return *m.TaskProgress
	}
	return 0
}

// 用户完成某个主线引导任务
type CMD_CF_S_UserCompletedTaskGuidID struct {
	TaskId           *int64 `protobuf:"varint,1,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	BoolCompletedAll *bool  `protobuf:"varint,2,opt,name=bool_completed_all,json=boolCompletedAll" json:"bool_completed_all,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_CF_S_UserCompletedTaskGuidID) Reset()         { *m = CMD_CF_S_UserCompletedTaskGuidID{} }
func (m *CMD_CF_S_UserCompletedTaskGuidID) String() string { return proto.CompactTextString(m) }
func (*CMD_CF_S_UserCompletedTaskGuidID) ProtoMessage()    {}
func (*CMD_CF_S_UserCompletedTaskGuidID) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{131}
}

func (m *CMD_CF_S_UserCompletedTaskGuidID) GetTaskId() int64 {
	if m != nil && m.TaskId != nil {
		return *m.TaskId
	}
	return 0
}

func (m *CMD_CF_S_UserCompletedTaskGuidID) GetBoolCompletedAll() bool {
	if m != nil && m.BoolCompletedAll != nil {
		return *m.BoolCompletedAll
	}
	return false
}

// 用户请求主线引导任务
type CMD_CF_C_UserMasterTaskGuideInfo struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_CF_C_UserMasterTaskGuideInfo) Reset()         { *m = CMD_CF_C_UserMasterTaskGuideInfo{} }
func (m *CMD_CF_C_UserMasterTaskGuideInfo) String() string { return proto.CompactTextString(m) }
func (*CMD_CF_C_UserMasterTaskGuideInfo) ProtoMessage()    {}
func (*CMD_CF_C_UserMasterTaskGuideInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{132}
}

// 玩家杀分游戏小奖池抽奖
type CMD_C_DRAW_KILLER_PRIZE struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_C_DRAW_KILLER_PRIZE) Reset()                    { *m = CMD_C_DRAW_KILLER_PRIZE{} }
func (m *CMD_C_DRAW_KILLER_PRIZE) String() string            { return proto.CompactTextString(m) }
func (*CMD_C_DRAW_KILLER_PRIZE) ProtoMessage()               {}
func (*CMD_C_DRAW_KILLER_PRIZE) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{133} }

type TagPersonalPrizePoolReward struct {
	Index            *uint32 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	RewardId         *uint32 `protobuf:"varint,2,opt,name=reward_id,json=rewardId" json:"reward_id,omitempty"`
	Value            *uint32 `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	RewardType       *uint32 `protobuf:"varint,4,opt,name=reward_type,json=rewardType" json:"reward_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TagPersonalPrizePoolReward) Reset()                    { *m = TagPersonalPrizePoolReward{} }
func (m *TagPersonalPrizePoolReward) String() string            { return proto.CompactTextString(m) }
func (*TagPersonalPrizePoolReward) ProtoMessage()               {}
func (*TagPersonalPrizePoolReward) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{134} }

func (m *TagPersonalPrizePoolReward) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *TagPersonalPrizePoolReward) GetRewardId() uint32 {
	if m != nil && m.RewardId != nil {
		return *m.RewardId
	}
	return 0
}

func (m *TagPersonalPrizePoolReward) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *TagPersonalPrizePoolReward) GetRewardType() uint32 {
	if m != nil && m.RewardType != nil {
		return *m.RewardType
	}
	return 0
}

// 玩家杀分游戏小奖池抽奖
type CMD_S_DRAW_KILLER_PRIZE struct {
	IsSuccessful     *bool                         `protobuf:"varint,1,opt,name=is_successful,json=isSuccessful" json:"is_successful,omitempty"`
	DstIndex         *uint32                       `protobuf:"varint,2,opt,name=dst_index,json=dstIndex" json:"dst_index,omitempty"`
	Rewards          []*TagPersonalPrizePoolReward `protobuf:"bytes,3,rep,name=rewards" json:"rewards,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *CMD_S_DRAW_KILLER_PRIZE) Reset()                    { *m = CMD_S_DRAW_KILLER_PRIZE{} }
func (m *CMD_S_DRAW_KILLER_PRIZE) String() string            { return proto.CompactTextString(m) }
func (*CMD_S_DRAW_KILLER_PRIZE) ProtoMessage()               {}
func (*CMD_S_DRAW_KILLER_PRIZE) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{135} }

func (m *CMD_S_DRAW_KILLER_PRIZE) GetIsSuccessful() bool {
	if m != nil && m.IsSuccessful != nil {
		return *m.IsSuccessful
	}
	return false
}

func (m *CMD_S_DRAW_KILLER_PRIZE) GetDstIndex() uint32 {
	if m != nil && m.DstIndex != nil {
		return *m.DstIndex
	}
	return 0
}

func (m *CMD_S_DRAW_KILLER_PRIZE) GetRewards() []*TagPersonalPrizePoolReward {
	if m != nil {
		return m.Rewards
	}
	return nil
}

// 下发世界boss活动配置
type CMD_GR_C_WORLD_BOSS_ACTIVITY_CONFIG_LIST struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_C_WORLD_BOSS_ACTIVITY_CONFIG_LIST) Reset() {
	*m = CMD_GR_C_WORLD_BOSS_ACTIVITY_CONFIG_LIST{}
}
func (m *CMD_GR_C_WORLD_BOSS_ACTIVITY_CONFIG_LIST) String() string { return proto.CompactTextString(m) }
func (*CMD_GR_C_WORLD_BOSS_ACTIVITY_CONFIG_LIST) ProtoMessage()    {}
func (*CMD_GR_C_WORLD_BOSS_ACTIVITY_CONFIG_LIST) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{136}
}

// 下发世界boss活动配置
type CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST struct {
	OpenTime         []uint32                                            `protobuf:"varint,1,rep,name=openTime" json:"openTime,omitempty"`
	BaseScore        *uint32                                             `protobuf:"varint,2,opt,name=baseScore" json:"baseScore,omitempty"`
	OpenLog          []*CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST_OpenLog `protobuf:"bytes,3,rep,name=open_log,json=openLog" json:"open_log,omitempty"`
	XXX_unrecognized []byte                                              `json:"-"`
}

func (m *CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST) Reset() {
	*m = CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST{}
}
func (m *CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST) String() string { return proto.CompactTextString(m) }
func (*CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST) ProtoMessage()    {}
func (*CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{137}
}

func (m *CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST) GetOpenTime() []uint32 {
	if m != nil {
		return m.OpenTime
	}
	return nil
}

func (m *CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST) GetBaseScore() uint32 {
	if m != nil && m.BaseScore != nil {
		return *m.BaseScore
	}
	return 0
}

func (m *CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST) GetOpenLog() []*CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST_OpenLog {
	if m != nil {
		return m.OpenLog
	}
	return nil
}

// 开放日志
type CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST_OpenLog struct {
	OpenTime         *uint32 `protobuf:"varint,1,opt,name=open_time,json=openTime" json:"open_time,omitempty"`
	IssueReward      *uint64 `protobuf:"varint,2,opt,name=Issue_reward,json=IssueReward" json:"Issue_reward,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST_OpenLog) Reset() {
	*m = CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST_OpenLog{}
}
func (m *CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST_OpenLog) String() string {
	return proto.CompactTextString(m)
}
func (*CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST_OpenLog) ProtoMessage() {}
func (*CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST_OpenLog) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{137, 0}
}

func (m *CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST_OpenLog) GetOpenTime() uint32 {
	if m != nil && m.OpenTime != nil {
		return *m.OpenTime
	}
	return 0
}

func (m *CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST_OpenLog) GetIssueReward() uint64 {
	if m != nil && m.IssueReward != nil {
		return *m.IssueReward
	}
	return 0
}

// 下发世界boss活动最新排行
type CMD_GR_C_WORLD_BOSS_ACTIVITY_LAST_RANKING struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_C_WORLD_BOSS_ACTIVITY_LAST_RANKING) Reset() {
	*m = CMD_GR_C_WORLD_BOSS_ACTIVITY_LAST_RANKING{}
}
func (m *CMD_GR_C_WORLD_BOSS_ACTIVITY_LAST_RANKING) String() string { return proto.CompactTextString(m) }
func (*CMD_GR_C_WORLD_BOSS_ACTIVITY_LAST_RANKING) ProtoMessage()    {}
func (*CMD_GR_C_WORLD_BOSS_ACTIVITY_LAST_RANKING) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{138}
}

// 下发世界boss活动最新排行
type CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING struct {
	Ranks            []*CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING_WorldBossUserRank `protobuf:"bytes,1,rep,name=ranks" json:"ranks,omitempty"`
	XXX_unrecognized []byte                                                         `json:"-"`
}

func (m *CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING) Reset() {
	*m = CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING{}
}
func (m *CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING) String() string { return proto.CompactTextString(m) }
func (*CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING) ProtoMessage()    {}
func (*CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{139}
}

func (m *CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING) GetRanks() []*CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING_WorldBossUserRank {
	if m != nil {
		return m.Ranks
	}
	return nil
}

// 用户排名
type CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING_WorldBossUserRank struct {
	Rank             *uint32 `protobuf:"varint,1,opt,name=rank" json:"rank,omitempty"`
	UserId           *uint32 `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Nick             []byte  `protobuf:"bytes,3,opt,name=nick" json:"nick,omitempty"`
	Reward           *uint32 `protobuf:"varint,4,opt,name=reward" json:"reward,omitempty"`
	FaceId           *uint32 `protobuf:"varint,5,opt,name=faceId" json:"faceId,omitempty"`
	VipLev           *uint32 `protobuf:"varint,6,opt,name=vipLev" json:"vipLev,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING_WorldBossUserRank) Reset() {
	*m = CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING_WorldBossUserRank{}
}
func (m *CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING_WorldBossUserRank) String() string {
	return proto.CompactTextString(m)
}
func (*CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING_WorldBossUserRank) ProtoMessage() {}
func (*CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING_WorldBossUserRank) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{139, 0}
}

func (m *CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING_WorldBossUserRank) GetRank() uint32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING_WorldBossUserRank) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING_WorldBossUserRank) GetNick() []byte {
	if m != nil {
		return m.Nick
	}
	return nil
}

func (m *CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING_WorldBossUserRank) GetReward() uint32 {
	if m != nil && m.Reward != nil {
		return *m.Reward
	}
	return 0
}

func (m *CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING_WorldBossUserRank) GetFaceId() uint32 {
	if m != nil && m.FaceId != nil {
		return *m.FaceId
	}
	return 0
}

func (m *CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING_WorldBossUserRank) GetVipLev() uint32 {
	if m != nil && m.VipLev != nil {
		return *m.VipLev
	}
	return 0
}

// 转换道具
type CMD_GR_C_RECHANGE_ITEM struct {
	ItemId           *uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_C_RECHANGE_ITEM) Reset()                    { *m = CMD_GR_C_RECHANGE_ITEM{} }
func (m *CMD_GR_C_RECHANGE_ITEM) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_RECHANGE_ITEM) ProtoMessage()               {}
func (*CMD_GR_C_RECHANGE_ITEM) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{140} }

func (m *CMD_GR_C_RECHANGE_ITEM) GetItemId() uint32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

type CMD_GR_S_RECHANGE_ITEM struct {
	MessageId        *int32  `protobuf:"varint,1,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
	DelItemType      *uint32 `protobuf:"varint,2,opt,name=del_item_type,json=delItemType" json:"del_item_type,omitempty"`
	DelItemNum       *uint32 `protobuf:"varint,3,opt,name=del_item_num,json=delItemNum" json:"del_item_num,omitempty"`
	AddItemType      *uint32 `protobuf:"varint,4,opt,name=add_item_type,json=addItemType" json:"add_item_type,omitempty"`
	AddItemNum       *uint32 `protobuf:"varint,5,opt,name=add_item_num,json=addItemNum" json:"add_item_num,omitempty"`
	UserId           *uint32 `protobuf:"varint,6,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_S_RECHANGE_ITEM) Reset()                    { *m = CMD_GR_S_RECHANGE_ITEM{} }
func (m *CMD_GR_S_RECHANGE_ITEM) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_RECHANGE_ITEM) ProtoMessage()               {}
func (*CMD_GR_S_RECHANGE_ITEM) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{141} }

func (m *CMD_GR_S_RECHANGE_ITEM) GetMessageId() int32 {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return 0
}

func (m *CMD_GR_S_RECHANGE_ITEM) GetDelItemType() uint32 {
	if m != nil && m.DelItemType != nil {
		return *m.DelItemType
	}
	return 0
}

func (m *CMD_GR_S_RECHANGE_ITEM) GetDelItemNum() uint32 {
	if m != nil && m.DelItemNum != nil {
		return *m.DelItemNum
	}
	return 0
}

func (m *CMD_GR_S_RECHANGE_ITEM) GetAddItemType() uint32 {
	if m != nil && m.AddItemType != nil {
		return *m.AddItemType
	}
	return 0
}

func (m *CMD_GR_S_RECHANGE_ITEM) GetAddItemNum() uint32 {
	if m != nil && m.AddItemNum != nil {
		return *m.AddItemNum
	}
	return 0
}

func (m *CMD_GR_S_RECHANGE_ITEM) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 请求存钱罐消息
type CMD_GR_C_SAVING_POT_INFO struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_C_SAVING_POT_INFO) Reset()                    { *m = CMD_GR_C_SAVING_POT_INFO{} }
func (m *CMD_GR_C_SAVING_POT_INFO) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_SAVING_POT_INFO) ProtoMessage()               {}
func (*CMD_GR_C_SAVING_POT_INFO) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{142} }

type CMD_GR_S_SAVING_POT_INFO struct {
	CurScore         *uint32 `protobuf:"varint,1,opt,name=cur_score,json=curScore" json:"cur_score,omitempty"`
	CurGotNum        *uint32 `protobuf:"varint,2,opt,name=cur_got_num,json=curGotNum" json:"cur_got_num,omitempty"`
	MaxGotNum        *uint32 `protobuf:"varint,3,opt,name=max_got_num,json=maxGotNum" json:"max_got_num,omitempty"`
	CurState         *uint32 `protobuf:"varint,4,opt,name=cur_state,json=curState" json:"cur_state,omitempty"`
	MinGotLimit      *uint32 `protobuf:"varint,5,opt,name=min_got_limit,json=minGotLimit" json:"min_got_limit,omitempty"`
	MaxTotalLimit    *uint32 `protobuf:"varint,6,opt,name=max_total_limit,json=maxTotalLimit" json:"max_total_limit,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_S_SAVING_POT_INFO) Reset()                    { *m = CMD_GR_S_SAVING_POT_INFO{} }
func (m *CMD_GR_S_SAVING_POT_INFO) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_SAVING_POT_INFO) ProtoMessage()               {}
func (*CMD_GR_S_SAVING_POT_INFO) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{143} }

func (m *CMD_GR_S_SAVING_POT_INFO) GetCurScore() uint32 {
	if m != nil && m.CurScore != nil {
		return *m.CurScore
	}
	return 0
}

func (m *CMD_GR_S_SAVING_POT_INFO) GetCurGotNum() uint32 {
	if m != nil && m.CurGotNum != nil {
		return *m.CurGotNum
	}
	return 0
}

func (m *CMD_GR_S_SAVING_POT_INFO) GetMaxGotNum() uint32 {
	if m != nil && m.MaxGotNum != nil {
		return *m.MaxGotNum
	}
	return 0
}

func (m *CMD_GR_S_SAVING_POT_INFO) GetCurState() uint32 {
	if m != nil && m.CurState != nil {
		return *m.CurState
	}
	return 0
}

func (m *CMD_GR_S_SAVING_POT_INFO) GetMinGotLimit() uint32 {
	if m != nil && m.MinGotLimit != nil {
		return *m.MinGotLimit
	}
	return 0
}

func (m *CMD_GR_S_SAVING_POT_INFO) GetMaxTotalLimit() uint32 {
	if m != nil && m.MaxTotalLimit != nil {
		return *m.MaxTotalLimit
	}
	return 0
}

// 领取存钱罐
type CMD_GR_C_SAVING_POT_GOT struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_C_SAVING_POT_GOT) Reset()                    { *m = CMD_GR_C_SAVING_POT_GOT{} }
func (m *CMD_GR_C_SAVING_POT_GOT) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_SAVING_POT_GOT) ProtoMessage()               {}
func (*CMD_GR_C_SAVING_POT_GOT) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{144} }

type CMD_GR_S_SAVING_POT_GOT struct {
	MessageId        *int32  `protobuf:"varint,1,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
	GotScore         *uint32 `protobuf:"varint,2,opt,name=got_score,json=gotScore" json:"got_score,omitempty"`
	UserId           *uint32 `protobuf:"varint,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ChairId          *uint32 `protobuf:"varint,4,opt,name=chair_id,json=chairId" json:"chair_id,omitempty"`
	CurScore         *uint32 `protobuf:"varint,5,opt,name=cur_score,json=curScore" json:"cur_score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_S_SAVING_POT_GOT) Reset()                    { *m = CMD_GR_S_SAVING_POT_GOT{} }
func (m *CMD_GR_S_SAVING_POT_GOT) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_SAVING_POT_GOT) ProtoMessage()               {}
func (*CMD_GR_S_SAVING_POT_GOT) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{145} }

func (m *CMD_GR_S_SAVING_POT_GOT) GetMessageId() int32 {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return 0
}

func (m *CMD_GR_S_SAVING_POT_GOT) GetGotScore() uint32 {
	if m != nil && m.GotScore != nil {
		return *m.GotScore
	}
	return 0
}

func (m *CMD_GR_S_SAVING_POT_GOT) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_S_SAVING_POT_GOT) GetChairId() uint32 {
	if m != nil && m.ChairId != nil {
		return *m.ChairId
	}
	return 0
}

func (m *CMD_GR_S_SAVING_POT_GOT) GetCurScore() uint32 {
	if m != nil && m.CurScore != nil {
		return *m.CurScore
	}
	return 0
}

// 请求赠送道具
type CMD_GR_C_GIVE_ITEM struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ItemId           *uint32 `protobuf:"varint,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	ItemNumber       *uint32 `protobuf:"varint,3,opt,name=item_number,json=itemNumber" json:"item_number,omitempty"`
	GiveGameId       *uint32 `protobuf:"varint,4,opt,name=give_game_id,json=giveGameId" json:"give_game_id,omitempty"`
	GivePassword     []byte  `protobuf:"bytes,5,opt,name=give_password,json=givePassword" json:"give_password,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_C_GIVE_ITEM) Reset()                    { *m = CMD_GR_C_GIVE_ITEM{} }
func (m *CMD_GR_C_GIVE_ITEM) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_GIVE_ITEM) ProtoMessage()               {}
func (*CMD_GR_C_GIVE_ITEM) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{146} }

func (m *CMD_GR_C_GIVE_ITEM) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_C_GIVE_ITEM) GetItemId() uint32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CMD_GR_C_GIVE_ITEM) GetItemNumber() uint32 {
	if m != nil && m.ItemNumber != nil {
		return *m.ItemNumber
	}
	return 0
}

func (m *CMD_GR_C_GIVE_ITEM) GetGiveGameId() uint32 {
	if m != nil && m.GiveGameId != nil {
		return *m.GiveGameId
	}
	return 0
}

func (m *CMD_GR_C_GIVE_ITEM) GetGivePassword() []byte {
	if m != nil {
		return m.GivePassword
	}
	return nil
}

// 返回赠送道具
type CMD_GR_S_GIVE_ITEM struct {
	UserId           *uint32            `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	GiveResult       *uint32            `protobuf:"varint,2,opt,name=give_result,json=giveResult" json:"give_result,omitempty"`
	GiveNumber       *uint32            `protobuf:"varint,3,opt,name=give_number,json=giveNumber" json:"give_number,omitempty"`
	ItemInfo         *TagUserSkill `protobuf:"bytes,4,opt,name=item_info,json=itemInfo" json:"item_info,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CMD_GR_S_GIVE_ITEM) Reset()                    { *m = CMD_GR_S_GIVE_ITEM{} }
func (m *CMD_GR_S_GIVE_ITEM) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_GIVE_ITEM) ProtoMessage()               {}
func (*CMD_GR_S_GIVE_ITEM) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{147} }

func (m *CMD_GR_S_GIVE_ITEM) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_S_GIVE_ITEM) GetGiveResult() uint32 {
	if m != nil && m.GiveResult != nil {
		return *m.GiveResult
	}
	return 0
}

func (m *CMD_GR_S_GIVE_ITEM) GetGiveNumber() uint32 {
	if m != nil && m.GiveNumber != nil {
		return *m.GiveNumber
	}
	return 0
}

func (m *CMD_GR_S_GIVE_ITEM) GetItemInfo() *TagUserSkill {
	if m != nil {
		return m.ItemInfo
	}
	return nil
}

// 向数据库请求赠送者的昵称
type CMD_GR_C_GIVE_NICKNAME struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	GiveGameId       *uint32 `protobuf:"varint,2,opt,name=give_game_id,json=giveGameId" json:"give_game_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_C_GIVE_NICKNAME) Reset()                    { *m = CMD_GR_C_GIVE_NICKNAME{} }
func (m *CMD_GR_C_GIVE_NICKNAME) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_GIVE_NICKNAME) ProtoMessage()               {}
func (*CMD_GR_C_GIVE_NICKNAME) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{148} }

func (m *CMD_GR_C_GIVE_NICKNAME) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_C_GIVE_NICKNAME) GetGiveGameId() uint32 {
	if m != nil && m.GiveGameId != nil {
		return *m.GiveGameId
	}
	return 0
}

// 数据库返回赠送者的昵称
type CMD_GR_S_GIVE_NICKNAME struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	GiveResult       *uint32 `protobuf:"varint,2,opt,name=give_result,json=giveResult" json:"give_result,omitempty"`
	GiveGameId       *uint32 `protobuf:"varint,3,opt,name=give_game_id,json=giveGameId" json:"give_game_id,omitempty"`
	NickName         []byte  `protobuf:"bytes,4,opt,name=nick_name,json=nickName" json:"nick_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_S_GIVE_NICKNAME) Reset()                    { *m = CMD_GR_S_GIVE_NICKNAME{} }
func (m *CMD_GR_S_GIVE_NICKNAME) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_GIVE_NICKNAME) ProtoMessage()               {}
func (*CMD_GR_S_GIVE_NICKNAME) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{149} }

func (m *CMD_GR_S_GIVE_NICKNAME) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_S_GIVE_NICKNAME) GetGiveResult() uint32 {
	if m != nil && m.GiveResult != nil {
		return *m.GiveResult
	}
	return 0
}

func (m *CMD_GR_S_GIVE_NICKNAME) GetGiveGameId() uint32 {
	if m != nil && m.GiveGameId != nil {
		return *m.GiveGameId
	}
	return 0
}

func (m *CMD_GR_S_GIVE_NICKNAME) GetNickName() []byte {
	if m != nil {
		return m.NickName
	}
	return nil
}

// 服务器打点日志
type CMD_GR_C_PRINT_POINT_LOG struct {
	Reason           *CMD_GR_C_PRINT_POINT_LOG_PointType `protobuf:"varint,1,opt,name=reason,enum=CMD.CMD_GR_C_PRINT_POINT_LOG_PointType" json:"reason,omitempty"`
	Subtype          *uint32                             `protobuf:"varint,2,opt,name=subtype" json:"subtype,omitempty"`
	Accounts         []byte                              `protobuf:"bytes,3,opt,name=accounts" json:"accounts,omitempty"`
	IpAddr           []byte                              `protobuf:"bytes,4,opt,name=ip_addr,json=ipAddr" json:"ip_addr,omitempty"`
	DiyDesc          []byte                              `protobuf:"bytes,5,opt,name=diy_desc,json=diyDesc" json:"diy_desc,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *CMD_GR_C_PRINT_POINT_LOG) Reset()                    { *m = CMD_GR_C_PRINT_POINT_LOG{} }
func (m *CMD_GR_C_PRINT_POINT_LOG) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_PRINT_POINT_LOG) ProtoMessage()               {}
func (*CMD_GR_C_PRINT_POINT_LOG) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{150} }

func (m *CMD_GR_C_PRINT_POINT_LOG) GetReason() CMD_GR_C_PRINT_POINT_LOG_PointType {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return CMD_GR_C_PRINT_POINT_LOG_PT_ENTER
}

func (m *CMD_GR_C_PRINT_POINT_LOG) GetSubtype() uint32 {
	if m != nil && m.Subtype != nil {
		return *m.Subtype
	}
	return 0
}

func (m *CMD_GR_C_PRINT_POINT_LOG) GetAccounts() []byte {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *CMD_GR_C_PRINT_POINT_LOG) GetIpAddr() []byte {
	if m != nil {
		return m.IpAddr
	}
	return nil
}

func (m *CMD_GR_C_PRINT_POINT_LOG) GetDiyDesc() []byte {
	if m != nil {
		return m.DiyDesc
	}
	return nil
}

type CMD_GR_C_NEWPLAYER_INFO struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_C_NEWPLAYER_INFO) Reset()                    { *m = CMD_GR_C_NEWPLAYER_INFO{} }
func (m *CMD_GR_C_NEWPLAYER_INFO) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_NEWPLAYER_INFO) ProtoMessage()               {}
func (*CMD_GR_C_NEWPLAYER_INFO) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{151} }

func (m *CMD_GR_C_NEWPLAYER_INFO) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type CMD_GR_S_USER_BONUS_MISSION_REWARD struct {
	MissionId        *int32 `protobuf:"varint,1,opt,name=mission_id,json=missionId" json:"mission_id,omitempty"`
	MissionProgress  *int32 `protobuf:"varint,2,opt,name=mission_progress,json=missionProgress" json:"mission_progress,omitempty"`
	GotMissionId     *int32 `protobuf:"varint,3,opt,name=got_mission_id,json=gotMissionId" json:"got_mission_id,omitempty"`
	IsFinish         *bool  `protobuf:"varint,4,opt,name=is_finish,json=isFinish" json:"is_finish,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_GR_S_USER_BONUS_MISSION_REWARD) Reset()         { *m = CMD_GR_S_USER_BONUS_MISSION_REWARD{} }
func (m *CMD_GR_S_USER_BONUS_MISSION_REWARD) String() string { return proto.CompactTextString(m) }
func (*CMD_GR_S_USER_BONUS_MISSION_REWARD) ProtoMessage()    {}
func (*CMD_GR_S_USER_BONUS_MISSION_REWARD) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{152}
}

func (m *CMD_GR_S_USER_BONUS_MISSION_REWARD) GetMissionId() int32 {
	if m != nil && m.MissionId != nil {
		return *m.MissionId
	}
	return 0
}

func (m *CMD_GR_S_USER_BONUS_MISSION_REWARD) GetMissionProgress() int32 {
	if m != nil && m.MissionProgress != nil {
		return *m.MissionProgress
	}
	return 0
}

func (m *CMD_GR_S_USER_BONUS_MISSION_REWARD) GetGotMissionId() int32 {
	if m != nil && m.GotMissionId != nil {
		return *m.GotMissionId
	}
	return 0
}

func (m *CMD_GR_S_USER_BONUS_MISSION_REWARD) GetIsFinish() bool {
	if m != nil && m.IsFinish != nil {
		return *m.IsFinish
	}
	return false
}

type CMD_GR_C_FEED_BACK struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	MobilePhone      []byte  `protobuf:"bytes,2,opt,name=mobile_phone,json=mobilePhone" json:"mobile_phone,omitempty"`
	Qq               []byte  `protobuf:"bytes,3,opt,name=qq" json:"qq,omitempty"`
	Content          []byte  `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
	FeedbackType     *uint32 `protobuf:"varint,5,opt,name=feedback_type,json=feedbackType" json:"feedback_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_C_FEED_BACK) Reset()                    { *m = CMD_GR_C_FEED_BACK{} }
func (m *CMD_GR_C_FEED_BACK) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_FEED_BACK) ProtoMessage()               {}
func (*CMD_GR_C_FEED_BACK) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{153} }

func (m *CMD_GR_C_FEED_BACK) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_C_FEED_BACK) GetMobilePhone() []byte {
	if m != nil {
		return m.MobilePhone
	}
	return nil
}

func (m *CMD_GR_C_FEED_BACK) GetQq() []byte {
	if m != nil {
		return m.Qq
	}
	return nil
}

func (m *CMD_GR_C_FEED_BACK) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *CMD_GR_C_FEED_BACK) GetFeedbackType() uint32 {
	if m != nil && m.FeedbackType != nil {
		return *m.FeedbackType
	}
	return 0
}

type CMD_GR_S_FEED_BACK struct {
	ResultType       *uint32 `protobuf:"varint,1,opt,name=result_type,json=resultType" json:"result_type,omitempty"`
	FeedbackId       *uint32 `protobuf:"varint,2,opt,name=feedback_id,json=feedbackId" json:"feedback_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_S_FEED_BACK) Reset()                    { *m = CMD_GR_S_FEED_BACK{} }
func (m *CMD_GR_S_FEED_BACK) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_FEED_BACK) ProtoMessage()               {}
func (*CMD_GR_S_FEED_BACK) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{154} }

func (m *CMD_GR_S_FEED_BACK) GetResultType() uint32 {
	if m != nil && m.ResultType != nil {
		return *m.ResultType
	}
	return 0
}

func (m *CMD_GR_S_FEED_BACK) GetFeedbackId() uint32 {
	if m != nil && m.FeedbackId != nil {
		return *m.FeedbackId
	}
	return 0
}

type CMD_GR_C_FEED_BACK_REQUEST struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_C_FEED_BACK_REQUEST) Reset()                    { *m = CMD_GR_C_FEED_BACK_REQUEST{} }
func (m *CMD_GR_C_FEED_BACK_REQUEST) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_FEED_BACK_REQUEST) ProtoMessage()               {}
func (*CMD_GR_C_FEED_BACK_REQUEST) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{155} }

func (m *CMD_GR_C_FEED_BACK_REQUEST) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type CMD_GR_S_FEED_BACK_REQUEST struct {
	UserId           *uint32                                        `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Infos            []*CMD_GR_S_FEED_BACK_REQUESTTagFeedbackInfoGR `protobuf:"bytes,2,rep,name=infos" json:"infos,omitempty"`
	XXX_unrecognized []byte                                         `json:"-"`
}

func (m *CMD_GR_S_FEED_BACK_REQUEST) Reset()                    { *m = CMD_GR_S_FEED_BACK_REQUEST{} }
func (m *CMD_GR_S_FEED_BACK_REQUEST) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_S_FEED_BACK_REQUEST) ProtoMessage()               {}
func (*CMD_GR_S_FEED_BACK_REQUEST) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{156} }

func (m *CMD_GR_S_FEED_BACK_REQUEST) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_S_FEED_BACK_REQUEST) GetInfos() []*CMD_GR_S_FEED_BACK_REQUESTTagFeedbackInfoGR {
	if m != nil {
		return m.Infos
	}
	return nil
}

type CMD_GR_S_FEED_BACK_REQUESTTagFeedbackInfoGR struct {
	FeedbackContent []byte  `protobuf:"bytes,1,opt,name=feedback_content,json=feedbackContent" json:"feedback_content,omitempty"`
	FeedbackDate    *uint64 `protobuf:"varint,2,opt,name=feedback_date,json=feedbackDate" json:"feedback_date,omitempty"`
	RevertUserId    *uint32 `protobuf:"varint,3,opt,name=revert_user_id,json=revertUserId" json:"revert_user_id,omitempty"`
	// optional bytes	revert_content = 4;
	RevertDate       *uint64 `protobuf:"varint,5,opt,name=revert_date,json=revertDate" json:"revert_date,omitempty"`
	Status           *uint32 `protobuf:"varint,6,opt,name=status" json:"status,omitempty"`
	FeedbackId       *uint32 `protobuf:"varint,7,opt,name=feedback_id,json=feedbackId" json:"feedback_id,omitempty"`
	IsRate           *uint32 `protobuf:"varint,8,opt,name=is_rate,json=isRate" json:"is_rate,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_S_FEED_BACK_REQUESTTagFeedbackInfoGR) Reset() {
	*m = CMD_GR_S_FEED_BACK_REQUESTTagFeedbackInfoGR{}
}
func (m *CMD_GR_S_FEED_BACK_REQUESTTagFeedbackInfoGR) String() string {
	return proto.CompactTextString(m)
}
func (*CMD_GR_S_FEED_BACK_REQUESTTagFeedbackInfoGR) ProtoMessage() {}
func (*CMD_GR_S_FEED_BACK_REQUESTTagFeedbackInfoGR) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{156, 0}
}

func (m *CMD_GR_S_FEED_BACK_REQUESTTagFeedbackInfoGR) GetFeedbackContent() []byte {
	if m != nil {
		return m.FeedbackContent
	}
	return nil
}

func (m *CMD_GR_S_FEED_BACK_REQUESTTagFeedbackInfoGR) GetFeedbackDate() uint64 {
	if m != nil && m.FeedbackDate != nil {
		return *m.FeedbackDate
	}
	return 0
}

func (m *CMD_GR_S_FEED_BACK_REQUESTTagFeedbackInfoGR) GetRevertUserId() uint32 {
	if m != nil && m.RevertUserId != nil {
		return *m.RevertUserId
	}
	return 0
}

func (m *CMD_GR_S_FEED_BACK_REQUESTTagFeedbackInfoGR) GetRevertDate() uint64 {
	if m != nil && m.RevertDate != nil {
		return *m.RevertDate
	}
	return 0
}

func (m *CMD_GR_S_FEED_BACK_REQUESTTagFeedbackInfoGR) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *CMD_GR_S_FEED_BACK_REQUESTTagFeedbackInfoGR) GetFeedbackId() uint32 {
	if m != nil && m.FeedbackId != nil {
		return *m.FeedbackId
	}
	return 0
}

func (m *CMD_GR_S_FEED_BACK_REQUESTTagFeedbackInfoGR) GetIsRate() uint32 {
	if m != nil && m.IsRate != nil {
		return *m.IsRate
	}
	return 0
}

type CMD_GR_C_FEED_BACK_UPDATE struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	FeedbackId       *uint32 `protobuf:"varint,2,opt,name=feedback_id,json=feedbackId" json:"feedback_id,omitempty"`
	ImageUrl         []byte  `protobuf:"bytes,3,opt,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_C_FEED_BACK_UPDATE) Reset()                    { *m = CMD_GR_C_FEED_BACK_UPDATE{} }
func (m *CMD_GR_C_FEED_BACK_UPDATE) String() string            { return proto.CompactTextString(m) }
func (*CMD_GR_C_FEED_BACK_UPDATE) ProtoMessage()               {}
func (*CMD_GR_C_FEED_BACK_UPDATE) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{157} }

func (m *CMD_GR_C_FEED_BACK_UPDATE) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_C_FEED_BACK_UPDATE) GetFeedbackId() uint32 {
	if m != nil && m.FeedbackId != nil {
		return *m.FeedbackId
	}
	return 0
}

func (m *CMD_GR_C_FEED_BACK_UPDATE) GetImageUrl() []byte {
	if m != nil {
		return m.ImageUrl
	}
	return nil
}

type CMD_GR_C_FEED_BACK_REQUEST_CONTENT struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	FeedbackId       *uint32 `protobuf:"varint,2,opt,name=feedback_id,json=feedbackId" json:"feedback_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_C_FEED_BACK_REQUEST_CONTENT) Reset()         { *m = CMD_GR_C_FEED_BACK_REQUEST_CONTENT{} }
func (m *CMD_GR_C_FEED_BACK_REQUEST_CONTENT) String() string { return proto.CompactTextString(m) }
func (*CMD_GR_C_FEED_BACK_REQUEST_CONTENT) ProtoMessage()    {}
func (*CMD_GR_C_FEED_BACK_REQUEST_CONTENT) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{158}
}

func (m *CMD_GR_C_FEED_BACK_REQUEST_CONTENT) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_C_FEED_BACK_REQUEST_CONTENT) GetFeedbackId() uint32 {
	if m != nil && m.FeedbackId != nil {
		return *m.FeedbackId
	}
	return 0
}

type CMD_GR_S_FEED_BACK_REQUEST_CONTENT struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	FeedbackId       *uint32 `protobuf:"varint,2,opt,name=feedback_id,json=feedbackId" json:"feedback_id,omitempty"`
	RevertContent    []byte  `protobuf:"bytes,3,opt,name=revert_content,json=revertContent" json:"revert_content,omitempty"`
	RevertImageUrl   []byte  `protobuf:"bytes,4,opt,name=revert_image_url,json=revertImageUrl" json:"revert_image_url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMD_GR_S_FEED_BACK_REQUEST_CONTENT) Reset()         { *m = CMD_GR_S_FEED_BACK_REQUEST_CONTENT{} }
func (m *CMD_GR_S_FEED_BACK_REQUEST_CONTENT) String() string { return proto.CompactTextString(m) }
func (*CMD_GR_S_FEED_BACK_REQUEST_CONTENT) ProtoMessage()    {}
func (*CMD_GR_S_FEED_BACK_REQUEST_CONTENT) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{159}
}

func (m *CMD_GR_S_FEED_BACK_REQUEST_CONTENT) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CMD_GR_S_FEED_BACK_REQUEST_CONTENT) GetFeedbackId() uint32 {
	if m != nil && m.FeedbackId != nil {
		return *m.FeedbackId
	}
	return 0
}

func (m *CMD_GR_S_FEED_BACK_REQUEST_CONTENT) GetRevertContent() []byte {
	if m != nil {
		return m.RevertContent
	}
	return nil
}

func (m *CMD_GR_S_FEED_BACK_REQUEST_CONTENT) GetRevertImageUrl() []byte {
	if m != nil {
		return m.RevertImageUrl
	}
	return nil
}

func init() {
	proto.RegisterType((*CMD_GR_LogonUserID)(nil), "CMD.CMD_GR_LogonUserID")
	proto.RegisterType((*CMD_GR_LogonMobile)(nil), "CMD.CMD_GR_LogonMobile")
	proto.RegisterType((*CMD_GR_LogonAccounts)(nil), "CMD.CMD_GR_LogonAccounts")
	proto.RegisterType((*CMD_GR_LogonSuccess)(nil), "CMD.CMD_GR_LogonSuccess")
	proto.RegisterType((*CMD_GR_LogonFailure)(nil), "CMD.CMD_GR_LogonFailure")
	proto.RegisterType((*CMD_GR_C_CreateTable)(nil), "CMD.CMD_GR_C_CreateTable")
	proto.RegisterType((*CMD_GR_S_CreateTable)(nil), "CMD.CMD_GR_S_CreateTable")
	proto.RegisterType((*CMD_GR_C_CreateGuildTable)(nil), "CMD.CMD_GR_C_CreateGuildTable")
	proto.RegisterType((*CMD_GR_S_CreateGuildTable)(nil), "CMD.CMD_GR_S_CreateGuildTable")
	proto.RegisterType((*CMD_GR_UpdateNotify)(nil), "CMD.CMD_GR_UpdateNotify")
	proto.RegisterType((*TagColumnItem)(nil), "CMD.tagColumnItem")
	proto.RegisterType((*CMD_GR_ConfigColumn)(nil), "CMD.CMD_GR_ConfigColumn")
	proto.RegisterType((*CMD_GR_ConfigServer)(nil), "CMD.CMD_GR_ConfigServer")
	proto.RegisterType((*TagPropertyInfo)(nil), "CMD.tagPropertyInfo")
	proto.RegisterType((*CMD_GR_ConfigProperty)(nil), "CMD.CMD_GR_ConfigProperty")
	proto.RegisterType((*CMD_GR_ConfigUserRight)(nil), "CMD.CMD_GR_ConfigUserRight")
	proto.RegisterType((*CMD_GR_UserLookon)(nil), "CMD.CMD_GR_UserLookon")
	proto.RegisterType((*CMD_GR_UserSitDown)(nil), "CMD.CMD_GR_UserSitDown")
	proto.RegisterType((*CMD_GR_UserStandUp)(nil), "CMD.CMD_GR_UserStandUp")
	proto.RegisterType((*CMD_GR_S_UserStandUp)(nil), "CMD.CMD_GR_S_UserStandUp")
	proto.RegisterType((*CMD_GR_UserInvite)(nil), "CMD.CMD_GR_UserInvite")
	proto.RegisterType((*CMD_GR_UserInviteReq)(nil), "CMD.CMD_GR_UserInviteReq")
	proto.RegisterType((*TagUserScore)(nil), "CMD.tagUserScore")
	proto.RegisterType((*CMD_GR_UserScore)(nil), "CMD.CMD_GR_UserScore")
	proto.RegisterType((*CMD_GR_OtherScore)(nil), "CMD.CMD_GR_OtherScore")
	proto.RegisterType((*CMD_GR_UserLevUp)(nil), "CMD.CMD_GR_UserLevUp")
	proto.RegisterType((*TagMobileUserScore)(nil), "CMD.tagMobileUserScore")
	proto.RegisterType((*CMD_GR_MobileUserScore)(nil), "CMD.CMD_GR_MobileUserScore")
	proto.RegisterType((*TagUserStatus)(nil), "CMD.tagUserStatus")
	proto.RegisterType((*CMD_GR_UserStatus)(nil), "CMD.CMD_GR_UserStatus")
	proto.RegisterType((*CMD_GR_RequestFailure)(nil), "CMD.CMD_GR_RequestFailure")
	proto.RegisterType((*CMD_GR_C_UserChat)(nil), "CMD.CMD_GR_C_UserChat")
	proto.RegisterType((*CMD_GR_S_UserChat)(nil), "CMD.CMD_GR_S_UserChat")
	proto.RegisterType((*CMD_GR_C_UserExpression)(nil), "CMD.CMD_GR_C_UserExpression")
	proto.RegisterType((*CMD_GR_S_UserExpression)(nil), "CMD.CMD_GR_S_UserExpression")
	proto.RegisterType((*CMD_GR_C_WisperChat)(nil), "CMD.CMD_GR_C_WisperChat")
	proto.RegisterType((*CMD_GR_S_WisperChat)(nil), "CMD.CMD_GR_S_WisperChat")
	proto.RegisterType((*CMD_GR_C_WisperExpression)(nil), "CMD.CMD_GR_C_WisperExpression")
	proto.RegisterType((*CMD_GR_S_WisperExpression)(nil), "CMD.CMD_GR_S_WisperExpression")
	proto.RegisterType((*CMD_GR_ColloquyChat)(nil), "CMD.CMD_GR_ColloquyChat")
	proto.RegisterType((*CMD_GR_C_InviteUser)(nil), "CMD.CMD_GR_C_InviteUser")
	proto.RegisterType((*CMD_GR_S_InviteUser)(nil), "CMD.CMD_GR_S_InviteUser")
	proto.RegisterType((*CMD_GR_C_PropertyBuy)(nil), "CMD.CMD_GR_C_PropertyBuy")
	proto.RegisterType((*CMD_GR_S_PropertySuccess)(nil), "CMD.CMD_GR_S_PropertySuccess")
	proto.RegisterType((*CMD_GR_PropertyFailure)(nil), "CMD.CMD_GR_PropertyFailure")
	proto.RegisterType((*CMD_GR_S_PropertyMessage)(nil), "CMD.CMD_GR_S_PropertyMessage")
	proto.RegisterType((*CMD_GR_S_PropertyEffect)(nil), "CMD.CMD_GR_S_PropertyEffect")
	proto.RegisterType((*CMD_GR_C_SendTrumpet)(nil), "CMD.CMD_GR_C_SendTrumpet")
	proto.RegisterType((*CMD_GR_S_SendTrumpet)(nil), "CMD.CMD_GR_S_SendTrumpet")
	proto.RegisterType((*CMD_GR_UserRepulseSit)(nil), "CMD.CMD_GR_UserRepulseSit")
	proto.RegisterType((*CMD_GR_UserRule)(nil), "CMD.CMD_GR_UserRule")
	proto.RegisterType((*CMD_GR_UserInfoReq)(nil), "CMD.CMD_GR_UserInfoReq")
	proto.RegisterType((*CMD_GR_ChairUserInfoReq)(nil), "CMD.CMD_GR_ChairUserInfoReq")
	proto.RegisterType((*TagTableStatus)(nil), "CMD.tagTableStatus")
	proto.RegisterType((*CMD_GR_TableInfo)(nil), "CMD.CMD_GR_TableInfo")
	proto.RegisterType((*CMD_GR_TableStatus)(nil), "CMD.CMD_GR_TableStatus")
	proto.RegisterType((*CMD_GR_C_QueryInsureInfoRequest)(nil), "CMD.CMD_GR_C_QueryInsureInfoRequest")
	proto.RegisterType((*CMD_GR_C_SaveScoreRequest)(nil), "CMD.CMD_GR_C_SaveScoreRequest")
	proto.RegisterType((*CMD_GR_C_TakeScoreRequest)(nil), "CMD.CMD_GR_C_TakeScoreRequest")
	proto.RegisterType((*CMD_GP_C_TransferScoreRequest)(nil), "CMD.CMD_GP_C_TransferScoreRequest")
	proto.RegisterType((*CMD_MB_C_ModifyInsurePass)(nil), "CMD.CMD_MB_C_ModifyInsurePass")
	proto.RegisterType((*CMD_MB_C_UserTransferScore)(nil), "CMD.CMD_MB_C_UserTransferScore")
	proto.RegisterType((*CMD_MB_C_InsureRecord_Get)(nil), "CMD.CMD_MB_C_InsureRecord_Get")
	proto.RegisterType((*CMD_MB_S_InsureRecord_Back)(nil), "CMD.CMD_MB_S_InsureRecord_Back")
	proto.RegisterType((*CMD_GR_C_QueryUserInfoRequest)(nil), "CMD.CMD_GR_C_QueryUserInfoRequest")
	proto.RegisterType((*CMD_GR_S_UserInsureInfo)(nil), "CMD.CMD_GR_S_UserInsureInfo")
	proto.RegisterType((*CMD_GR_S_UserInsureSuccess)(nil), "CMD.CMD_GR_S_UserInsureSuccess")
	proto.RegisterType((*CMD_GR_S_UserInsureFailure)(nil), "CMD.CMD_GR_S_UserInsureFailure")
	proto.RegisterType((*CMD_GR_S_UserTransferUserInfo)(nil), "CMD.CMD_GR_S_UserTransferUserInfo")
	proto.RegisterType((*CMD_GR_SendWarning)(nil), "CMD.CMD_GR_SendWarning")
	proto.RegisterType((*CMD_GR_SendMessage)(nil), "CMD.CMD_GR_SendMessage")
	proto.RegisterType((*CMD_GR_LookUserIP)(nil), "CMD.CMD_GR_LookUserIP")
	proto.RegisterType((*CMD_GR_KickUser)(nil), "CMD.CMD_GR_KickUser")
	proto.RegisterType((*CMD_GR_LimitAccounts)(nil), "CMD.CMD_GR_LimitAccounts")
	proto.RegisterType((*CMD_GR_SetUserRight)(nil), "CMD.CMD_GR_SetUserRight")
	proto.RegisterType((*TagServerOptionInfo)(nil), "CMD.tagServerOptionInfo")
	proto.RegisterType((*CMD_GR_OptionCurrent)(nil), "CMD.CMD_GR_OptionCurrent")
	proto.RegisterType((*CMD_GR_ServerOption)(nil), "CMD.CMD_GR_ServerOption")
	proto.RegisterType((*CMD_GR_KickAllUser)(nil), "CMD.CMD_GR_KickAllUser")
	proto.RegisterType((*CMD_GR_DismissGame)(nil), "CMD.CMD_GR_DismissGame")
	proto.RegisterType((*CMD_GR_S_MATCH_FEE)(nil), "CMD.CMD_GR_S_MATCH_FEE")
	proto.RegisterType((*CMD_GR_S_MATCH_FEE_FAIL)(nil), "CMD.CMD_GR_S_MATCH_FEE_FAIL")
	proto.RegisterType((*CMD_GR_S_Match_Wait_Tip)(nil), "CMD.CMD_GR_S_Match_Wait_Tip")
	proto.RegisterType((*TagMatchEndRank)(nil), "CMD.tagMatchEndRank")
	proto.RegisterType((*CMD_GR_S_MatchResult)(nil), "CMD.CMD_GR_S_MatchResult")
	proto.RegisterType((*TagMatchUserInfo)(nil), "CMD.tagMatchUserInfo")
	proto.RegisterType((*CMD_GR_S_MatchStatus)(nil), "CMD.CMD_GR_S_MatchStatus")
	proto.RegisterType((*TagMatchUserRank)(nil), "CMD.tagMatchUserRank")
	proto.RegisterType((*CMD_GR_S_MatchRank)(nil), "CMD.CMD_GR_S_MatchRank")
	proto.RegisterType((*CMD_GF_GameOption)(nil), "CMD.CMD_GF_GameOption")
	proto.RegisterType((*CMD_C_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME)(nil), "CMD.CMD_C_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME")
	proto.RegisterType((*CMD_S_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME)(nil), "CMD.CMD_S_GET_ONLINE_GIFT_CHECK_GET_FOR_GAME")
	proto.RegisterType((*CMD_GF_LookonConfig)(nil), "CMD.CMD_GF_LookonConfig")
	proto.RegisterType((*CMD_GF_LookonStatus)(nil), "CMD.CMD_GF_LookonStatus")
	proto.RegisterType((*CMD_GF_GameStatus)(nil), "CMD.CMD_GF_GameStatus")
	proto.RegisterType((*CMD_GF_C_UserChat)(nil), "CMD.CMD_GF_C_UserChat")
	proto.RegisterType((*CMD_GF_S_UserChat)(nil), "CMD.CMD_GF_S_UserChat")
	proto.RegisterType((*CMD_GF_S_ServerUserInfo)(nil), "CMD.CMD_GF_S_ServerUserInfo")
	proto.RegisterType((*CMD_CF_S_UserSkill)(nil), "CMD.CMD_CF_S_UserSkill")
	proto.RegisterType((*CMD_GF_C_UserExpression)(nil), "CMD.CMD_GF_C_UserExpression")
	proto.RegisterType((*CMD_GF_S_UserExpression)(nil), "CMD.CMD_GF_S_UserExpression")
	proto.RegisterType((*CMD_CR_SystemMessage)(nil), "CMD.CMD_CR_SystemMessage")
	proto.RegisterType((*TagUserInfoHead)(nil), "CMD.tagUserInfoHead")
	proto.RegisterType((*CMD_GR_UserEnter)(nil), "CMD.CMD_GR_UserEnter")
	proto.RegisterType((*CMD_GR_OptionServer)(nil), "CMD.CMD_GR_OptionServer")
	proto.RegisterType((*CMD_GR_LimitUserChat)(nil), "CMD.CMD_GR_LimitUserChat")
	proto.RegisterType((*CMD_MB_S2C_Refresh_One_Day_For_Game)(nil), "CMD.CMD_MB_S2C_Refresh_One_Day_For_Game")
	proto.RegisterType((*CMD_GR_Bind_Result)(nil), "CMD.CMD_GR_Bind_Result")
	proto.RegisterType((*CMD_GR_Refresh_VIP_Back)(nil), "CMD.CMD_GR_Refresh_VIP_Back")
	proto.RegisterType((*CMD_C_GAME_HEART_C2G)(nil), "CMD.CMD_C_GAME_HEART_C2G")
	proto.RegisterType((*TagGameGiftPackageInfo_GS)(nil), "CMD.tagGameGiftPackageInfo_GS")
	proto.RegisterType((*CMD_C_MY_GIFT_PACK_GS)(nil), "CMD.CMD_C_MY_GIFT_PACK_GS")
	proto.RegisterType((*CMD_S_MY_GIFT_PACK_BACK_GS)(nil), "CMD.CMD_S_MY_GIFT_PACK_BACK_GS")
	proto.RegisterType((*CMD_C_TOMORROW_PACKAGE)(nil), "CMD.CMD_C_TOMORROW_PACKAGE")
	proto.RegisterType((*CMD_S_TOMORROW_PACKAGE)(nil), "CMD.CMD_S_TOMORROW_PACKAGE")
	proto.RegisterType((*TagGameSkill)(nil), "CMD.tagGameSkill")
	proto.RegisterType((*CMD_S_GAME_SKILL)(nil), "CMD.CMD_S_GAME_SKILL")
	proto.RegisterType((*CMD_S_RED_ENVELOPE)(nil), "CMD.CMD_S_RED_ENVELOPE")
	proto.RegisterType((*TagBetResultData)(nil), "CMD.tagBetResultData")
	proto.RegisterType((*CMD_S_BET_RESULT)(nil), "CMD.CMD_S_BET_RESULT")
	proto.RegisterType((*CMD_S_USER_MESSAGE)(nil), "CMD.CMD_S_USER_MESSAGE")
	proto.RegisterType((*CMD_CF_S_UserScore)(nil), "CMD.CMD_CF_S_UserScore")
	proto.RegisterType((*CMD_S_GM_USER_LIST_GET)(nil), "CMD.CMD_S_GM_USER_LIST_GET")
	proto.RegisterType((*CMD_S_GM_USER_LIST)(nil), "CMD.CMD_S_GM_USER_LIST")
	proto.RegisterType((*CMD_GR_C_REQUEST_ARENA)(nil), "CMD.CMD_GR_C_REQUEST_ARENA")
	proto.RegisterType((*CMD_GR_S_REQUEST_ARENA)(nil), "CMD.CMD_GR_S_REQUEST_ARENA")
	proto.RegisterType((*CMD_GR_C_START_ARENA)(nil), "CMD.CMD_GR_C_START_ARENA")
	proto.RegisterType((*CMD_GR_S_START_ARENA)(nil), "CMD.CMD_GR_S_START_ARENA")
	proto.RegisterType((*CMD_GF_S_Update_UserScore)(nil), "CMD.CMD_GF_S_Update_UserScore")
	proto.RegisterType((*CMD_GR_S_SITDOWN_SUCCESS)(nil), "CMD.CMD_GR_S_SITDOWN_SUCCESS")
	proto.RegisterType((*CMD_CF_S_UserMasterTaskGuideInfo)(nil), "CMD.CMD_CF_S_UserMasterTaskGuideInfo")
	proto.RegisterType((*CMD_CF_S_UserCompletedTaskGuidID)(nil), "CMD.CMD_CF_S_UserCompletedTaskGuidID")
	proto.RegisterType((*CMD_CF_C_UserMasterTaskGuideInfo)(nil), "CMD.CMD_CF_C_UserMasterTaskGuideInfo")
	proto.RegisterType((*CMD_C_DRAW_KILLER_PRIZE)(nil), "CMD.CMD_C_DRAW_KILLER_PRIZE")
	proto.RegisterType((*TagPersonalPrizePoolReward)(nil), "CMD.tagPersonalPrizePoolReward")
	proto.RegisterType((*CMD_S_DRAW_KILLER_PRIZE)(nil), "CMD.CMD_S_DRAW_KILLER_PRIZE")
	proto.RegisterType((*CMD_GR_C_WORLD_BOSS_ACTIVITY_CONFIG_LIST)(nil), "CMD.CMD_GR_C_WORLD_BOSS_ACTIVITY_CONFIG_LIST")
	proto.RegisterType((*CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST)(nil), "CMD.CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST")
	proto.RegisterType((*CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST_OpenLog)(nil), "CMD.CMD_GR_S_WORLD_BOSS_ACTIVITY_CONFIG_LIST.OpenLog")
	proto.RegisterType((*CMD_GR_C_WORLD_BOSS_ACTIVITY_LAST_RANKING)(nil), "CMD.CMD_GR_C_WORLD_BOSS_ACTIVITY_LAST_RANKING")
	proto.RegisterType((*CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING)(nil), "CMD.CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING")
	proto.RegisterType((*CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING_WorldBossUserRank)(nil), "CMD.CMD_GR_S_WORLD_BOSS_ACTIVITY_LAST_RANKING.WorldBossUserRank")
	proto.RegisterType((*CMD_GR_C_RECHANGE_ITEM)(nil), "CMD.CMD_GR_C_RECHANGE_ITEM")
	proto.RegisterType((*CMD_GR_S_RECHANGE_ITEM)(nil), "CMD.CMD_GR_S_RECHANGE_ITEM")
	proto.RegisterType((*CMD_GR_C_SAVING_POT_INFO)(nil), "CMD.CMD_GR_C_SAVING_POT_INFO")
	proto.RegisterType((*CMD_GR_S_SAVING_POT_INFO)(nil), "CMD.CMD_GR_S_SAVING_POT_INFO")
	proto.RegisterType((*CMD_GR_C_SAVING_POT_GOT)(nil), "CMD.CMD_GR_C_SAVING_POT_GOT")
	proto.RegisterType((*CMD_GR_S_SAVING_POT_GOT)(nil), "CMD.CMD_GR_S_SAVING_POT_GOT")
	proto.RegisterType((*CMD_GR_C_GIVE_ITEM)(nil), "CMD.CMD_GR_C_GIVE_ITEM")
	proto.RegisterType((*CMD_GR_S_GIVE_ITEM)(nil), "CMD.CMD_GR_S_GIVE_ITEM")
	proto.RegisterType((*CMD_GR_C_GIVE_NICKNAME)(nil), "CMD.CMD_GR_C_GIVE_NICKNAME")
	proto.RegisterType((*CMD_GR_S_GIVE_NICKNAME)(nil), "CMD.CMD_GR_S_GIVE_NICKNAME")
	proto.RegisterType((*CMD_GR_C_PRINT_POINT_LOG)(nil), "CMD.CMD_GR_C_PRINT_POINT_LOG")
	proto.RegisterType((*CMD_GR_C_NEWPLAYER_INFO)(nil), "CMD.CMD_GR_C_NEWPLAYER_INFO")
	proto.RegisterType((*CMD_GR_S_USER_BONUS_MISSION_REWARD)(nil), "CMD.CMD_GR_S_USER_BONUS_MISSION_REWARD")
	proto.RegisterType((*CMD_GR_C_FEED_BACK)(nil), "CMD.CMD_GR_C_FEED_BACK")
	proto.RegisterType((*CMD_GR_S_FEED_BACK)(nil), "CMD.CMD_GR_S_FEED_BACK")
	proto.RegisterType((*CMD_GR_C_FEED_BACK_REQUEST)(nil), "CMD.CMD_GR_C_FEED_BACK_REQUEST")
	proto.RegisterType((*CMD_GR_S_FEED_BACK_REQUEST)(nil), "CMD.CMD_GR_S_FEED_BACK_REQUEST")
	proto.RegisterType((*CMD_GR_S_FEED_BACK_REQUESTTagFeedbackInfoGR)(nil), "CMD.CMD_GR_S_FEED_BACK_REQUEST.tagFeedbackInfoGR")
	proto.RegisterType((*CMD_GR_C_FEED_BACK_UPDATE)(nil), "CMD.CMD_GR_C_FEED_BACK_UPDATE")
	proto.RegisterType((*CMD_GR_C_FEED_BACK_REQUEST_CONTENT)(nil), "CMD.CMD_GR_C_FEED_BACK_REQUEST_CONTENT")
	proto.RegisterType((*CMD_GR_S_FEED_BACK_REQUEST_CONTENT)(nil), "CMD.CMD_GR_S_FEED_BACK_REQUEST_CONTENT")
	proto.RegisterEnum("CMD.CMD_GR_C_PRINT_POINT_LOG_PointType", CMD_GR_C_PRINT_POINT_LOG_PointType_name, CMD_GR_C_PRINT_POINT_LOG_PointType_value)
}

func init() { proto.RegisterFile("CMD_GameServer.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 7282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x7c, 0xdd, 0x6f, 0x63, 0xc9,
	0x75, 0x27, 0x48, 0x8a, 0x12, 0x55, 0x24, 0x25, 0x35, 0xa7, 0xa7, 0x47, 0xdd, 0x3d, 0x3d, 0xdd,
	0x7d, 0x67, 0x7a, 0xa6, 0x3d, 0xeb, 0x9d, 0x9d, 0xe9, 0xf1, 0xc7, 0x7a, 0xd7, 0x86, 0xad, 0xa6,
	0x28, 0x0d, 0x77, 0x24, 0x8a, 0x73, 0x49, 0x75, 0xef, 0xac, 0x61, 0x5f, 0x97, 0x78, 0x4b, 0xd4,
	0x5d, 0x5d, 0xde, 0xcb, 0xbe, 0x1f, 0xfa, 0xf0, 0x2e, 0x9c, 0xc4, 0x01, 0x1c, 0xe4, 0x25, 0x48,
	0xf2, 0x60, 0xd8, 0xc8, 0x77, 0x82, 0x04, 0x01, 0x02, 0x38, 0x08, 0xf2, 0xf1, 0x64, 0x23, 0x41,
	0x1e, 0x9d, 0x20, 0x41, 0x90, 0xb7, 0x7c, 0x20, 0x7e, 0xce, 0xbf, 0x90, 0x04, 0x09, 0xce, 0x39,
	0x55, 0x75, 0xeb, 0x52, 0x14, 0x9b, 0xd3, 0x9e, 0x71, 0xe0, 0x17, 0x41, 0xf5, 0xab, 0x73, 0xab,
	0x4e, 0x55, 0x9d, 0x3a, 0x75, 0xce, 0xa9, 0x53, 0x64, 0x57, 0x9b, 0xbb, 0x9b, 0xce, 0x36, 0x1f,
	0x89, 0x9e, 0x88, 0x4e, 0x44, 0xf4, 0xc6, 0x38, 0x0a, 0x93, 0xb0, 0x51, 0x6a, 0xee, 0x6e, 0xde,
	0x58, 0x83, 0xaa, 0x66, 0x38, 0x1a, 0x85, 0x01, 0xc1, 0xd6, 0x3f, 0x96, 0x58, 0x03, 0xe9, 0x6d,
	0x67, 0x27, 0x1c, 0x86, 0xc1, 0x7e, 0x2c, 0xa2, 0xf6, 0x66, 0xe3, 0x65, 0x56, 0x1f, 0xfb, 0xfc,
	0xab, 0xdc, 0x39, 0x11, 0x51, 0xec, 0x85, 0xc1, 0x7a, 0xe1, 0x4e, 0xe1, 0x7e, 0xdd, 0xae, 0x21,
	0xf8, 0x88, 0x30, 0x20, 0x3a, 0x8c, 0xf8, 0x48, 0x68, 0xa2, 0x22, 0x11, 0x21, 0xa8, 0x88, 0x5e,
	0x63, 0xab, 0xe3, 0x28, 0x1c, 0x88, 0x38, 0xd6, 0x64, 0x25, 0x24, 0x5b, 0x91, 0xb0, 0x22, 0xbc,
	0xcd, 0xaa, 0x03, 0xdf, 0x13, 0x41, 0xe2, 0x24, 0xe7, 0x63, 0xb1, 0xbe, 0x70, 0xa7, 0x70, 0xbf,
	0x6c, 0x33, 0x82, 0xfa, 0xe7, 0x63, 0xd1, 0x78, 0x81, 0x2d, 0xa5, 0xb1, 0x88, 0x1c, 0xcf, 0x5d,
	0x2f, 0x63, 0x0b, 0x8b, 0x50, 0x6c, 0xbb, 0x8d, 0x1b, 0xac, 0x32, 0xe6, 0x71, 0x7c, 0x1a, 0x46,
	0xee, 0xfa, 0xe2, 0x9d, 0xc2, 0xfd, 0x9a, 0xad, 0xcb, 0x8d, 0x5b, 0x8c, 0x8d, 0xf8, 0xe0, 0xc8,
	0x0b, 0x04, 0x7c, 0xb7, 0x84, 0xb5, 0xcb, 0x12, 0x69, 0xbb, 0xd0, 0xe6, 0xb1, 0x17, 0xb8, 0x50,
	0x57, 0xc1, 0x0e, 0x17, 0xa1, 0x48, 0x15, 0xde, 0xd8, 0xe1, 0xae, 0x1b, 0xad, 0x2f, 0xe3, 0x47,
	0x8b, 0xde, 0x78, 0xc3, 0x75, 0xa3, 0xc6, 0x5d, 0x56, 0x73, 0xbd, 0x64, 0x70, 0xe4, 0x04, 0xe9,
	0xe8, 0x40, 0x44, 0xeb, 0x0c, 0x3f, 0xab, 0x22, 0xd6, 0x41, 0x08, 0x46, 0xe2, 0x8a, 0x13, 0x6f,
	0x20, 0x68, 0x24, 0x55, 0xfc, 0x9e, 0x11, 0x84, 0x23, 0xb9, 0xcb, 0x6a, 0x63, 0x3e, 0x38, 0x16,
	0x89, 0xe3, 0x05, 0xae, 0x38, 0x5b, 0xaf, 0xe1, 0x70, 0xaa, 0x84, 0xb5, 0x01, 0x02, 0xbe, 0xbd,
	0xd8, 0xe1, 0x81, 0x1b, 0x85, 0x9e, 0xbb, 0x5e, 0xbf, 0x53, 0xb8, 0x5f, 0xb1, 0x97, 0xbd, 0x78,
	0x83, 0x00, 0x98, 0xd5, 0x01, 0x0f, 0x82, 0x30, 0x70, 0x46, 0xa9, 0x1f, 0x79, 0x63, 0x5f, 0xac,
	0xaf, 0xd0, 0xac, 0x12, 0xbc, 0x2b, 0x51, 0xeb, 0x97, 0x8b, 0xf9, 0xf5, 0xdd, 0x0d, 0x0f, 0x3c,
	0x1f, 0xe7, 0x72, 0x08, 0x2b, 0xe7, 0xb9, 0xb8, 0xb2, 0x65, 0x7b, 0x11, 0x8a, 0x6d, 0x77, 0xda,
	0x72, 0x15, 0x2f, 0x5b, 0x2e, 0x73, 0x90, 0x25, 0x5a, 0x2e, 0x63, 0x90, 0xf7, 0xd8, 0xca, 0x81,
	0x38, 0xe2, 0x27, 0x5e, 0x18, 0x39, 0x87, 0x3e, 0x1f, 0xc6, 0x72, 0x49, 0xeb, 0x0a, 0xdd, 0x02,
	0xb0, 0x71, 0x9f, 0xad, 0x8d, 0xf9, 0x50, 0x38, 0x09, 0x3f, 0xf0, 0x85, 0x33, 0x08, 0xd3, 0x20,
	0xc1, 0xe5, 0x2d, 0xdb, 0x2b, 0x80, 0xf7, 0x01, 0x6e, 0x02, 0x6a, 0xae, 0xff, 0xe2, 0xa5, 0xeb,
	0xbf, 0x34, 0x73, 0xfd, 0x2b, 0x13, 0xeb, 0x6f, 0xfd, 0xa0, 0x20, 0xb7, 0x8b, 0x9c, 0x9e, 0x8d,
	0x01, 0x72, 0x10, 0xff, 0x67, 0x6c, 0x00, 0x73, 0x18, 0x0b, 0x13, 0xc3, 0xb8, 0xc1, 0x2a, 0x5c,
	0xb2, 0x86, 0xb3, 0x53, 0xb3, 0x75, 0x79, 0x62, 0x88, 0x8b, 0x93, 0x43, 0xfc, 0x5e, 0x81, 0x3d,
	0x67, 0x0e, 0xb1, 0x97, 0x0e, 0xa0, 0x57, 0xf8, 0x0c, 0xa7, 0x33, 0xf2, 0x86, 0x47, 0x89, 0x1c,
	0xde, 0x32, 0x20, 0x36, 0x00, 0x20, 0xa3, 0x23, 0x1e, 0x27, 0x9a, 0x80, 0x86, 0x56, 0x25, 0x8c,
	0x48, 0x6e, 0xb2, 0xe5, 0x40, 0x9c, 0x3a, 0xc3, 0xd4, 0x73, 0x85, 0x1c, 0x53, 0x25, 0x10, 0xa7,
	0xdb, 0x50, 0x86, 0xca, 0x18, 0xf5, 0x0f, 0x30, 0x45, 0x2b, 0x5f, 0x21, 0xa0, 0xed, 0x36, 0x5e,
	0x67, 0x57, 0xa4, 0xf8, 0x06, 0xe9, 0xc8, 0x89, 0x4f, 0x61, 0xf3, 0xc8, 0x55, 0x97, 0x72, 0xdd,
	0x49, 0x47, 0x3d, 0x84, 0xad, 0x51, 0x9e, 0xfd, 0x2d, 0xee, 0xf9, 0x69, 0x24, 0x80, 0x7d, 0x11,
	0x45, 0x61, 0xe4, 0x0c, 0x42, 0x57, 0x48, 0x21, 0x5e, 0x46, 0xa4, 0x19, 0x4e, 0x76, 0x5f, 0x9c,
	0xe8, 0xfe, 0x06, 0xab, 0xb8, 0x22, 0x1e, 0x44, 0xde, 0x01, 0xf1, 0x5d, 0xb3, 0x75, 0xd9, 0x7a,
	0xa0, 0x05, 0xa2, 0xe9, 0x34, 0x23, 0xc1, 0x13, 0x12, 0xc1, 0xdc, 0xea, 0x14, 0xf2, 0xab, 0x63,
	0xd9, 0xfa, 0x9b, 0x5e, 0xee, 0x9b, 0xdb, 0xac, 0x1a, 0x89, 0x38, 0xf5, 0x13, 0x93, 0x49, 0x46,
	0x10, 0x72, 0x79, 0x9d, 0x55, 0x48, 0xee, 0x35, 0x93, 0x4b, 0x58, 0x6e, 0xbb, 0xd6, 0xa7, 0xd8,
	0xf5, 0x09, 0x3e, 0xb6, 0x53, 0xcf, 0x77, 0xa9, 0xe1, 0xeb, 0xac, 0x32, 0x84, 0x52, 0xb6, 0x7f,
	0x97, 0xb0, 0xdc, 0x76, 0xad, 0x48, 0x7f, 0xd7, 0xbb, 0xf8, 0xdd, 0x0f, 0xc1, 0x50, 0xae, 0xcf,
	0x52, 0xbe, 0xcf, 0x3f, 0x2d, 0xea, 0x35, 0xda, 0x1f, 0xbb, 0x3c, 0x11, 0x9d, 0x30, 0xf1, 0x0e,
	0xcf, 0x61, 0x99, 0x47, 0x69, 0x9c, 0x38, 0x29, 0x82, 0x0e, 0xee, 0x1d, 0xd9, 0xe9, 0x2a, 0x54,
	0x10, 0x71, 0x17, 0xe0, 0xc6, 0xc7, 0x59, 0xc3, 0xa4, 0x25, 0xbd, 0x2f, 0x79, 0x58, 0xcb, 0x88,
	0x9b, 0x88, 0x37, 0xde, 0x64, 0x57, 0xb9, 0x8b, 0xda, 0x27, 0x4f, 0x4f, 0x8c, 0x35, 0xa8, 0x2e,
	0xf7, 0xc5, 0x03, 0xf6, 0xfc, 0x20, 0x8d, 0x22, 0x38, 0x5f, 0xf2, 0x1b, 0x7b, 0x01, 0x05, 0xf7,
	0x39, 0x59, 0xd9, 0x35, 0xf7, 0xb7, 0xf1, 0x4d, 0x7e, 0x9f, 0x97, 0x73, 0xdf, 0x6c, 0x99, 0xdb,
	0xfd, 0x13, 0xec, 0x9a, 0xfa, 0x46, 0x1e, 0x67, 0xea, 0x23, 0x52, 0x5a, 0x57, 0x65, 0x2d, 0xb1,
	0x25, 0xbf, 0xb2, 0xce, 0x58, 0x3d, 0xe1, 0xc3, 0x66, 0xe8, 0xa7, 0xa3, 0xa0, 0x9d, 0x88, 0x11,
	0x6c, 0xbf, 0x01, 0x96, 0x9c, 0x53, 0xcf, 0x4d, 0x8e, 0xe4, 0xac, 0x55, 0x09, 0x7b, 0x0c, 0x10,
	0x68, 0x1f, 0x97, 0x27, 0xdc, 0xd1, 0xa2, 0x4c, 0x93, 0x55, 0x03, 0x70, 0x53, 0x62, 0x78, 0xaa,
	0x52, 0x3b, 0x01, 0x1f, 0x29, 0x69, 0x67, 0x04, 0x75, 0xf8, 0x48, 0x58, 0x3d, 0xbd, 0x74, 0xcd,
	0x30, 0x38, 0xf4, 0x24, 0x0f, 0x8d, 0xcf, 0xb2, 0x35, 0xf9, 0x9d, 0x97, 0x88, 0x91, 0xe3, 0x7b,
	0x31, 0xe8, 0x88, 0xd2, 0xfd, 0xea, 0x83, 0xc6, 0x1b, 0xcd, 0xdd, 0xcd, 0x37, 0x72, 0xdc, 0xda,
	0x2b, 0x03, 0xfd, 0xff, 0x8e, 0x17, 0x27, 0xd6, 0xb7, 0x0b, 0x13, 0xad, 0x92, 0x29, 0x02, 0xdc,
	0x98, 0x7a, 0x5e, 0xca, 0x5f, 0x92, 0xe9, 0x78, 0x60, 0xf7, 0x88, 0x7b, 0x91, 0x24, 0x28, 0x4a,
	0x23, 0x00, 0x20, 0x4d, 0x20, 0xf7, 0xb5, 0x79, 0xec, 0x10, 0x84, 0xc7, 0x4e, 0x46, 0x10, 0xa5,
	0xbe, 0x90, 0xab, 0x2b, 0x09, 0xec, 0xd4, 0x17, 0xd6, 0xbf, 0x17, 0xd8, 0x6a, 0xc2, 0x87, 0xdd,
	0x28, 0x1c, 0x8b, 0x28, 0x39, 0x6f, 0x07, 0x87, 0x61, 0xe3, 0x2a, 0x2b, 0xd3, 0x49, 0x4c, 0x1c,
	0x51, 0x01, 0xd5, 0x84, 0x17, 0x9b, 0x9c, 0xe8, 0x72, 0xe3, 0x45, 0xb6, 0xec, 0xc5, 0x71, 0x2a,
	0x36, 0x22, 0xc1, 0x25, 0x17, 0x19, 0x80, 0xa7, 0x87, 0x6c, 0xdf, 0x19, 0x86, 0x3e, 0x29, 0xc0,
	0x92, 0x5d, 0x53, 0xe0, 0x76, 0xe8, 0xbb, 0x39, 0xa2, 0x01, 0x8f, 0x49, 0x01, 0x16, 0x32, 0xa2,
	0x26, 0x8f, 0x8f, 0xe0, 0x78, 0x8c, 0x45, 0xe0, 0x3a, 0x7e, 0x78, 0x22, 0x1c, 0xdf, 0x0b, 0x44,
	0x1c, 0xa3, 0x20, 0x95, 0xec, 0x15, 0xc0, 0x77, 0xc2, 0x13, 0xb1, 0x83, 0x28, 0x50, 0x46, 0x62,
	0x70, 0x92, 0xa3, 0x5c, 0x22, 0x4a, 0xc0, 0x33, 0x4a, 0xeb, 0x8b, 0xec, 0xf9, 0xdc, 0xe2, 0xa8,
	0xa9, 0x68, 0x3c, 0x64, 0x0d, 0xcd, 0x91, 0x17, 0x1c, 0x86, 0xe6, 0xb2, 0x5f, 0x55, 0xcb, 0x6e,
	0x4e, 0x9c, 0xbd, 0x36, 0x36, 0x4a, 0xb8, 0xf4, 0x9f, 0x66, 0xd7, 0x72, 0x8d, 0xef, 0xeb, 0x13,
	0x65, 0xf6, 0x81, 0x63, 0xb5, 0xd9, 0x15, 0xa5, 0x43, 0x62, 0x11, 0xed, 0x84, 0xe1, 0x71, 0x18,
	0xe4, 0xf4, 0x51, 0xe1, 0x82, 0x3e, 0x22, 0x51, 0xc9, 0x54, 0x15, 0x96, 0xdb, 0xae, 0xf5, 0x8d,
	0x82, 0x36, 0x7a, 0xa0, 0xad, 0x9e, 0x97, 0x6c, 0x86, 0xa7, 0xcf, 0xd8, 0x58, 0xe3, 0x25, 0x56,
	0x05, 0x4b, 0x2c, 0x4d, 0x42, 0x27, 0xf6, 0x48, 0xc3, 0x90, 0x29, 0x96, 0x26, 0x61, 0xcf, 0x4b,
	0x66, 0x1d, 0xdb, 0xd6, 0x71, 0x9e, 0x8f, 0x84, 0x07, 0xee, 0xfe, 0xf8, 0x19, 0xf9, 0xb8, 0xcd,
	0xaa, 0x87, 0x61, 0x34, 0x10, 0x8e, 0x2f, 0xf8, 0x89, 0x96, 0x7c, 0x84, 0x76, 0x00, 0xb1, 0xfe,
	0xb7, 0x71, 0x0a, 0x99, 0xdd, 0x3d, 0x55, 0xe9, 0x4f, 0xb4, 0x5c, 0xbc, 0xd0, 0xf2, 0x76, 0x6e,
	0x69, 0xda, 0xc1, 0x89, 0x97, 0x88, 0x59, 0xa3, 0x30, 0x2c, 0xb5, 0xa2, 0x69, 0xa9, 0x59, 0xff,
	0x4b, 0xb3, 0x98, 0x35, 0x64, 0x8b, 0x27, 0xcf, 0xd4, 0xd6, 0xb7, 0x4a, 0xac, 0x96, 0x70, 0x94,
	0xaf, 0xde, 0x20, 0x8c, 0x04, 0x6c, 0xe2, 0x18, 0xfe, 0xc1, 0x16, 0x4a, 0x36, 0x15, 0x1a, 0xeb,
	0x6c, 0xc9, 0x0f, 0x93, 0x44, 0x44, 0xe7, 0xf8, 0x7d, 0xc9, 0x56, 0x45, 0xa0, 0x1f, 0x46, 0x5c,
	0x9a, 0x2e, 0x25, 0x9b, 0x0a, 0x8d, 0x6b, 0x6c, 0xd1, 0x0b, 0xe2, 0x34, 0x12, 0x72, 0xcf, 0xca,
	0x12, 0x18, 0x14, 0xa7, 0x5e, 0x60, 0x18, 0xa8, 0x25, 0xbb, 0x72, 0xea, 0x05, 0xa4, 0x95, 0x6e,
	0x31, 0xe6, 0x87, 0x71, 0x22, 0x6b, 0x69, 0x7f, 0x2e, 0x03, 0xa2, 0xab, 0xdd, 0x88, 0x9f, 0xca,
	0x6a, 0xda, 0x94, 0xcb, 0x80, 0xe8, 0xea, 0x43, 0x5f, 0x28, 0xa5, 0x58, 0xa1, 0x6a, 0x40, 0x74,
	0x35, 0xce, 0xc0, 0x48, 0xb8, 0xdc, 0x47, 0x6f, 0xa4, 0x44, 0xfb, 0x66, 0x17, 0x00, 0x18, 0x86,
	0x2f, 0x4e, 0x84, 0x2f, 0x3d, 0x11, 0x2a, 0x34, 0xd6, 0x58, 0x49, 0x9c, 0x8d, 0xd1, 0xf7, 0x28,
	0xd9, 0xf0, 0x6f, 0xc3, 0x62, 0xf5, 0x41, 0x1a, 0x39, 0x58, 0xed, 0x40, 0x5d, 0x0d, 0xeb, 0xaa,
	0x83, 0x34, 0xda, 0x01, 0xac, 0x75, 0x36, 0x6e, 0xbc, 0xc2, 0x56, 0x02, 0x71, 0x96, 0x18, 0x44,
	0x75, 0x52, 0x5c, 0x80, 0x6a, 0xaa, 0xdb, 0xac, 0x6a, 0x2a, 0x99, 0x15, 0x92, 0x17, 0x3f, 0x53,
	0x30, 0x5f, 0x62, 0x6b, 0xa6, 0xd8, 0xe3, 0x3a, 0x18, 0xeb, 0x58, 0xc8, 0x59, 0xef, 0x6f, 0xca,
	0xe1, 0xd1, 0xda, 0xc1, 0x1a, 0x55, 0x1f, 0x5c, 0x51, 0xca, 0x46, 0x7f, 0x4f, 0x23, 0xc6, 0x7f,
	0xad, 0x87, 0x5a, 0x1c, 0xf7, 0x92, 0xa3, 0xa7, 0xb6, 0xaf, 0xc5, 0xa2, 0x68, 0x88, 0x85, 0xf5,
	0xf7, 0x85, 0x1c, 0x8f, 0x3b, 0xe2, 0x64, 0x7f, 0x3c, 0xb3, 0x0d, 0x9a, 0xe3, 0xe2, 0x94, 0x39,
	0x2e, 0xcd, 0x98, 0xe3, 0x85, 0x79, 0xe6, 0xb8, 0x3c, 0x7d, 0x8e, 0xc7, 0x11, 0xd8, 0x37, 0xc4,
	0x3b, 0x89, 0x14, 0x43, 0x88, 0xc6, 0x0b, 0xc6, 0x77, 0x78, 0x2a, 0xab, 0x49, 0xa4, 0x2a, 0x41,
	0x78, 0x4a, 0x33, 0xf4, 0x27, 0x05, 0xd6, 0x48, 0xf8, 0x90, 0x9c, 0xbd, 0xa7, 0xed, 0x90, 0x9c,
	0x64, 0xd3, 0x1e, 0xbb, 0x4c, 0xb2, 0xc9, 0xc8, 0xbf, 0x54, 0xb2, 0xe9, 0xb0, 0xbd, 0x54, 0xb2,
	0xc9, 0x6a, 0x32, 0x24, 0x5b, 0x4e, 0xe0, 0xa2, 0x9e, 0x40, 0xcb, 0xd3, 0xa7, 0xc7, 0x24, 0xef,
	0x97, 0xae, 0xcd, 0xa7, 0xa6, 0xc8, 0xcf, 0x0b, 0x4a, 0x7e, 0x26, 0x5a, 0x31, 0xa5, 0xe8, 0x10,
	0x4d, 0x2e, 0xa9, 0x28, 0x93, 0x34, 0x7e, 0x76, 0xb5, 0x4c, 0xdd, 0x63, 0x23, 0x4a, 0x2d, 0xa7,
	0xba, 0x59, 0x8b, 0xe7, 0x94, 0xa7, 0xec, 0xeb, 0xd2, 0xd1, 0xbc, 0x9d, 0x6f, 0x8e, 0x86, 0xd3,
	0xc8, 0x6d, 0x07, 0xac, 0xc9, 0x75, 0x61, 0xeb, 0x03, 0xdd, 0x16, 0x4f, 0x52, 0x11, 0x27, 0x73,
	0x3a, 0x49, 0xa6, 0x1f, 0x54, 0x9c, 0xf0, 0x83, 0x7c, 0xcd, 0x76, 0x13, 0x19, 0x6f, 0x1e, 0x71,
	0x5c, 0xcf, 0xc1, 0x11, 0x07, 0x69, 0xf0, 0xc3, 0x48, 0x1d, 0xe1, 0x80, 0x34, 0x01, 0x00, 0xd1,
	0x4e, 0x78, 0x34, 0x14, 0x89, 0x93, 0x57, 0xd9, 0x35, 0x42, 0xf7, 0x69, 0x88, 0x0d, 0xb6, 0x00,
	0x9f, 0x48, 0x5b, 0x14, 0xff, 0xb7, 0xbe, 0x5f, 0xd0, 0xdd, 0xf5, 0xe6, 0xee, 0xee, 0x0e, 0xab,
	0xa1, 0x6d, 0x94, 0xef, 0x8c, 0x01, 0x26, 0xbb, 0xba, 0xc8, 0x50, 0x69, 0x06, 0x43, 0x0b, 0x19,
	0x43, 0xd8, 0x35, 0xc8, 0xfd, 0x09, 0xf7, 0x53, 0x21, 0x77, 0xe8, 0x32, 0x20, 0x8f, 0x00, 0x80,
	0x3d, 0x83, 0xd5, 0x68, 0x84, 0x2e, 0x92, 0x6d, 0x08, 0x00, 0x98, 0xa0, 0xd6, 0x97, 0xd9, 0x0b,
	0xb9, 0xa9, 0x6b, 0x9d, 0x8d, 0x23, 0x11, 0xa3, 0x77, 0x70, 0x8b, 0x31, 0xb4, 0xa7, 0x4d, 0x6b,
	0x73, 0x19, 0x10, 0x8a, 0xfa, 0xcc, 0x35, 0x81, 0xd6, 0x77, 0x0b, 0xba, 0x83, 0xde, 0x07, 0xec,
	0xe0, 0xc3, 0x9a, 0xb2, 0xfc, 0xf4, 0x2c, 0xcc, 0x9c, 0x9e, 0xf2, 0xc4, 0xf4, 0x04, 0x99, 0x6f,
	0xe0, 0x3c, 0xf6, 0xe2, 0xf1, 0x47, 0x2d, 0x5b, 0x3f, 0x9f, 0x39, 0x23, 0xbd, 0x0f, 0xd0, 0xe1,
	0x47, 0x28, 0x5d, 0xd6, 0x57, 0x0c, 0xe7, 0x9e, 0x38, 0xfa, 0xb0, 0x65, 0xe4, 0xeb, 0x05, 0x23,
	0x0e, 0xf0, 0x41, 0xbb, 0xf8, 0x90, 0x86, 0x6e, 0xfd, 0xb9, 0xe9, 0x06, 0xfa, 0x7e, 0xf8, 0x24,
	0x3d, 0xff, 0x70, 0x66, 0xfe, 0x35, 0xb6, 0x3a, 0x08, 0x03, 0x70, 0xac, 0x79, 0xe2, 0x85, 0x41,
	0xd6, 0xff, 0x8a, 0x09, 0xb7, 0xdd, 0xc6, 0x7f, 0x65, 0xcf, 0xe5, 0xf9, 0x24, 0x97, 0x66, 0xe1,
	0x4e, 0xe9, 0x7e, 0xdd, 0x5e, 0x33, 0x99, 0x05, 0xe7, 0x45, 0xaf, 0x55, 0xd9, 0x58, 0x2b, 0xdb,
	0x10, 0x57, 0xb2, 0x58, 0xe1, 0x83, 0x59, 0xa7, 0xc5, 0x53, 0xf9, 0xb7, 0xfe, 0xa7, 0x21, 0x91,
	0x46, 0x9b, 0x17, 0x67, 0xb5, 0x30, 0x65, 0x56, 0xbf, 0x5f, 0x30, 0x42, 0x54, 0xca, 0x1b, 0x7b,
	0x98, 0x9e, 0x37, 0xee, 0xb2, 0x5a, 0x44, 0xfa, 0xdf, 0xe1, 0xe0, 0x96, 0xca, 0x98, 0x81, 0xc4,
	0x94, 0x63, 0x3a, 0x08, 0x83, 0x38, 0x1d, 0x09, 0xe3, 0xbc, 0x2c, 0xdb, 0x35, 0x09, 0xd2, 0x51,
	0xab, 0xa4, 0x23, 0x3b, 0xf3, 0xa5, 0x74, 0xd0, 0xa9, 0x7d, 0x8f, 0xad, 0x18, 0x5e, 0x22, 0x08,
	0x90, 0x0c, 0xec, 0x66, 0xbe, 0xe0, 0x74, 0x39, 0x2d, 0x4f, 0x19, 0xcc, 0x5f, 0x17, 0xd8, 0xba,
	0x9e, 0x0a, 0x35, 0x18, 0x15, 0xa2, 0x9c, 0x63, 0x40, 0x79, 0x5e, 0x8b, 0x4f, 0xe7, 0xb5, 0x74,
	0x09, 0xaf, 0x71, 0x98, 0x82, 0x0b, 0xa4, 0x78, 0x25, 0x53, 0xa6, 0x46, 0xe8, 0xa5, 0x42, 0x3f,
	0x6d, 0x44, 0x27, 0xda, 0x84, 0x51, 0xc3, 0x51, 0xa7, 0xf1, 0x7c, 0xc3, 0x31, 0x0e, 0xec, 0xe2,
	0xac, 0x03, 0x7b, 0x32, 0x70, 0xf9, 0x47, 0xd3, 0x66, 0x72, 0x57, 0xc4, 0x31, 0x1f, 0x8a, 0x29,
	0xf3, 0x50, 0x98, 0x36, 0x0f, 0x26, 0x99, 0x39, 0xa3, 0x9a, 0x8c, 0x66, 0xf5, 0xe2, 0x74, 0x95,
	0x66, 0x4c, 0x57, 0x34, 0x39, 0xa9, 0x84, 0xca, 0xe9, 0xda, 0x37, 0xce, 0x32, 0xc5, 0x75, 0xeb,
	0xf0, 0x50, 0x0c, 0x92, 0xcb, 0x8d, 0xa4, 0xbb, 0xac, 0x36, 0x12, 0xa3, 0x03, 0x11, 0x39, 0x61,
	0xe4, 0x8a, 0x48, 0x32, 0x59, 0x25, 0x6c, 0x0f, 0x20, 0xeb, 0x3b, 0xe6, 0x26, 0xe9, 0x89, 0xc0,
	0xed, 0x47, 0xe9, 0x68, 0x2c, 0x92, 0x79, 0x16, 0xe1, 0xe2, 0x64, 0x15, 0xa7, 0x4d, 0xd6, 0xcb,
	0xac, 0x9e, 0x50, 0xa3, 0x52, 0x91, 0x29, 0x15, 0x48, 0x20, 0xe9, 0xb2, 0xd7, 0xd8, 0x6a, 0x46,
	0x14, 0x24, 0x22, 0x50, 0x07, 0xc1, 0x8a, 0x26, 0x43, 0xd4, 0xfa, 0xdb, 0x82, 0xe1, 0xbe, 0x9b,
	0x0c, 0xcf, 0xb9, 0x74, 0x4f, 0x57, 0x9a, 0x73, 0xf1, 0x0b, 0x4b, 0x0b, 0xcd, 0x04, 0xde, 0xe0,
	0x98, 0x42, 0x86, 0xc4, 0x2e, 0x36, 0xde, 0xf1, 0x06, 0xc7, 0x1d, 0x3e, 0x12, 0xd3, 0x46, 0x55,
	0x9e, 0x3a, 0xaa, 0x9f, 0x2b, 0x68, 0xd3, 0x14, 0x03, 0x41, 0x62, 0x9c, 0xfa, 0xb1, 0xe8, 0x79,
	0xc9, 0x33, 0x5a, 0xdb, 0x86, 0x48, 0x94, 0x72, 0x22, 0xf1, 0x2a, 0x5b, 0x8d, 0xa8, 0xf1, 0x09,
	0x69, 0xab, 0x4b, 0x58, 0x8a, 0xdb, 0x3f, 0x14, 0xd8, 0xaa, 0xc9, 0x50, 0xea, 0xa3, 0xb5, 0x12,
	0xa5, 0xbe, 0x70, 0x46, 0x3c, 0x3e, 0x96, 0xbc, 0x54, 0x00, 0xd8, 0xe5, 0xf1, 0x31, 0xcc, 0xeb,
	0xc8, 0x0b, 0x1c, 0xf0, 0x90, 0x22, 0x9e, 0xe8, 0xe8, 0xc8, 0xc8, 0x0b, 0x1e, 0x7b, 0x81, 0xcd,
	0x13, 0x01, 0x4e, 0xdf, 0x88, 0x9f, 0x39, 0xe8, 0xe8, 0x20, 0x49, 0x49, 0x8a, 0x23, 0x3f, 0xdb,
	0xf2, 0x85, 0x40, 0x9a, 0x57, 0xd8, 0x0a, 0xd0, 0xe0, 0x9d, 0x1b, 0x29, 0x5e, 0xd2, 0x99, 0xb5,
	0x11, 0x3f, 0xc3, 0xab, 0x5a, 0x54, 0xbc, 0x40, 0xe5, 0x05, 0x26, 0x55, 0x59, 0x52, 0x79, 0x41,
	0x46, 0x35, 0xe3, 0xba, 0xd3, 0x7a, 0x2f, 0x17, 0x70, 0xc2, 0x10, 0x9d, 0x78, 0xd2, 0x78, 0x49,
	0x3a, 0x15, 0x9e, 0xeb, 0x44, 0xe2, 0x89, 0x19, 0x7a, 0x6b, 0xbb, 0x50, 0x7f, 0x93, 0x2d, 0xd3,
	0x5a, 0x8c, 0xc3, 0x58, 0x45, 0x3a, 0x11, 0xe8, 0x86, 0xb1, 0xb5, 0x97, 0x59, 0xb3, 0xb0, 0x08,
	0x66, 0xbb, 0xcf, 0x16, 0x9d, 0xeb, 0x82, 0x5e, 0x18, 0xe2, 0x85, 0x84, 0xf4, 0x86, 0x6e, 0x31,
	0x8a, 0x01, 0x3b, 0x3b, 0xe1, 0x40, 0xad, 0x00, 0x71, 0x04, 0x00, 0xfa, 0xc2, 0x3e, 0x3f, 0x37,
	0x7d, 0xa2, 0xb2, 0xcd, 0x00, 0x92, 0xfe, 0x4f, 0x4f, 0xfb, 0xf2, 0xd8, 0x2a, 0x86, 0x74, 0x3f,
	0xcf, 0xae, 0x50, 0x9b, 0xf4, 0x95, 0x19, 0xca, 0x7c, 0x4e, 0xb9, 0x53, 0x06, 0x0f, 0xf6, 0x6a,
	0x92, 0x15, 0x30, 0x90, 0x39, 0xd4, 0x53, 0x69, 0xb2, 0x3a, 0x63, 0xc8, 0x9f, 0x62, 0x35, 0xb3,
	0x47, 0xe9, 0xbb, 0x4d, 0xed, 0xac, 0x6a, 0x74, 0x66, 0x6d, 0xb1, 0xdb, 0x5a, 0x53, 0xbd, 0x97,
	0x8a, 0xe8, 0xbc, 0x8d, 0x11, 0x27, 0x39, 0xc9, 0xa0, 0x95, 0x60, 0xeb, 0xf2, 0x41, 0xe2, 0x9d,
	0x78, 0xc9, 0x39, 0x4a, 0x87, 0xec, 0xba, 0xa6, 0x40, 0x10, 0x0e, 0xcb, 0x31, 0x8c, 0xca, 0x1e,
	0x3f, 0x21, 0x69, 0xf9, 0x20, 0x2d, 0xc0, 0x3a, 0xc4, 0xfc, 0xc4, 0x34, 0x0d, 0x4a, 0xf6, 0x72,
	0xac, 0x9a, 0xb2, 0x7e, 0xb2, 0x60, 0xf4, 0xd0, 0xe7, 0xc7, 0xcf, 0xd6, 0x43, 0xc2, 0x8f, 0x27,
	0x7a, 0x48, 0x54, 0x53, 0xb0, 0xd2, 0x14, 0x6e, 0x73, 0x40, 0xa2, 0xd5, 0x6d, 0x05, 0x41, 0x5d,
	0x1e, 0xc7, 0xd6, 0x5f, 0x14, 0xd8, 0x2d, 0x64, 0xa1, 0x0b, 0x2c, 0x44, 0x3c, 0x88, 0x0f, 0x95,
	0x6b, 0xff, 0x41, 0xd8, 0xb8, 0xc3, 0x6a, 0x07, 0xe7, 0x86, 0x8e, 0x93, 0x22, 0x75, 0x70, 0xae,
	0x35, 0xdc, 0x3d, 0xb6, 0x92, 0xc8, 0xe6, 0x25, 0xb3, 0x14, 0xe6, 0xa9, 0x27, 0x66, 0xa7, 0x18,
	0x85, 0x99, 0xd0, 0x94, 0x95, 0x40, 0xb5, 0x31, 0x31, 0x9a, 0xf2, 0x85, 0xd1, 0x7c, 0x43, 0x4e,
	0xe8, 0xee, 0x43, 0xa7, 0xe9, 0xec, 0x86, 0xae, 0x77, 0x28, 0xd7, 0x1e, 0x6a, 0xe7, 0x1b, 0xc9,
	0x5d, 0x56, 0x73, 0x45, 0xec, 0x68, 0x85, 0x40, 0x6e, 0x7c, 0xd5, 0x15, 0x71, 0x57, 0xdd, 0x1d,
	0xdf, 0x65, 0xb5, 0x78, 0x10, 0x65, 0x24, 0x34, 0xab, 0xd5, 0x78, 0x10, 0x29, 0x12, 0xeb, 0xcf,
	0x0a, 0xec, 0x86, 0x66, 0x04, 0x76, 0x78, 0x6e, 0x6a, 0xe7, 0xe3, 0x04, 0x95, 0x08, 0x5a, 0x47,
	0xfa, 0xf4, 0xa9, 0x10, 0xd0, 0x76, 0xe7, 0x9d, 0xce, 0x59, 0x57, 0xe0, 0xf9, 0x6b, 0xee, 0xf2,
	0xe4, 0x35, 0xb7, 0x6b, 0x4c, 0x25, 0x4d, 0xa2, 0x2d, 0x06, 0x61, 0xe4, 0x3a, 0xdb, 0x62, 0x4e,
	0xa1, 0x90, 0x7a, 0x3c, 0xa2, 0xcf, 0xb4, 0xde, 0x02, 0x3d, 0x4e, 0x4d, 0xb5, 0x5d, 0xeb, 0x0f,
	0xb3, 0x89, 0xea, 0xe5, 0xbb, 0x79, 0xc8, 0x07, 0xc7, 0x73, 0xef, 0x81, 0xac, 0x1f, 0x65, 0xe3,
	0xe9, 0x4e, 0x1a, 0xef, 0xb1, 0x17, 0xa4, 0xd4, 0x48, 0x4e, 0xf0, 0x92, 0x0f, 0xd5, 0x57, 0x09,
	0xd5, 0xd7, 0x0d, 0x1d, 0xdc, 0x7a, 0x68, 0x72, 0xb0, 0xc9, 0x13, 0x6e, 0x5f, 0xf5, 0x26, 0x10,
	0x54, 0x65, 0x3f, 0xad, 0x76, 0x8d, 0x56, 0x31, 0x86, 0x16, 0xff, 0x30, 0x77, 0x4d, 0x6e, 0x3b,
	0x94, 0xf2, 0xdb, 0xc1, 0xfa, 0xd5, 0xe2, 0x44, 0xd8, 0x22, 0xd3, 0x73, 0x73, 0xcb, 0x7a, 0x24,
	0x4e, 0x44, 0x90, 0x0a, 0x07, 0x54, 0x86, 0x5a, 0x1f, 0x89, 0x81, 0x42, 0x6a, 0x7c, 0x8c, 0xad,
	0x69, 0x12, 0x29, 0x59, 0xf2, 0x38, 0x5e, 0x55, 0x64, 0x12, 0x9e, 0x9d, 0xa0, 0x70, 0x2b, 0x17,
	0x54, 0x2c, 0x67, 0x31, 0x77, 0xad, 0xa7, 0xe8, 0x40, 0xa5, 0x9b, 0x02, 0x19, 0x9d, 0x4d, 0xf5,
	0x98, 0x1a, 0x6f, 0xb3, 0xe7, 0xb5, 0xbc, 0x8f, 0x23, 0x01, 0xd6, 0xa5, 0x17, 0x7b, 0x89, 0x8a,
	0xd4, 0x5e, 0x55, 0x95, 0x5d, 0xa3, 0xce, 0xfa, 0x15, 0x29, 0x5c, 0x13, 0x13, 0xa4, 0xbc, 0xa1,
	0x79, 0x85, 0x6b, 0x22, 0x1a, 0x3a, 0x8b, 0xf1, 0xd2, 0x05, 0xc6, 0x4d, 0x0f, 0x63, 0x61, 0xc2,
	0xc3, 0xf8, 0xff, 0x53, 0xd9, 0x53, 0xde, 0xcd, 0xbc, 0xec, 0x3d, 0xab, 0x7f, 0xf3, 0x33, 0x99,
	0x10, 0xf7, 0x72, 0x3a, 0x4a, 0xc9, 0xf2, 0x7c, 0x1c, 0x64, 0x4e, 0x9c, 0x4a, 0x80, 0xca, 0x85,
	0x4f, 0xb6, 0x29, 0x0d, 0x6a, 0xa6, 0x20, 0x0f, 0xb4, 0x65, 0x00, 0x76, 0xfa, 0x63, 0x1e, 0x05,
	0x5e, 0x30, 0x9c, 0xcf, 0x79, 0x07, 0xcb, 0xf9, 0x94, 0x3e, 0x70, 0x46, 0xe4, 0x9b, 0x49, 0x95,
	0xbd, 0x22, 0x61, 0xe9, 0xb1, 0x59, 0x5f, 0xcb, 0x75, 0xa2, 0xfc, 0xb8, 0x06, 0x5b, 0x30, 0x46,
	0x86, 0xff, 0x03, 0x16, 0x85, 0xe1, 0x48, 0xce, 0x26, 0xfe, 0x0f, 0x66, 0x0a, 0xf7, 0x7d, 0x07,
	0x71, 0x99, 0xac, 0xc1, 0x7d, 0xdf, 0x86, 0xaa, 0x7b, 0x6c, 0x25, 0x3e, 0x8f, 0xc1, 0x67, 0x56,
	0x0c, 0xd0, 0x3a, 0xd7, 0x09, 0x55, 0xfd, 0x7f, 0x46, 0x07, 0x64, 0x77, 0xc2, 0xf0, 0x18, 0xb9,
	0xef, 0xce, 0x19, 0xa0, 0xf8, 0xb4, 0x36, 0xb1, 0xdf, 0xf5, 0x06, 0xc7, 0x1f, 0x20, 0xb2, 0xf1,
	0xd9, 0x2c, 0x19, 0xcb, 0x1b, 0x79, 0x89, 0x4e, 0xc6, 0x9a, 0xef, 0xeb, 0xbf, 0xc9, 0xb2, 0x50,
	0x7a, 0x04, 0xd2, 0xbd, 0xf3, 0x7c, 0x0b, 0x73, 0x8b, 0x31, 0x14, 0x88, 0x2c, 0xdb, 0xa9, 0x6c,
	0x2f, 0x03, 0x42, 0x8d, 0xdc, 0x63, 0x2b, 0x2a, 0xe1, 0x4a, 0x92, 0xc8, 0x40, 0x82, 0x42, 0x89,
	0xec, 0x55, 0xb6, 0xea, 0x03, 0xeb, 0x38, 0xf3, 0x8e, 0x8e, 0xfb, 0x95, 0xed, 0x3a, 0xc2, 0xb0,
	0x00, 0x18, 0x01, 0xd3, 0x74, 0xd8, 0xa7, 0x8e, 0x39, 0x29, 0x3a, 0x90, 0xc2, 0x3c, 0x1d, 0x1a,
	0xc0, 0xb8, 0xf4, 0x8b, 0x06, 0x5d, 0xd7, 0xe7, 0x24, 0xd5, 0xaf, 0xb3, 0x2b, 0x44, 0x87, 0xce,
	0xdb, 0x29, 0xc6, 0xfb, 0x50, 0xd7, 0x94, 0x6d, 0x6a, 0x00, 0x25, 0x15, 0xe1, 0x8c, 0xd6, 0xc7,
	0x3b, 0x76, 0x6a, 0xb5, 0x62, 0xd0, 0xd2, 0xdd, 0x3b, 0xda, 0x94, 0xff, 0x54, 0x62, 0xcf, 0x25,
	0x5c, 0xa6, 0x6f, 0xec, 0x8d, 0x31, 0xaa, 0x06, 0x5b, 0xcd, 0xc8, 0x9b, 0x2c, 0x4c, 0xe6, 0x4d,
	0x06, 0xa1, 0x6b, 0xe4, 0x0f, 0x2d, 0x42, 0x91, 0x2a, 0xe2, 0x30, 0x4a, 0xb2, 0xec, 0xa1, 0x45,
	0x28, 0x92, 0x5b, 0xaa, 0x54, 0x76, 0xc4, 0x13, 0x2f, 0x54, 0x9e, 0x91, 0x04, 0x6d, 0xc0, 0x80,
	0x08, 0x74, 0x73, 0x76, 0x21, 0x26, 0xef, 0xcc, 0x24, 0x48, 0xca, 0xed, 0x1e, 0x5b, 0x89, 0x44,
	0x9c, 0x44, 0xde, 0x20, 0xc9, 0x5d, 0x9b, 0xd5, 0x15, 0x4a, 0x64, 0xaf, 0xb2, 0x55, 0xf0, 0xb2,
	0xa4, 0xad, 0x6e, 0xdc, 0x9f, 0xd5, 0x47, 0x5e, 0x40, 0x56, 0xba, 0x49, 0x27, 0x82, 0x44, 0xeb,
	0xd3, 0x8a, 0xa6, 0x6b, 0x01, 0x9a, 0xd1, 0xf1, 0xb3, 0x1c, 0xdd, 0xb2, 0xa4, 0xe3, 0x67, 0x06,
	0xdd, 0x7d, 0xb6, 0x96, 0xb5, 0x47, 0xb1, 0x0a, 0x79, 0x67, 0xbb, 0xa2, 0x1a, 0xdc, 0x45, 0x14,
	0x29, 0x75, 0x8b, 0x92, 0xb2, 0x2a, 0x29, 0x65, 0x93, 0x92, 0x72, 0x22, 0xdb, 0x85, 0xae, 0x74,
	0x8d, 0x6c, 0x17, 0x83, 0x00, 0x55, 0x59, 0x9d, 0x6c, 0x50, 0x82, 0x50, 0x99, 0xfd, 0x3f, 0xbd,
	0xe7, 0x68, 0x79, 0x9b, 0x94, 0x9e, 0x74, 0xd1, 0x29, 0xae, 0x1b, 0x4e, 0xf1, 0x16, 0x6b, 0xc8,
	0x56, 0xc3, 0x31, 0x05, 0x60, 0x83, 0xc3, 0x50, 0x3a, 0x3c, 0xeb, 0xca, 0x3c, 0x99, 0x14, 0x1a,
	0x7b, 0x2d, 0x9e, 0x40, 0xac, 0x2f, 0x19, 0x3b, 0x36, 0xab, 0xba, 0xa4, 0xf9, 0xc2, 0x07, 0x6e,
	0xfe, 0xd3, 0x5a, 0x87, 0x82, 0x22, 0xda, 0xf0, 0x7d, 0xd4, 0x45, 0x77, 0x59, 0xed, 0x18, 0x74,
	0xbb, 0x52, 0x7f, 0x94, 0xcd, 0x57, 0x05, 0x4c, 0x29, 0xbf, 0x2f, 0xe8, 0x0f, 0x37, 0xbd, 0x78,
	0xe4, 0xc5, 0xb1, 0xda, 0x64, 0x2e, 0x15, 0xa5, 0xf0, 0x04, 0xe9, 0x48, 0xa5, 0xb3, 0xc9, 0x0a,
	0x14, 0x9f, 0x4e, 0x3a, 0xb2, 0x5e, 0xcf, 0xd4, 0xb7, 0xb3, 0xbb, 0xd1, 0x6f, 0xbe, 0xe3, 0x6c,
	0xb5, 0x5a, 0xf9, 0x0b, 0xd8, 0xb2, 0xba, 0x8b, 0xb6, 0x0d, 0xbb, 0x48, 0xd3, 0x3a, 0x5b, 0x1b,
	0xed, 0x1d, 0x58, 0x85, 0x43, 0xee, 0xf9, 0x74, 0x91, 0x22, 0x43, 0x13, 0x00, 0x60, 0xaa, 0xd3,
	0xac, 0xeb, 0xbb, 0xbf, 0x34, 0xef, 0x88, 0x76, 0x79, 0x32, 0x38, 0x72, 0x1e, 0x73, 0x2f, 0x71,
	0xfa, 0xde, 0xf8, 0x92, 0x6b, 0x60, 0x38, 0x46, 0x78, 0x70, 0xac, 0x8f, 0x11, 0x1e, 0x1c, 0x83,
	0xea, 0x1c, 0xa4, 0x91, 0x1c, 0x2d, 0xd6, 0x96, 0x64, 0xbc, 0x38, 0x8d, 0x70, 0xa8, 0x36, 0x50,
	0x29, 0x9b, 0x23, 0xbb, 0x04, 0x2e, 0x93, 0xcd, 0x41, 0xd1, 0x42, 0x4a, 0xa5, 0x3d, 0x87, 0x23,
	0x0f, 0x1b, 0x52, 0x41, 0x0d, 0x09, 0x52, 0x66, 0x22, 0x1a, 0xc5, 0x98, 0x56, 0xad, 0x74, 0x1c,
	0x5a, 0xf7, 0xc9, 0xe0, 0x08, 0xa5, 0xf4, 0xef, 0x28, 0x69, 0x0b, 0x07, 0xd2, 0x0a, 0x5c, 0xec,
	0x56, 0x31, 0x5c, 0x30, 0x18, 0xbe, 0x2c, 0x5b, 0x64, 0xe6, 0x81, 0x9e, 0x4d, 0xc8, 0x82, 0xb1,
	0x2c, 0xe0, 0x0f, 0xf0, 0x53, 0x0e, 0xae, 0x00, 0x5e, 0x95, 0xb8, 0x92, 0xef, 0x2a, 0x82, 0xed,
	0x44, 0x8c, 0x28, 0xc6, 0x69, 0xd0, 0x80, 0x3c, 0x2c, 0x4a, 0x9b, 0x43, 0x11, 0x75, 0xd2, 0x11,
	0x0c, 0x8e, 0xa8, 0x86, 0x7e, 0xe8, 0x4a, 0xb5, 0xbc, 0x8c, 0xc8, 0xb6, 0x1f, 0xba, 0xd6, 0xb6,
	0x11, 0xf9, 0xc3, 0x11, 0xda, 0x98, 0x9b, 0xd3, 0xf8, 0x6f, 0xac, 0x02, 0xda, 0x5c, 0x0e, 0x32,
	0x97, 0x84, 0x65, 0x4e, 0x84, 0xbd, 0x24, 0xe8, 0x1f, 0xeb, 0x77, 0x0b, 0x6c, 0x4d, 0x55, 0x6a,
	0xab, 0xe8, 0xd2, 0x28, 0x6a, 0x6e, 0x4a, 0x8a, 0x13, 0x53, 0xb2, 0xc6, 0x4a, 0x27, 0xde, 0x58,
	0x06, 0xd9, 0xe0, 0x5f, 0x33, 0x65, 0x9c, 0x22, 0x6b, 0x2a, 0x65, 0xfc, 0x05, 0xb6, 0x74, 0xc8,
	0x07, 0xc2, 0xc8, 0xcb, 0x87, 0xa2, 0xcc, 0xcb, 0x0e, 0x63, 0x2f, 0x51, 0xc9, 0x8f, 0x65, 0x5b,
	0x97, 0xad, 0x3f, 0x2e, 0x4c, 0x0e, 0x5a, 0x06, 0x58, 0xae, 0xb1, 0x45, 0x19, 0x3f, 0x91, 0x07,
	0x0b, 0x95, 0xa0, 0xb1, 0x53, 0xee, 0x25, 0x89, 0x17, 0x0c, 0x75, 0x92, 0x82, 0x2c, 0xc3, 0xfa,
	0x25, 0x61, 0xc2, 0x7d, 0xc9, 0x2e, 0x15, 0x40, 0xf5, 0x91, 0x48, 0x51, 0x9d, 0xcc, 0x04, 0x44,
	0xa8, 0x8f, 0x04, 0x0f, 0x18, 0x4a, 0x29, 0xf9, 0x56, 0x65, 0x9c, 0xe0, 0xe7, 0x73, 0x13, 0xac,
	0xbd, 0xa4, 0x0a, 0xd0, 0xa1, 0x2b, 0x95, 0xe4, 0x67, 0xf8, 0x52, 0x41, 0xcc, 0x65, 0x9d, 0x68,
	0x91, 0xba, 0x34, 0x7c, 0x79, 0x8b, 0xb1, 0x83, 0x34, 0x49, 0xa4, 0x4e, 0x91, 0x79, 0x14, 0x84,
	0x80, 0x36, 0x79, 0xc7, 0xd4, 0x26, 0x28, 0x21, 0xd0, 0x87, 0xe2, 0xdf, 0x10, 0x90, 0x8b, 0xfc,
	0xa3, 0x84, 0x20, 0xff, 0x28, 0x22, 0x5f, 0x57, 0x17, 0xed, 0x5b, 0xf8, 0x44, 0x44, 0x2a, 0xdc,
	0xbb, 0xac, 0xc6, 0x7d, 0x3f, 0x3c, 0x95, 0x26, 0x81, 0x0a, 0x8a, 0x23, 0x26, 0x33, 0xf1, 0xe6,
	0xca, 0x75, 0xbf, 0xc7, 0x56, 0x26, 0x92, 0x5e, 0x69, 0x98, 0xf5, 0x41, 0x2e, 0xdb, 0xf5, 0x7d,
	0x76, 0x1f, 0x1f, 0xa2, 0x38, 0xdb, 0xad, 0xbe, 0xb3, 0xd7, 0xd9, 0x69, 0x77, 0x5a, 0xce, 0x76,
	0x7b, 0xab, 0xef, 0x34, 0xdf, 0x69, 0x35, 0xdf, 0x45, 0x74, 0x6b, 0xcf, 0x76, 0xb6, 0x37, 0x76,
	0x5b, 0x33, 0x73, 0x72, 0x02, 0x50, 0x83, 0x6a, 0x86, 0xb1, 0x60, 0xfd, 0x4b, 0x81, 0xda, 0xee,
	0xfd, 0x50, 0x6d, 0x3f, 0xc5, 0x4d, 0xb9, 0xce, 0x2a, 0xe1, 0x38, 0x97, 0x81, 0xba, 0x14, 0x8e,
	0x29, 0xfd, 0xf4, 0x26, 0x5b, 0x1e, 0x7a, 0x87, 0xb9, 0x37, 0x2c, 0x15, 0x00, 0xb0, 0x12, 0x6c,
	0x4c, 0xa8, 0xa4, 0x30, 0x7e, 0x59, 0xda, 0x98, 0xde, 0xa1, 0x7c, 0xf3, 0x71, 0x97, 0xd5, 0x7c,
	0x71, 0x08, 0x36, 0xdc, 0x20, 0x0c, 0xdc, 0x58, 0xee, 0x99, 0x2a, 0x60, 0x3d, 0x82, 0x74, 0x0b,
	0xa3, 0x30, 0x10, 0xe7, 0x4a, 0x93, 0x00, 0xb2, 0x0b, 0x80, 0xf5, 0x9e, 0x3c, 0x4f, 0xb7, 0x1c,
	0x5a, 0x35, 0x4a, 0xc1, 0x9c, 0x79, 0x91, 0x92, 0x5b, 0xf7, 0xe2, 0x85, 0x75, 0xb7, 0xfe, 0xfb,
	0x44, 0x93, 0x72, 0x9b, 0x3e, 0x5d, 0x62, 0xac, 0xb3, 0x9c, 0xa4, 0xc9, 0xef, 0x6e, 0xb3, 0x2a,
	0x85, 0xb7, 0xcd, 0x3d, 0x8e, 0x96, 0xf7, 0x25, 0x0d, 0x5f, 0x64, 0x09, 0x6d, 0x1a, 0x0a, 0xea,
	0x26, 0xde, 0x28, 0xcb, 0x01, 0x46, 0xa8, 0xef, 0x8d, 0x84, 0xf5, 0xb3, 0x99, 0x90, 0xff, 0x08,
	0x92, 0x57, 0x30, 0xdb, 0x01, 0x1a, 0x36, 0xd7, 0x1c, 0x00, 0x14, 0xc8, 0xaf, 0x17, 0x35, 0x2f,
	0x3f, 0xf6, 0x99, 0x2d, 0x20, 0xf8, 0x5e, 0xec, 0x44, 0xe1, 0x41, 0x48, 0x69, 0x8c, 0x15, 0x7b,
	0xc9, 0x8b, 0x6d, 0x28, 0xe6, 0x27, 0xa1, 0x32, 0x31, 0x09, 0xdf, 0x2e, 0x49, 0x6b, 0x64, 0x0b,
	0x2f, 0xb7, 0xc0, 0x4c, 0x9b, 0xeb, 0x7c, 0xba, 0xfc, 0x09, 0xc7, 0x2b, 0x6c, 0xe5, 0xc0, 0x1b,
	0x3a, 0x74, 0xac, 0x8e, 0xc3, 0xd0, 0x97, 0xb1, 0x8c, 0xda, 0x81, 0x37, 0xdc, 0x00, 0xb0, 0x1b,
	0x86, 0x3e, 0x66, 0x4f, 0x8f, 0xc0, 0x11, 0x36, 0xe8, 0x16, 0x64, 0xf6, 0x34, 0xe0, 0x19, 0xe5,
	0xeb, 0xec, 0x4a, 0x24, 0x46, 0x5c, 0xfb, 0x05, 0x98, 0xb5, 0x4d, 0x93, 0xb3, 0x4a, 0x15, 0x68,
	0xa7, 0x60, 0xe2, 0xf6, 0x0d, 0xb6, 0x1c, 0x8f, 0x29, 0x2c, 0xf7, 0xa6, 0x74, 0x31, 0x96, 0xe2,
	0xf1, 0x26, 0x4f, 0xf8, 0x9b, 0x66, 0xdd, 0x5b, 0xd2, 0xad, 0x90, 0x75, 0x6f, 0x99, 0x75, 0x0f,
	0xa4, 0x2b, 0x21, 0xeb, 0x1e, 0x98, 0x75, 0x6f, 0x4b, 0xf7, 0x41, 0xd6, 0xbd, 0x6d, 0xd6, 0x7d,
	0x02, 0x3d, 0x06, 0x5d, 0xf7, 0x09, 0x94, 0x14, 0x59, 0xc7, 0xa3, 0xe8, 0x81, 0x7a, 0x6c, 0x46,
	0xd5, 0x1b, 0x51, 0xf4, 0xa0, 0xf1, 0x12, 0xab, 0x1a, 0x14, 0xe8, 0x22, 0xd4, 0xec, 0x65, 0x4d,
	0xa0, 0xce, 0x96, 0xa6, 0x92, 0xcf, 0xde, 0xb1, 0xe7, 0xc3, 0xd9, 0x28, 0xf3, 0xd0, 0xa0, 0x14,
	0xcb, 0xd3, 0x25, 0x9f, 0x96, 0x09, 0x35, 0x32, 0x0d, 0x0d, 0x89, 0x74, 0xde, 0xd3, 0xd6, 0x47,
	0x9d, 0xf7, 0xb4, 0xf5, 0x63, 0x99, 0xf7, 0xf4, 0x57, 0xd2, 0xe4, 0x69, 0xda, 0x4e, 0xcf, 0x0c,
	0xb5, 0xc0, 0x2e, 0x35, 0xec, 0x7b, 0xfc, 0xff, 0x92, 0x8c, 0xd3, 0x5b, 0x8c, 0xb9, 0xc2, 0xe7,
	0xe7, 0x99, 0xe2, 0xab, 0xdb, 0xcb, 0x88, 0x80, 0xde, 0xc3, 0x86, 0xc4, 0x99, 0xde, 0xee, 0xf0,
	0x3f, 0x34, 0xe4, 0xea, 0xe7, 0x55, 0x75, 0x9b, 0x0a, 0x68, 0xd8, 0xcb, 0xc7, 0x96, 0xe2, 0x2c,
	0xc9, 0x9e, 0xd4, 0xd5, 0xe4, 0x7b, 0x4b, 0x71, 0x96, 0xd0, 0x68, 0xc7, 0x3c, 0xe2, 0xf2, 0xf9,
	0x87, 0x7c, 0x3c, 0x89, 0x08, 0xda, 0x42, 0xbf, 0xb7, 0x84, 0x46, 0xb9, 0xda, 0xc9, 0xef, 0x08,
	0xee, 0x4e, 0x3e, 0x2c, 0xcc, 0x59, 0x89, 0xd3, 0x2d, 0xf3, 0xeb, 0xac, 0x32, 0x8c, 0xc2, 0x74,
	0x9c, 0x4d, 0xf9, 0x12, 0x96, 0xf3, 0x96, 0x25, 0xa9, 0x55, 0x65, 0x59, 0xc2, 0x3c, 0xa7, 0x71,
	0x12, 0x8e, 0x32, 0xa3, 0xb3, 0x42, 0x40, 0xdb, 0x05, 0x0b, 0x72, 0x28, 0x02, 0x57, 0x44, 0x52,
	0x7d, 0xc9, 0xd2, 0x85, 0xac, 0x81, 0xa5, 0x0b, 0x59, 0x03, 0xc6, 0xa3, 0x37, 0x22, 0xa9, 0xa8,
	0x1b, 0x00, 0xc0, 0x88, 0xc4, 0xbc, 0x00, 0x5c, 0xbe, 0xfc, 0xce, 0x93, 0xcd, 0xcc, 0x12, 0xad,
	0x4e, 0x66, 0x89, 0x66, 0xf6, 0x62, 0xcd, 0xf4, 0xc9, 0x74, 0x8a, 0x7a, 0x7d, 0x7a, 0x8a, 0xfa,
	0xca, 0xe5, 0x29, 0xea, 0xab, 0x33, 0x13, 0x79, 0xd7, 0x66, 0x27, 0xf2, 0x5e, 0x99, 0x9d, 0xc8,
	0xdb, 0x98, 0x4c, 0xe4, 0xcd, 0xa7, 0xa8, 0x3f, 0x97, 0xdd, 0x2f, 0x53, 0x8a, 0xba, 0xcc, 0xf3,
	0xbd, 0x3a, 0x23, 0x51, 0xfa, 0xf9, 0x79, 0x12, 0xa5, 0xaf, 0x4d, 0x49, 0x94, 0xd6, 0x1b, 0xe5,
	0x05, 0x73, 0xa3, 0x4c, 0xa4, 0xa8, 0xaf, 0x4f, 0xa6, 0xa8, 0x83, 0x68, 0x9d, 0x78, 0x63, 0x68,
	0x7b, 0xfd, 0x3a, 0x49, 0xc9, 0x89, 0x37, 0xde, 0x11, 0x27, 0x18, 0x69, 0x1a, 0x0b, 0x7e, 0x2c,
	0x22, 0xdc, 0x64, 0xf1, 0xfa, 0x0d, 0x72, 0xe8, 0x24, 0x08, 0xfb, 0x2c, 0xce, 0xbb, 0x4e, 0x37,
	0x27, 0x5c, 0x27, 0xb0, 0xd1, 0x50, 0xa0, 0xb1, 0xf6, 0x45, 0xda, 0x35, 0x88, 0xa8, 0x5b, 0xc1,
	0x14, 0xe4, 0xd1, 0x39, 0x8d, 0xbc, 0x44, 0xac, 0xdf, 0x22, 0x85, 0x8d, 0xd0, 0x63, 0x40, 0xf2,
	0xcf, 0x2a, 0x5f, 0x22, 0x25, 0xa2, 0x9f, 0x55, 0xe2, 0x32, 0x0e, 0xe1, 0x98, 0x02, 0x8d, 0x71,
	0x9b, 0xf4, 0x1c, 0x22, 0xea, 0x80, 0xc6, 0x1d, 0x93, 0x46, 0xfe, 0xfa, 0x1d, 0x6c, 0x19, 0x77,
	0xd0, 0x7e, 0xe4, 0x5b, 0x9d, 0x5c, 0xc2, 0x3b, 0x06, 0x91, 0x1a, 0xff, 0x83, 0xad, 0xe0, 0x3b,
	0x9f, 0x23, 0xc1, 0xdd, 0xa9, 0x8f, 0x7d, 0xcc, 0xbd, 0x6d, 0xd7, 0x3c, 0xf9, 0x1f, 0xee, 0xfe,
	0x2f, 0xea, 0xd8, 0x0d, 0x39, 0x11, 0xf2, 0x89, 0xd7, 0x5d, 0x56, 0x93, 0x41, 0x1b, 0x7a, 0xf4,
	0x2b, 0x0d, 0x43, 0xc2, 0xe8, 0xc9, 0x6f, 0x46, 0x42, 0x6a, 0xb4, 0x68, 0x92, 0xa0, 0x22, 0xb5,
	0xbe, 0x96, 0x8f, 0x04, 0x6b, 0xbb, 0x69, 0xbe, 0x58, 0x2e, 0xac, 0x3e, 0x46, 0x38, 0x89, 0x05,
	0x79, 0x4f, 0x85, 0x10, 0x71, 0xa0, 0x09, 0x88, 0x81, 0x92, 0x41, 0x40, 0xfd, 0xdf, 0x63, 0x2f,
	0xab, 0x6b, 0xbe, 0x07, 0x4d, 0xc7, 0x16, 0x87, 0x91, 0x88, 0x8f, 0x9c, 0xbd, 0x40, 0x38, 0x9b,
	0xfc, 0xdc, 0xd9, 0x0a, 0x23, 0xb4, 0x69, 0xad, 0xdf, 0xca, 0x1e, 0x1a, 0x3d, 0xf4, 0x02, 0xd7,
	0x91, 0x8e, 0xfb, 0xa5, 0x26, 0xcd, 0xc4, 0x53, 0x9c, 0xe2, 0x85, 0xa7, 0x38, 0xe6, 0x3b, 0xdf,
	0xd2, 0xc4, 0x3b, 0xdf, 0x99, 0x77, 0xcd, 0x66, 0x2c, 0xa8, 0x3c, 0x11, 0x0b, 0x8a, 0x74, 0x28,
	0x48, 0x0d, 0xe4, 0x51, 0xbb, 0x4b, 0x17, 0x96, 0x2f, 0x31, 0xd8, 0x72, 0x8e, 0xda, 0x0a, 0xf2,
	0xdc, 0x1c, 0xa4, 0xd1, 0x23, 0xda, 0x0d, 0x37, 0x58, 0x65, 0x24, 0x62, 0xf3, 0x9e, 0x42, 0x97,
	0x81, 0x9f, 0x31, 0x1c, 0x45, 0xda, 0xf3, 0x06, 0xff, 0x9e, 0x9f, 0xa3, 0x6f, 0xad, 0x42, 0xf9,
	0x4d, 0x74, 0xb4, 0x9c, 0x77, 0x5a, 0x1b, 0x76, 0xdf, 0x69, 0x3e, 0xd8, 0x9e, 0x33, 0x94, 0xff,
	0xdb, 0x45, 0x76, 0x3d, 0xe1, 0x43, 0x98, 0xe3, 0x6d, 0xef, 0x30, 0xe9, 0xf2, 0xc1, 0x31, 0x1f,
	0xe2, 0x4d, 0xa1, 0xb3, 0xdd, 0xc3, 0x33, 0x06, 0xdd, 0xa8, 0xec, 0x8c, 0x01, 0x1f, 0x0a, 0x43,
	0xc9, 0x5e, 0x80, 0xb7, 0x3d, 0x82, 0x4e, 0x48, 0x60, 0x79, 0x01, 0xe4, 0x96, 0x40, 0x3c, 0x24,
	0xc1, 0xcb, 0xe2, 0x71, 0x92, 0xc6, 0x22, 0x3b, 0x45, 0x17, 0xec, 0xaa, 0xc4, 0x90, 0xe4, 0x3a,
	0xab, 0x1c, 0xa4, 0xf2, 0x90, 0x5d, 0xc0, 0xea, 0xa5, 0x83, 0x94, 0x8e, 0xd8, 0x9b, 0xe8, 0x73,
	0xe7, 0x1e, 0x34, 0x80, 0x73, 0x4d, 0x6a, 0x50, 0x1d, 0xe4, 0x74, 0x96, 0xd2, 0x41, 0xfe, 0x22,
	0x5b, 0x3e, 0x4c, 0x83, 0x01, 0x88, 0x76, 0xa0, 0x8e, 0x50, 0x0d, 0x90, 0x20, 0xa2, 0xdf, 0x8f,
	0x9d, 0x55, 0xb0, 0x33, 0x46, 0x10, 0xf6, 0xf7, 0x22, 0xfe, 0x0e, 0x40, 0x2c, 0xb8, 0x33, 0x0c,
	0xe9, 0xc0, 0xa9, 0xd8, 0x15, 0x2f, 0xee, 0x09, 0xbe, 0x1d, 0xba, 0xd6, 0x0b, 0x94, 0x5d, 0xd5,
	0x74, 0x76, 0xdf, 0x27, 0x27, 0xb7, 0xbb, 0x01, 0x3e, 0x6e, 0xcf, 0xfa, 0x75, 0x79, 0x95, 0xd8,
	0xcb, 0xd7, 0x3c, 0xa4, 0xea, 0xc6, 0x0e, 0x6b, 0xe0, 0x29, 0x8d, 0xd3, 0x38, 0xa6, 0xd9, 0x55,
	0x46, 0xde, 0x4b, 0x6a, 0xef, 0x4f, 0x9f, 0x7d, 0x7b, 0x6d, 0x98, 0xc7, 0x51, 0x97, 0x86, 0x63,
	0x52, 0x48, 0x32, 0xe6, 0x1f, 0x8e, 0x95, 0x33, 0xec, 0xc5, 0xf2, 0x85, 0xae, 0x7a, 0x20, 0xee,
	0xc5, 0xf4, 0x2c, 0xd7, 0x7a, 0x97, 0xf2, 0x24, 0x9b, 0x4e, 0x7f, 0x6f, 0x77, 0xcf, 0xb6, 0xf7,
	0x1e, 0x23, 0x8b, 0x1b, 0xdb, 0x33, 0xdc, 0xf2, 0x75, 0xb6, 0x94, 0x8f, 0x3e, 0xa8, 0xa2, 0xb5,
	0x4f, 0x8d, 0xf5, 0x2e, 0x36, 0xf6, 0xd4, 0xd7, 0x6f, 0xb3, 0xa2, 0xa8, 0xdf, 0x2d, 0xe0, 0x1b,
	0x33, 0xf4, 0x5f, 0xd1, 0x2c, 0xbe, 0xce, 0x2a, 0x68, 0x11, 0x67, 0xbc, 0x2d, 0x61, 0x99, 0x7c,
	0x2d, 0x23, 0x92, 0x86, 0xff, 0x93, 0x3d, 0x18, 0xfa, 0x8e, 0x1b, 0x9e, 0x06, 0x6a, 0x8b, 0x00,
	0x80, 0xcf, 0x11, 0xa1, 0xe3, 0x14, 0xaf, 0x3c, 0x02, 0xe5, 0x35, 0xaa, 0x32, 0x3d, 0xff, 0xa5,
	0x3c, 0x5d, 0xc3, 0x96, 0xac, 0x4a, 0x4c, 0xfd, 0x88, 0x84, 0x22, 0x01, 0xe3, 0x5e, 0x45, 0x0b,
	0x24, 0x06, 0xd6, 0xbd, 0xb5, 0x45, 0x2a, 0xbf, 0x47, 0x9b, 0xb0, 0xf7, 0x6e, 0x7b, 0x67, 0x07,
	0x0c, 0x7b, 0x72, 0xc0, 0xa7, 0x1a, 0xf6, 0x7a, 0xa4, 0xd2, 0x27, 0x27, 0xc3, 0xfe, 0x27, 0x48,
	0xcb, 0xf5, 0x1c, 0xbb, 0xb5, 0xe9, 0xb4, 0x3a, 0x8f, 0x5a, 0x3b, 0x7b, 0x5d, 0x9c, 0x59, 0x11,
	0x9c, 0x08, 0x3f, 0x1c, 0x1b, 0xe6, 0x1e, 0x53, 0xd0, 0xe5, 0x33, 0x02, 0x3b, 0xcd, 0x34, 0x60,
	0x2b, 0x00, 0xa0, 0xb0, 0x1b, 0x0b, 0xbf, 0x90, 0x7b, 0xeb, 0xf7, 0x1d, 0x0a, 0x6c, 0x3e, 0x14,
	0x09, 0x69, 0x58, 0x18, 0x1d, 0x58, 0x15, 0xa9, 0xbe, 0x7f, 0x82, 0x7f, 0xa7, 0x3f, 0xf5, 0x22,
	0x09, 0xc0, 0x4c, 0x0a, 0x63, 0xbf, 0x33, 0x82, 0xd4, 0x76, 0x77, 0xa3, 0x70, 0xac, 0x43, 0x6f,
	0x65, 0x7b, 0x09, 0xca, 0x9d, 0x74, 0x84, 0x3f, 0x03, 0x12, 0x3b, 0xe0, 0xfe, 0xc9, 0x25, 0x58,
	0xf4, 0xe2, 0x5d, 0xee, 0x05, 0xda, 0x11, 0x30, 0xef, 0x99, 0xd0, 0xf6, 0xa7, 0x54, 0xa9, 0xff,
	0xab, 0x66, 0xfe, 0x61, 0xab, 0xef, 0xd8, 0xad, 0xde, 0xfe, 0x4e, 0x7f, 0x52, 0xac, 0xcb, 0x5a,
	0xac, 0x3f, 0xc7, 0x56, 0x0f, 0x44, 0xe2, 0x48, 0x31, 0xc5, 0xc5, 0x2c, 0xe6, 0xa3, 0x79, 0xb9,
	0x81, 0xdb, 0xf5, 0x03, 0xb3, 0x68, 0xf5, 0xd5, 0xea, 0xec, 0xf7, 0x5a, 0xb6, 0xb3, 0xdb, 0xea,
	0xf5, 0x40, 0xee, 0x4d, 0xa7, 0x42, 0xe9, 0x22, 0xe5, 0x1f, 0x14, 0x0d, 0xff, 0xe0, 0x1a, 0x5b,
	0x14, 0x67, 0x89, 0x08, 0x5c, 0xcc, 0x2e, 0x29, 0xdb, 0xb2, 0x64, 0x9d, 0x4f, 0xba, 0x85, 0x2a,
	0x35, 0x7c, 0x90, 0x46, 0xea, 0x9a, 0xab, 0x20, 0x87, 0x9d, 0x46, 0xb2, 0x1a, 0x64, 0x12, 0xaa,
	0xf3, 0x2f, 0x2e, 0xe1, 0x88, 0x89, 0x76, 0xe4, 0xab, 0x4b, 0x45, 0xe2, 0x7a, 0x7c, 0x14, 0x06,
	0xae, 0x74, 0xdb, 0x91, 0x64, 0x93, 0x20, 0xeb, 0x9b, 0x05, 0xb5, 0x9b, 0xb7, 0x77, 0x69, 0x50,
	0x3b, 0xed, 0x5e, 0xdf, 0xd9, 0x6e, 0xf5, 0x1b, 0x9f, 0x63, 0x2b, 0xb8, 0xfd, 0xb2, 0xb8, 0x2d,
	0x09, 0x30, 0x3d, 0xf8, 0xba, 0xf8, 0x91, 0x5d, 0x03, 0xf2, 0x7d, 0x19, 0xbd, 0x85, 0xcf, 0xfd,
	0x74, 0x70, 0x6c, 0x7c, 0x5e, 0x7c, 0xca, 0xe7, 0x40, 0xae, 0x3e, 0xb7, 0xbe, 0x55, 0x50, 0x53,
	0x6d, 0x12, 0x5d, 0xae, 0xaf, 0x5e, 0x61, 0x2b, 0x74, 0x31, 0x92, 0xe6, 0x13, 0x32, 0x6a, 0x78,
	0x39, 0x92, 0x66, 0xf7, 0x87, 0xa7, 0x3c, 0x90, 0x07, 0x62, 0x2e, 0x39, 0x0a, 0xe0, 0x6c, 0xee,
	0x6f, 0xaa, 0x70, 0x6f, 0xf6, 0xae, 0x9d, 0xe2, 0xba, 0xa9, 0x2f, 0xac, 0xf5, 0xec, 0xd9, 0xb5,
	0x63, 0xb7, 0xde, 0xdb, 0x6f, 0xf5, 0xfa, 0xce, 0x86, 0xdd, 0xea, 0x6c, 0x58, 0xdf, 0x2b, 0xe8,
	0xaa, 0x5e, 0xbe, 0x8a, 0xa2, 0xce, 0xbe, 0x2f, 0x12, 0x7d, 0x93, 0x85, 0x51, 0x67, 0x40, 0x40,
	0xf8, 0x73, 0x3f, 0x32, 0x93, 0xe0, 0x8f, 0xcc, 0x14, 0x27, 0x7e, 0x64, 0x06, 0xd1, 0x6c, 0xdf,
	0x95, 0xcc, 0x60, 0x37, 0xf8, 0x0c, 0x91, 0xf6, 0x19, 0xe4, 0xb5, 0x10, 0x20, 0x74, 0x58, 0xbe,
	0xca, 0x56, 0x93, 0xd0, 0xe5, 0xe7, 0xce, 0x88, 0x9f, 0xe5, 0xb2, 0x5d, 0xeb, 0x08, 0xef, 0xf2,
	0x33, 0xda, 0x4a, 0x9f, 0x37, 0x13, 0xb9, 0xfb, 0x60, 0x47, 0x10, 0xf3, 0x53, 0xb8, 0x2b, 0x4c,
	0xe3, 0xce, 0xba, 0x66, 0x26, 0x56, 0x67, 0x0d, 0x58, 0xbf, 0x58, 0x94, 0xe9, 0x8c, 0x28, 0xe2,
	0xf4, 0x33, 0x12, 0x3f, 0x5a, 0x49, 0x47, 0x92, 0x23, 0x1e, 0x0c, 0xcd, 0xa4, 0x60, 0x20, 0x41,
	0x4c, 0x5f, 0x6a, 0x4b, 0x12, 0xd5, 0x15, 0x45, 0xa5, 0xea, 0x84, 0xaa, 0xce, 0x32, 0x32, 0xd5,
	0xdd, 0xa2, 0x49, 0xa6, 0x3a, 0x04, 0xe7, 0x83, 0x46, 0x8a, 0xca, 0x61, 0x89, 0x74, 0x36, 0x41,
	0x18, 0xa4, 0xb8, 0x61, 0x3c, 0x22, 0xe8, 0xb5, 0xfb, 0x9b, 0x7b, 0x8f, 0x3b, 0x4e, 0x6f, 0xbf,
	0xd9, 0x6c, 0xf5, 0x7a, 0xd6, 0x57, 0xd8, 0x9d, 0x9c, 0x4a, 0xd8, 0x45, 0xb7, 0xb8, 0xcf, 0xe3,
	0x63, 0xf4, 0x4d, 0x54, 0x34, 0x2f, 0xe1, 0xf1, 0xb1, 0xda, 0x0b, 0x25, 0x7b, 0x11, 0x8a, 0x32,
	0xfb, 0x1c, 0x2a, 0xc6, 0x51, 0x38, 0x8c, 0xc0, 0x27, 0x93, 0x5b, 0x01, 0xc0, 0xae, 0xc4, 0x2c,
	0x6f, 0xa2, 0x87, 0x66, 0x38, 0x1a, 0xfb, 0x22, 0x11, 0xae, 0xea, 0xa4, 0xbd, 0x79, 0x79, 0x0f,
	0x1f, 0x67, 0x8d, 0x03, 0x38, 0x6c, 0x07, 0xea, 0x23, 0x87, 0xfb, 0x14, 0x3f, 0xa9, 0xd8, 0x6b,
	0x50, 0xa3, 0x5b, 0xdb, 0xf0, 0x7d, 0xcb, 0xd2, 0x5d, 0x35, 0x2f, 0x1b, 0x8c, 0x75, 0x9d, 0x0c,
	0xe7, 0xa6, 0xb3, 0x69, 0x6f, 0x3c, 0x76, 0xe0, 0xf8, 0x6c, 0xd9, 0x4e, 0xd7, 0x6e, 0xff, 0x9f,
	0x96, 0xf5, 0x8d, 0x02, 0xbb, 0x91, 0xf0, 0x61, 0x57, 0x44, 0x71, 0x18, 0x70, 0xbf, 0x1b, 0x79,
	0x5f, 0x15, 0xdd, 0x30, 0xf4, 0x6d, 0x71, 0xca, 0x23, 0x37, 0xff, 0x83, 0x12, 0x75, 0xf5, 0x83,
	0x12, 0x37, 0xd9, 0x72, 0x24, 0xe8, 0xba, 0x50, 0xa7, 0x48, 0x12, 0x40, 0xf7, 0x19, 0x99, 0x37,
	0x52, 0xb7, 0xa9, 0x40, 0x87, 0x17, 0x7e, 0xa2, 0xa3, 0xcb, 0x75, 0x38, 0xbc, 0x00, 0xc2, 0x05,
	0xfb, 0xa6, 0x0c, 0x8a, 0xf5, 0x2e, 0x32, 0x89, 0xf6, 0x70, 0xec, 0xc4, 0x94, 0x3f, 0x76, 0x98,
	0xfa, 0xc8, 0x4d, 0xc5, 0xae, 0x79, 0x71, 0x4f, 0x63, 0xc0, 0x94, 0x1b, 0x27, 0xc6, 0x43, 0x87,
	0xba, 0x5d, 0x71, 0x63, 0x79, 0x25, 0xf1, 0x19, 0xb6, 0x44, 0x7d, 0xc5, 0x32, 0xf9, 0xf0, 0xb6,
	0xfe, 0x19, 0x88, 0xe9, 0x23, 0xb7, 0x15, 0xbd, 0xf5, 0x3a, 0x5d, 0xc4, 0xd0, 0x1b, 0xb7, 0x3d,
	0x7b, 0x67, 0xd3, 0x79, 0xb8, 0xd7, 0xeb, 0x39, 0x1b, 0xcd, 0x7e, 0xfb, 0x51, 0xbb, 0xff, 0xbe,
	0xd3, 0xdc, 0xeb, 0x6c, 0xb5, 0xb7, 0x51, 0x83, 0x5a, 0x3f, 0x55, 0xd4, 0xc4, 0xbd, 0xa7, 0x11,
	0x83, 0xdd, 0x14, 0x8e, 0x45, 0x00, 0x47, 0x37, 0x6a, 0xff, 0xba, 0xad, 0xcb, 0x60, 0x6d, 0x1f,
	0xf0, 0x98, 0xb6, 0x8e, 0x1c, 0x4c, 0x06, 0x34, 0xba, 0xf4, 0xa5, 0xe3, 0x87, 0x43, 0x39, 0x9c,
	0x4f, 0x6a, 0xc5, 0x3f, 0x4f, 0xd7, 0x6f, 0xec, 0x8d, 0x45, 0xb0, 0x13, 0x0e, 0xed, 0xa5, 0x90,
	0xfe, 0xb9, 0xd1, 0x66, 0x4b, 0x12, 0x83, 0x79, 0xc4, 0xc6, 0x13, 0x6f, 0xa4, 0x34, 0x51, 0xc6,
	0xd7, 0x5d, 0x56, 0x6b, 0xc7, 0x71, 0x2a, 0x1c, 0x9a, 0x1d, 0xe9, 0x98, 0x54, 0x11, 0xa3, 0x89,
	0xb3, 0xfe, 0x0b, 0xfb, 0xd8, 0xcc, 0xf9, 0xda, 0xd9, 0xe8, 0xf5, 0x1d, 0x7b, 0xa3, 0xf3, 0x6e,
	0xbb, 0xb3, 0x6d, 0xfd, 0x46, 0x51, 0x53, 0xf7, 0x9e, 0x4a, 0xdd, 0x78, 0xc4, 0xca, 0x11, 0x0f,
	0x8e, 0x95, 0xb5, 0xf7, 0x85, 0xa7, 0x0f, 0xda, 0xfc, 0xfc, 0x8d, 0xc7, 0x61, 0xe4, 0xbb, 0x0f,
	0xc3, 0x38, 0xd6, 0xf7, 0x89, 0xd4, 0xdc, 0x8d, 0x5f, 0x2a, 0xb0, 0x2b, 0x17, 0x2a, 0x73, 0xd7,
	0xa1, 0x75, 0x79, 0x1d, 0x7a, 0x8d, 0xc9, 0x33, 0x71, 0x22, 0xf8, 0x07, 0x26, 0xa2, 0x37, 0x38,
	0x56, 0xd7, 0x29, 0xf0, 0x3f, 0xd0, 0xca, 0x59, 0x92, 0x46, 0x20, 0x95, 0x00, 0xa7, 0xf0, 0xdf,
	0xc4, 0x35, 0xf3, 0x35, 0x26, 0x63, 0x37, 0xea, 0x67, 0xc1, 0xa8, 0x64, 0xbd, 0x95, 0x3b, 0x12,
	0x9b, 0xef, 0x6c, 0x74, 0xb6, 0x5b, 0x4e, 0xbb, 0xdf, 0xda, 0x45, 0xab, 0x4e, 0xde, 0xe9, 0xcb,
	0x03, 0x1b, 0x23, 0xc5, 0xf8, 0x3a, 0xc4, 0x3c, 0x2b, 0xcd, 0x6f, 0x6e, 0x31, 0x26, 0x13, 0x46,
	0x32, 0x03, 0x6e, 0x59, 0x22, 0x6d, 0xb7, 0x61, 0xb1, 0xba, 0x2b, 0x7c, 0x4a, 0x03, 0xd0, 0x9e,
	0x50, 0xdd, 0xae, 0xba, 0xc2, 0x6f, 0x27, 0x62, 0x84, 0x16, 0xfb, 0x1d, 0x56, 0xd3, 0x34, 0x70,
	0xe0, 0xd2, 0x46, 0x67, 0x92, 0x04, 0x4e, 0x5c, 0x8b, 0xd5, 0xb9, 0xeb, 0x1a, 0xad, 0xd0, 0x0c,
	0x54, 0xb9, 0xeb, 0x9a, 0xad, 0x68, 0x1a, 0x68, 0x85, 0x26, 0x83, 0x49, 0x12, 0x69, 0xb4, 0x4e,
	0xfd, 0xa1, 0x34, 0x43, 0xb9, 0x37, 0x9d, 0xde, 0xc6, 0xa3, 0x76, 0x67, 0xdb, 0xe9, 0xee, 0xf5,
	0x9d, 0x76, 0x67, 0x6b, 0xcf, 0xfa, 0x81, 0xf9, 0x7c, 0x6c, 0xa2, 0x92, 0xe2, 0xad, 0xe6, 0x59,
	0x88, 0xf1, 0x56, 0x79, 0x14, 0xca, 0x18, 0xc2, 0x30, 0x24, 0x33, 0x42, 0xee, 0xba, 0x41, 0x1a,
	0x6d, 0x87, 0x68, 0x46, 0xbc, 0xc4, 0xaa, 0xf8, 0xf6, 0x45, 0xd6, 0xcb, 0xa8, 0xf5, 0x88, 0x9f,
	0xc9, 0x7a, 0xd5, 0x78, 0x02, 0x5e, 0xe2, 0x42, 0xd6, 0x78, 0xa2, 0x1e, 0xd7, 0x78, 0x01, 0x7e,
	0x8c, 0xe1, 0x19, 0x39, 0xdc, 0xea, 0xc8, 0x0b, 0xb6, 0xc3, 0x04, 0x83, 0x43, 0x2a, 0x01, 0x0b,
	0x03, 0x11, 0x92, 0x8a, 0xc6, 0x5d, 0x1f, 0xf1, 0x33, 0x0c, 0x47, 0x20, 0x9d, 0x52, 0xe7, 0x93,
	0xc3, 0xdf, 0xde, 0xeb, 0x5b, 0xbf, 0x63, 0xa6, 0xcb, 0xe4, 0xeb, 0x9e, 0xb6, 0xf2, 0x37, 0xd9,
	0x32, 0x70, 0x17, 0x1b, 0x2a, 0xa7, 0x32, 0x0c, 0x93, 0xde, 0xec, 0x0b, 0x7f, 0x33, 0x56, 0x4c,
	0x63, 0xd6, 0xb1, 0xe2, 0xdc, 0x64, 0x97, 0xf3, 0x93, 0x0d, 0x9e, 0x50, 0x43, 0x0f, 0x62, 0xbb,
	0xfd, 0x28, 0x93, 0xe8, 0xe9, 0x26, 0xa8, 0x21, 0xea, 0x45, 0x53, 0xd4, 0xf1, 0x71, 0x82, 0x14,
	0xa1, 0x03, 0xa1, 0xde, 0x82, 0xe1, 0x1d, 0x8a, 0xfc, 0x15, 0xc3, 0x3b, 0xac, 0x36, 0xf4, 0x4e,
	0x84, 0x93, 0x4f, 0xfa, 0x60, 0x80, 0xc9, 0x24, 0xd9, 0x97, 0x59, 0x1d, 0x29, 0x74, 0xca, 0x3e,
	0x05, 0x9e, 0xf0, 0x33, 0xfd, 0xb4, 0xe0, 0xd7, 0x0a, 0x46, 0xee, 0xc2, 0x1c, 0x0c, 0xdf, 0x66,
	0x55, 0x6c, 0x94, 0xbc, 0x21, 0x75, 0x51, 0x03, 0x90, 0x0c, 0xae, 0x29, 0x82, 0x3c, 0xe3, 0x00,
	0x49, 0xc6, 0xdf, 0x60, 0xcb, 0xf2, 0x2a, 0xe8, 0x90, 0x92, 0x09, 0xa7, 0x5e, 0x5c, 0x55, 0xe8,
	0x72, 0xe8, 0x30, 0xb4, 0x7a, 0x86, 0x9e, 0x40, 0x06, 0x3b, 0xed, 0xe6, 0xbb, 0x9d, 0x99, 0xf9,
	0x01, 0x93, 0x73, 0x53, 0x9c, 0x9c, 0x1b, 0xeb, 0x17, 0x4c, 0x4d, 0x32, 0x67, 0xab, 0x4f, 0x1d,
	0xfa, 0x64, 0xb7, 0xa5, 0x0b, 0x4b, 0x32, 0x2b, 0x46, 0x68, 0xfd, 0x73, 0xd1, 0xd8, 0xff, 0x5d,
	0xbb, 0xdd, 0xe9, 0x3b, 0xdd, 0x3d, 0xf8, 0xbb, 0xb3, 0xb7, 0xdd, 0xf8, 0x3c, 0x68, 0x5d, 0x1e,
	0xcb, 0xab, 0xfc, 0x95, 0x07, 0xaf, 0x99, 0x87, 0xc4, 0x05, 0xf2, 0x37, 0xba, 0xa1, 0x47, 0x3f,
	0xcb, 0x69, 0xcb, 0xcf, 0x1a, 0xeb, 0x6c, 0x29, 0x4e, 0x0f, 0x0c, 0xdd, 0xa7, 0x8a, 0x33, 0x83,
	0x9a, 0xc6, 0xef, 0x6c, 0x2e, 0xe4, 0x7e, 0x67, 0x13, 0x9c, 0x72, 0xef, 0x1c, 0x7f, 0xdc, 0x4c,
	0xca, 0xd5, 0x92, 0xeb, 0x9d, 0x6f, 0x8a, 0x78, 0x60, 0xfd, 0x66, 0x81, 0x2d, 0xeb, 0xfe, 0x1b,
	0x35, 0x56, 0xe9, 0xf6, 0x9d, 0x56, 0xa7, 0xdf, 0xb2, 0xd7, 0x0a, 0xb2, 0x84, 0xa1, 0x8e, 0xb5,
	0x62, 0x63, 0x95, 0x55, 0xbb, 0x7d, 0xad, 0xc8, 0xd7, 0x4a, 0x8d, 0x35, 0x56, 0xeb, 0x82, 0x4e,
	0xeb, 0xdb, 0x7b, 0x9b, 0xfb, 0xcd, 0xd6, 0xda, 0x82, 0x24, 0xe9, 0xdb, 0xad, 0x8d, 0xde, 0xbe,
	0xdd, 0x5a, 0x2b, 0xcb, 0x16, 0x76, 0x5a, 0x1b, 0x8f, 0x5a, 0x6b, 0x8b, 0x8d, 0x3a, 0x5b, 0x86,
	0xf6, 0x36, 0x76, 0xf6, 0xf6, 0x3a, 0x6b, 0x4b, 0xb2, 0xb2, 0xb9, 0xd3, 0x6e, 0xbe, 0xbb, 0x56,
	0x69, 0xac, 0x30, 0x06, 0xa4, 0x7b, 0x1b, 0x9b, 0xed, 0xce, 0xf6, 0xda, 0x72, 0x83, 0xb1, 0xc5,
	0x6e, 0xdf, 0xd9, 0x6c, 0xbf, 0xbf, 0xc6, 0xac, 0x07, 0x86, 0xb2, 0xe9, 0xb4, 0x1e, 0x77, 0x77,
	0x36, 0xde, 0x6f, 0xd9, 0xa4, 0x4d, 0x2f, 0x13, 0x00, 0xeb, 0x0f, 0x0a, 0xcc, 0xca, 0x52, 0xdc,
	0xc1, 0xbf, 0x7c, 0xb8, 0xd7, 0xd9, 0xef, 0x39, 0xbb, 0xed, 0x5e, 0xaf, 0xbd, 0xd7, 0x71, 0xec,
	0xd6, 0xe3, 0x0d, 0x7b, 0x13, 0x15, 0x92, 0x87, 0xd7, 0x9e, 0xa6, 0x42, 0x22, 0xa4, 0xed, 0x36,
	0x3e, 0xc6, 0xd6, 0x54, 0x75, 0xce, 0xd8, 0x2e, 0xdb, 0xab, 0x12, 0x57, 0xf6, 0x36, 0x38, 0xa8,
	0xa0, 0xbb, 0x8c, 0xd6, 0x64, 0x7e, 0xdf, 0x30, 0x4c, 0x76, 0x75, 0x83, 0x14, 0xc6, 0x3b, 0xf4,
	0x02, 0x2f, 0x3e, 0xc2, 0x55, 0xc2, 0x10, 0xe4, 0x16, 0x96, 0xcd, 0xfd, 0xdd, 0x74, 0xb6, 0x5a,
	0xad, 0x4d, 0x0c, 0x32, 0xce, 0x7e, 0xbb, 0x8b, 0x3f, 0xca, 0xe2, 0x8c, 0x8f, 0xc2, 0x40, 0x05,
	0x87, 0xaa, 0x84, 0x75, 0x01, 0x6a, 0xac, 0xb0, 0xe2, 0x93, 0x27, 0x52, 0x52, 0x8a, 0x4f, 0x9e,
	0x80, 0x64, 0xe5, 0xdf, 0xce, 0xaa, 0x22, 0x26, 0x25, 0x09, 0xe1, 0x1e, 0xf0, 0xc1, 0x71, 0x16,
	0x27, 0xab, 0xdb, 0x35, 0x05, 0xa2, 0x85, 0xfc, 0xc8, 0x50, 0x40, 0x19, 0x83, 0x59, 0x5c, 0xd0,
	0x08, 0x93, 0xc8, 0xb8, 0xa0, 0xfa, 0x21, 0x39, 0xdd, 0x76, 0xb6, 0xc5, 0x15, 0xd4, 0x76, 0xad,
	0x4f, 0xea, 0xe7, 0x10, 0xc6, 0xc0, 0x95, 0x87, 0x7d, 0xf9, 0x22, 0xff, 0x5b, 0xd1, 0x78, 0x46,
	0x31, 0xff, 0x77, 0x8d, 0x6d, 0x70, 0x29, 0x0e, 0xf1, 0x81, 0x26, 0x18, 0x71, 0x6f, 0xe5, 0x8d,
	0xb8, 0x0b, 0x0d, 0x81, 0xb6, 0xdb, 0x52, 0xcc, 0x06, 0x87, 0xe1, 0xb6, 0x6d, 0xd3, 0xf7, 0x37,
	0xfe, 0xb5, 0xc0, 0xae, 0x5c, 0xa8, 0x04, 0xa9, 0xd1, 0xc3, 0x55, 0xb3, 0x4d, 0x99, 0xb1, 0xab,
	0x0a, 0x6f, 0x4e, 0x99, 0x75, 0x57, 0xbd, 0x89, 0x5d, 0xc8, 0x66, 0x7d, 0x53, 0xbe, 0x78, 0x8d,
	0xc4, 0x89, 0x88, 0x2e, 0xdc, 0xa7, 0x13, 0xba, 0x6f, 0x5c, 0x88, 0x20, 0x15, 0x36, 0x54, 0x56,
	0xb1, 0x39, 0x80, 0xb0, 0x99, 0x2c, 0x1d, 0x50, 0x9a, 0x32, 0xb1, 0xce, 0x23, 0x32, 0x57, 0x67,
	0x69, 0x72, 0x75, 0x64, 0xe4, 0x0e, 0xdf, 0xe3, 0x56, 0xe4, 0xc1, 0x17, 0xdb, 0x3c, 0x11, 0xc6,
	0x0f, 0x64, 0x9a, 0xcb, 0xb6, 0xdf, 0xdd, 0xdc, 0xe8, 0xcf, 0xd6, 0xcd, 0x33, 0xa5, 0x01, 0x37,
	0xc9, 0x08, 0x6c, 0x84, 0x34, 0xf2, 0x95, 0x96, 0x43, 0x60, 0x3f, 0xf2, 0xad, 0x2f, 0xeb, 0x7d,
	0x3d, 0x45, 0x54, 0xc0, 0xc3, 0xe8, 0xb7, 0x3a, 0xfd, 0x67, 0xef, 0xdc, 0xfa, 0x7d, 0x53, 0x71,
	0x7c, 0x04, 0x1d, 0x50, 0x6a, 0x3d, 0xae, 0x93, 0x92, 0x0d, 0x1a, 0x62, 0x9d, 0x50, 0x25, 0x19,
	0xf7, 0xe9, 0xf9, 0x55, 0x94, 0x38, 0xd9, 0x5c, 0xc8, 0xe7, 0xee, 0x84, 0xb7, 0xe5, 0x8c, 0x3c,
	0x2c, 0xbe, 0x53, 0xfa, 0x8f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0c, 0xd8, 0xd5, 0x48, 0xa9, 0x5a,
	0x00, 0x00,
}
