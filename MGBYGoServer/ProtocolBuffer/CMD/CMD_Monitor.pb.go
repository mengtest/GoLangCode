// Code generated by protoc-gen-go. DO NOT EDIT.
// source: CMD_Monitor.proto

/*
Package CMD is a generated protocol buffer package.

Namespace: MESSAGE

It is generated from these files:
	CMD_Monitor.proto

It has these top-level messages:
	CMD_MONITOR_CLIENT_REG
	CMD_MONITOR_SERVER_REG
	TagMonitorItem
	CMD_MONITOR_ITEM_LST
	CMD_MONITOR_NEW_ITEM
	CMD_MONITOR_DEL_ITEM
	CMD_MONITOR_ITEM_STATE
	CMD_MONITOR_LOG
	CMD_MONITOR_CMD
	CMD_MONITOR_CMD_RESP
*/
package CMD

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CMD_MONITOR_CLIENT_REG struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_MONITOR_CLIENT_REG) Reset()                    { *m = CMD_MONITOR_CLIENT_REG{} }
func (m *CMD_MONITOR_CLIENT_REG) String() string            { return proto.CompactTextString(m) }
func (*CMD_MONITOR_CLIENT_REG) ProtoMessage()               {}
func (*CMD_MONITOR_CLIENT_REG) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CMD_MONITOR_SERVER_REG struct {
	ServerId         *int32 `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	ServerName       []byte `protobuf:"bytes,2,opt,name=server_name,json=serverName" json:"server_name,omitempty"`
	StartTime        *int32 `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	RoomState        *int32 `protobuf:"varint,4,opt,name=room_state,json=roomState" json:"room_state,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_MONITOR_SERVER_REG) Reset()                    { *m = CMD_MONITOR_SERVER_REG{} }
func (m *CMD_MONITOR_SERVER_REG) String() string            { return proto.CompactTextString(m) }
func (*CMD_MONITOR_SERVER_REG) ProtoMessage()               {}
func (*CMD_MONITOR_SERVER_REG) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CMD_MONITOR_SERVER_REG) GetServerId() int32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *CMD_MONITOR_SERVER_REG) GetServerName() []byte {
	if m != nil {
		return m.ServerName
	}
	return nil
}

func (m *CMD_MONITOR_SERVER_REG) GetStartTime() int32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *CMD_MONITOR_SERVER_REG) GetRoomState() int32 {
	if m != nil && m.RoomState != nil {
		return *m.RoomState
	}
	return 0
}

// 服务器基本信息
type TagMonitorItem struct {
	ServerId         *int32 `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	ServerName       []byte `protobuf:"bytes,2,opt,name=server_name,json=serverName" json:"server_name,omitempty"`
	StartTime        *int32 `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	RoomState        *int32 `protobuf:"varint,4,opt,name=room_state,json=roomState" json:"room_state,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TagMonitorItem) Reset()                    { *m = TagMonitorItem{} }
func (m *TagMonitorItem) String() string            { return proto.CompactTextString(m) }
func (*TagMonitorItem) ProtoMessage()               {}
func (*TagMonitorItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TagMonitorItem) GetServerId() int32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *TagMonitorItem) GetServerName() []byte {
	if m != nil {
		return m.ServerName
	}
	return nil
}

func (m *TagMonitorItem) GetStartTime() int32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *TagMonitorItem) GetRoomState() int32 {
	if m != nil && m.RoomState != nil {
		return *m.RoomState
	}
	return 0
}

// 监控服务器列表
type CMD_MONITOR_ITEM_LST struct {
	Items            []*TagMonitorItem `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CMD_MONITOR_ITEM_LST) Reset()                    { *m = CMD_MONITOR_ITEM_LST{} }
func (m *CMD_MONITOR_ITEM_LST) String() string            { return proto.CompactTextString(m) }
func (*CMD_MONITOR_ITEM_LST) ProtoMessage()               {}
func (*CMD_MONITOR_ITEM_LST) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CMD_MONITOR_ITEM_LST) GetItems() []*TagMonitorItem {
	if m != nil {
		return m.Items
	}
	return nil
}

// 服务器
type CMD_MONITOR_NEW_ITEM struct {
	Item             *TagMonitorItem `protobuf:"bytes,1,opt,name=item" json:"item,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CMD_MONITOR_NEW_ITEM) Reset()                    { *m = CMD_MONITOR_NEW_ITEM{} }
func (m *CMD_MONITOR_NEW_ITEM) String() string            { return proto.CompactTextString(m) }
func (*CMD_MONITOR_NEW_ITEM) ProtoMessage()               {}
func (*CMD_MONITOR_NEW_ITEM) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CMD_MONITOR_NEW_ITEM) GetItem() *TagMonitorItem {
	if m != nil {
		return m.Item
	}
	return nil
}

type CMD_MONITOR_DEL_ITEM struct {
	ServerId         *int32 `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_MONITOR_DEL_ITEM) Reset()                    { *m = CMD_MONITOR_DEL_ITEM{} }
func (m *CMD_MONITOR_DEL_ITEM) String() string            { return proto.CompactTextString(m) }
func (*CMD_MONITOR_DEL_ITEM) ProtoMessage()               {}
func (*CMD_MONITOR_DEL_ITEM) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CMD_MONITOR_DEL_ITEM) GetServerId() int32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

// 更新运行状态信息
type CMD_MONITOR_ITEM_STATE struct {
	ServerId         *int32 `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	Memory           *int64 `protobuf:"varint,2,opt,name=memory" json:"memory,omitempty"`
	Cpu              *int32 `protobuf:"varint,3,opt,name=cpu" json:"cpu,omitempty"`
	IoRead           *int64 `protobuf:"varint,4,opt,name=io_read,json=ioRead" json:"io_read,omitempty"`
	IoWrite          *int64 `protobuf:"varint,5,opt,name=io_write,json=ioWrite" json:"io_write,omitempty"`
	Online           *int32 `protobuf:"varint,6,opt,name=online" json:"online,omitempty"`
	RoomState        *int32 `protobuf:"varint,7,opt,name=room_state,json=roomState" json:"room_state,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_MONITOR_ITEM_STATE) Reset()                    { *m = CMD_MONITOR_ITEM_STATE{} }
func (m *CMD_MONITOR_ITEM_STATE) String() string            { return proto.CompactTextString(m) }
func (*CMD_MONITOR_ITEM_STATE) ProtoMessage()               {}
func (*CMD_MONITOR_ITEM_STATE) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CMD_MONITOR_ITEM_STATE) GetServerId() int32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *CMD_MONITOR_ITEM_STATE) GetMemory() int64 {
	if m != nil && m.Memory != nil {
		return *m.Memory
	}
	return 0
}

func (m *CMD_MONITOR_ITEM_STATE) GetCpu() int32 {
	if m != nil && m.Cpu != nil {
		return *m.Cpu
	}
	return 0
}

func (m *CMD_MONITOR_ITEM_STATE) GetIoRead() int64 {
	if m != nil && m.IoRead != nil {
		return *m.IoRead
	}
	return 0
}

func (m *CMD_MONITOR_ITEM_STATE) GetIoWrite() int64 {
	if m != nil && m.IoWrite != nil {
		return *m.IoWrite
	}
	return 0
}

func (m *CMD_MONITOR_ITEM_STATE) GetOnline() int32 {
	if m != nil && m.Online != nil {
		return *m.Online
	}
	return 0
}

func (m *CMD_MONITOR_ITEM_STATE) GetRoomState() int32 {
	if m != nil && m.RoomState != nil {
		return *m.RoomState
	}
	return 0
}

// 日志输出
type CMD_MONITOR_LOG struct {
	ServerId         *int32 `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	LogLevel         *int32 `protobuf:"varint,2,opt,name=log_level,json=logLevel" json:"log_level,omitempty"`
	LogTime          *int64 `protobuf:"varint,3,opt,name=log_time,json=logTime" json:"log_time,omitempty"`
	LogText          []byte `protobuf:"bytes,4,opt,name=log_text,json=logText" json:"log_text,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_MONITOR_LOG) Reset()                    { *m = CMD_MONITOR_LOG{} }
func (m *CMD_MONITOR_LOG) String() string            { return proto.CompactTextString(m) }
func (*CMD_MONITOR_LOG) ProtoMessage()               {}
func (*CMD_MONITOR_LOG) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CMD_MONITOR_LOG) GetServerId() int32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *CMD_MONITOR_LOG) GetLogLevel() int32 {
	if m != nil && m.LogLevel != nil {
		return *m.LogLevel
	}
	return 0
}

func (m *CMD_MONITOR_LOG) GetLogTime() int64 {
	if m != nil && m.LogTime != nil {
		return *m.LogTime
	}
	return 0
}

func (m *CMD_MONITOR_LOG) GetLogText() []byte {
	if m != nil {
		return m.LogText
	}
	return nil
}

// 控制指令
type CMD_MONITOR_CMD struct {
	ServerId         *int32 `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	ClientId         *int32 `protobuf:"varint,2,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	Cmd              []byte `protobuf:"bytes,3,opt,name=cmd" json:"cmd,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_MONITOR_CMD) Reset()                    { *m = CMD_MONITOR_CMD{} }
func (m *CMD_MONITOR_CMD) String() string            { return proto.CompactTextString(m) }
func (*CMD_MONITOR_CMD) ProtoMessage()               {}
func (*CMD_MONITOR_CMD) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CMD_MONITOR_CMD) GetServerId() int32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *CMD_MONITOR_CMD) GetClientId() int32 {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return 0
}

func (m *CMD_MONITOR_CMD) GetCmd() []byte {
	if m != nil {
		return m.Cmd
	}
	return nil
}

// 控制指令
type CMD_MONITOR_CMD_RESP struct {
	ServerId         *int32 `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	ClientId         *int32 `protobuf:"varint,2,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	Result           []byte `protobuf:"bytes,3,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMD_MONITOR_CMD_RESP) Reset()                    { *m = CMD_MONITOR_CMD_RESP{} }
func (m *CMD_MONITOR_CMD_RESP) String() string            { return proto.CompactTextString(m) }
func (*CMD_MONITOR_CMD_RESP) ProtoMessage()               {}
func (*CMD_MONITOR_CMD_RESP) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CMD_MONITOR_CMD_RESP) GetServerId() int32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *CMD_MONITOR_CMD_RESP) GetClientId() int32 {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return 0
}

func (m *CMD_MONITOR_CMD_RESP) GetResult() []byte {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*CMD_MONITOR_CLIENT_REG)(nil), "CMD.CMD_MONITOR_CLIENT_REG")
	proto.RegisterType((*CMD_MONITOR_SERVER_REG)(nil), "CMD.CMD_MONITOR_SERVER_REG")
	proto.RegisterType((*TagMonitorItem)(nil), "CMD.tagMonitorItem")
	proto.RegisterType((*CMD_MONITOR_ITEM_LST)(nil), "CMD.CMD_MONITOR_ITEM_LST")
	proto.RegisterType((*CMD_MONITOR_NEW_ITEM)(nil), "CMD.CMD_MONITOR_NEW_ITEM")
	proto.RegisterType((*CMD_MONITOR_DEL_ITEM)(nil), "CMD.CMD_MONITOR_DEL_ITEM")
	proto.RegisterType((*CMD_MONITOR_ITEM_STATE)(nil), "CMD.CMD_MONITOR_ITEM_STATE")
	proto.RegisterType((*CMD_MONITOR_LOG)(nil), "CMD.CMD_MONITOR_LOG")
	proto.RegisterType((*CMD_MONITOR_CMD)(nil), "CMD.CMD_MONITOR_CMD")
	proto.RegisterType((*CMD_MONITOR_CMD_RESP)(nil), "CMD.CMD_MONITOR_CMD_RESP")
}

func init() { proto.RegisterFile("CMD_Monitor.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 463 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x52, 0x4d, 0x6f, 0xd4, 0x30,
	0x10, 0x55, 0x9a, 0xee, 0xd7, 0x74, 0xc5, 0x87, 0x41, 0x4b, 0x50, 0x85, 0x58, 0xe5, 0xc2, 0x72,
	0xd9, 0x03, 0xfc, 0x00, 0x54, 0x12, 0x0b, 0x22, 0x25, 0xbb, 0xc8, 0x89, 0xe8, 0x09, 0x59, 0x51,
	0x33, 0x5a, 0x2c, 0xc5, 0x71, 0xe5, 0xb8, 0xa5, 0x1c, 0xb9, 0x73, 0xe4, 0x57, 0xf1, 0xab, 0x90,
	0x9d, 0x80, 0x9a, 0x95, 0xe8, 0x1e, 0x38, 0x70, 0xf3, 0xbc, 0x67, 0x3f, 0xbf, 0x79, 0x33, 0xf0,
	0x30, 0xca, 0x62, 0x9e, 0xa9, 0x46, 0x18, 0xa5, 0xd7, 0x97, 0x5a, 0x19, 0x45, 0xfc, 0x28, 0x8b,
	0xc3, 0x00, 0x16, 0x8e, 0xd9, 0x6e, 0x92, 0x62, 0xcb, 0x78, 0x94, 0x26, 0x74, 0x53, 0x70, 0x46,
	0xdf, 0x85, 0x3f, 0xbc, 0x21, 0x95, 0x53, 0xf6, 0x91, 0x32, 0x4b, 0x91, 0x53, 0x98, 0xb5, 0xa8,
	0xaf, 0x51, 0x73, 0x51, 0x05, 0xde, 0xd2, 0x5b, 0x8d, 0xd8, 0xb4, 0x03, 0x92, 0x8a, 0x3c, 0x87,
	0x93, 0x9e, 0x6c, 0x4a, 0x89, 0xc1, 0xd1, 0xd2, 0x5b, 0xcd, 0x19, 0x74, 0xd0, 0xa6, 0x94, 0x48,
	0x9e, 0x01, 0xb4, 0xa6, 0xd4, 0x86, 0x1b, 0x21, 0x31, 0xf0, 0xdd, 0xf3, 0x99, 0x43, 0x0a, 0xd1,
	0xd1, 0x5a, 0x29, 0xc9, 0x5b, 0x53, 0x1a, 0x0c, 0x8e, 0x3b, 0xda, 0x22, 0xb9, 0x05, 0xc2, 0xef,
	0x1e, 0xdc, 0x33, 0xe5, 0xae, 0x6f, 0x25, 0x31, 0x28, 0xff, 0xab, 0x9d, 0x33, 0x78, 0x7c, 0x3b,
	0xa4, 0xa4, 0xa0, 0x19, 0x4f, 0xf3, 0x82, 0xbc, 0x84, 0x91, 0x30, 0x28, 0xdb, 0xc0, 0x5b, 0xfa,
	0xab, 0x93, 0x57, 0x8f, 0xd6, 0x51, 0x16, 0xaf, 0x87, 0xbe, 0x59, 0x77, 0x23, 0x7c, 0x33, 0x94,
	0xd8, 0xd0, 0x73, 0x27, 0x43, 0x5e, 0xc0, 0xb1, 0xbd, 0xe0, 0x3a, 0xfa, 0x8b, 0x82, 0xbb, 0x10,
	0xbe, 0x1e, 0x0a, 0xc4, 0x34, 0xed, 0x04, 0xee, 0xca, 0x25, 0xfc, 0xb9, 0x37, 0x5e, 0xe7, 0x3c,
	0x2f, 0xce, 0x0a, 0x7a, 0x77, 0x9e, 0x0b, 0x18, 0x4b, 0x94, 0x4a, 0x7f, 0x75, 0x51, 0xfa, 0xac,
	0xaf, 0xc8, 0x03, 0xf0, 0x2f, 0x2e, 0xaf, 0xfa, 0xfc, 0xec, 0x91, 0x3c, 0x81, 0x89, 0x50, 0x5c,
	0x63, 0x59, 0xb9, 0xd8, 0x7c, 0x36, 0x16, 0x8a, 0x61, 0x59, 0x91, 0xa7, 0x30, 0x15, 0x8a, 0x7f,
	0xd1, 0xc2, 0x60, 0x30, 0x72, 0xcc, 0x44, 0xa8, 0x73, 0x5b, 0x5a, 0x75, 0xd5, 0xd4, 0xa2, 0xc1,
	0x60, 0xec, 0x84, 0xfa, 0x6a, 0x6f, 0x0a, 0x93, 0xfd, 0x29, 0x7c, 0xf3, 0xe0, 0xfe, 0xed, 0x66,
	0xd2, 0xed, 0x81, 0x25, 0x3d, 0x85, 0x59, 0xad, 0x76, 0xbc, 0xc6, 0x6b, 0xac, 0x5d, 0x23, 0x23,
	0x36, 0xad, 0xd5, 0x2e, 0xb5, 0xb5, 0xf5, 0x67, 0xc9, 0x3f, 0xfb, 0xe0, 0xb3, 0x49, 0xad, 0x76,
	0x6e, 0x1b, 0x7e, 0x53, 0x78, 0x63, 0x5c, 0x53, 0xf3, 0x8e, 0xc2, 0x1b, 0x13, 0x7e, 0x1a, 0x5a,
	0x88, 0xb2, 0xf8, 0xa0, 0x85, 0x8b, 0x5a, 0x60, 0x63, 0x2c, 0xd9, 0x5b, 0xe8, 0x80, 0xa4, 0x72,
	0x69, 0xca, 0xca, 0xfd, 0x3e, 0x67, 0xf6, 0x18, 0x7e, 0x1e, 0x0e, 0xd9, 0x9e, 0x19, 0xcd, 0x3f,
	0xfc, 0xc3, 0x1f, 0x0b, 0x18, 0x6b, 0x6c, 0xaf, 0x6a, 0xd3, 0x7f, 0xd3, 0x57, 0x6f, 0x8f, 0xde,
	0xfb, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0xb6, 0x64, 0xb2, 0x62, 0x2f, 0x04, 0x00, 0x00,
}
